<apex:component controller="ClassEditController" allowDML="true">

    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

    <!-- group class edit popup start-->
    <div class="slds-hide" id="newGroupClassCMP">

        <!--  -->
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1"
            class="slds-modal slds-fade-in-open">
            <div class="slds-modal__container" style="padding: 10px;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="newBookingDetailsHeader" class="slds-text-heading_medium slds-hyphenate">Edit Class</h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close"
                        onclick="$('#newGroupClassCMP').addClass('slds-hide');return false;">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </a>
                </header>

                <div class="" id="newGroupClassModalBody" style="overflow-y: none;background: white;">
                    <!-- tabs-->
                    <div class="slds-tabs_default">
                        <ul class="slds-tabs_default__nav" role="tablist">
                            <li id="ClassDetails" class="slds-tabs--default__item slds-text-heading--label slds-active" title="Details" role="presentation">
                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="DetailsTab"
                                    id="DetailsTabitem">
                                    Details
                                </a>
                            </li>
                            <li id="ClassCustomers" class="slds-tabs--default__item slds-text-heading--label slds-active" title="Customer" role="presentation">
                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="CustomersTab"
                                    id="CustomersTabitem">
                                    Customers
                                </a>
                            </li>
                            <!--<li class="slds-tabs--default__item slds-text-heading--label" title="Notes" role="presentation">
                                    <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="true" aria-controls="tab-default-7" id="tab-default-7__item">
                                        Notes
                                    </a>
                                </li>-->
                            <li id="ClassHistory" class="slds-tabs--default__item slds-text-heading--label slds-active" title="History" role="presentation">
                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="false" aria-controls="HistoryTab"
                                    id="HistoryTabitem">
                                    History
                                </a>
                            </li>

                        </ul>

                        <div id="DetailsTab" class="slds-tabs--default__content  slds-hide" role="tabpanel" aria-labelledby="DetailsTabitem">
                            <div class="slds-p-around_medium" style="height: 250px;overflow-y: auto;">
                                <div class="slds-grid slds-wrap slds-m-top_small">
                                    <!-- center or teacher-->
                                    
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Location:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="LocationNameEditClass"></label>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Teacher:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <span>
                                                    <label id="TeacherNameEditClass"></label>
                                                </span>
                                            </div>
                                        </div>
                                    
                                        <!-- added by jatin: 18-dec-2019: for show class type-->
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Class Type:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassTypeEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                        <!-- added by jatin: 18-dec-2019: for show class instrument-->
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small aureusGroupClassBookingDetail">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Class Instrument :</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassInstrumentEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                    

                                    <!-- time or class type-->
                                        <!-- added by jatin: 31-dec-2019: for show class start date -->
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Start Date:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="StartDateEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Time:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassTimeEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                    
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small aureusGroupClassBookingDetail">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Package:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassPackageEditSelect"></label>
                                                </span>
                                            </div>
                                        </div>
                                        
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Duration:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassDurationEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                    

                                    <!-- Class Capacity or Package -->
                                    
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Class Capacity:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassCapacityEditInput"></label>
                                                </span>
                                            </div>
                                        </div>
                                    
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Available Capacity:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="AvailableCapacityEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                    
                                    <!--  added by jatin: 18-dec-2019: for show Minimum or Maximum Age-->
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Minimum Age:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassMinimumAgeEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Maximum Age:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassMaximumAgeEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                    
                                    <!-- time or class type-->
                                
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small aureusGroupClassBookingDetail">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Price:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12">
                                                <span>
                                                    <label id="ClassPriceEditLabel"></label>
                                                </span>
                                            </div>
                                        </div>
                                        <!-- added by nishi: 2-Sep-2020: for manage ossia group lesson details in ossia case we show grade other wise we show package realed details -->
                                        <div class="slds-col slds-size_6-of-12 slds-grid slds-m-top_small ossiaGroupClassBookingDetail">
                                            <div class="slds-col slds-size_4-of-12">
                                                <span>
                                                    <b>Grade:</b>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_8-of-12 slds-grid slds-wrap">
                                                <div class="slds-col slds-size_12-of-12">
                                                    <span>
                                                        <label id="ClassOssiaGradeEditLabel"></label>
                                                    </span>
                                                </div>
                                                <div class="slds-col slds-size_12-of-12">
                                                    <div>
                                                        <a href="javascript:void(0);" id="showGroupClassGradeDetials">
                                                            Grade Details 
                                                        </a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    <!-- added by nishi: 2-Sep-2020: for manage ossia group lesson details in ossia case we show grade other wise we show package realed details -->
                                </div>
                            </div>
                             <!-- added by nishi-3-Nov-2020: for Deactivate Group class-->
                            <footer class="slds-modal__footer deactivateGroup" style="margin-bottom: -20px;">
                                <button class="slds-button button-shadow slds-button_brand" aria-pressed="false" id="DeactivateGroupClass" title="Deactivate Class"
                                    onclick="DeactiveGroupclassConfirmation(); return false;">Deactivate Class
                                </button>
                            </footer>
                             <!-- added by nishi-3-Nov-2020: for Deactivate Group class-->
                        </div>
                        <div id="CustomersTab" class="slds-tabs--default__content slds-hide" role="tabpanel" aria-labelledby="CustomersTabitem">

                          <!--Demo Of data UI!-->
                            <div id="classStudentSection" style="height: 250px;overflow-y: auto;">
                                <div class="slds-col slds-size_1-of-1 slds-p-around_small">
                                    <table aria-multiselectable="true" class="slds-table slds-table_bordered slds-table_fixed-layout slds-table_resizable-cols"
                                        role="grid">
                                        <thead>
                                            <tr class="slds-line-height_reset">
                                                <th aria-label="Name" aria-sort="none" class="slds-is-resizable slds-is-sortable" scope="col">
                                                    <span class="slds-truncate" title="Booking Name">Booking Name</span>
                                                </th>
                                                <th aria-label="Name" aria-sort="none" class="slds-is-resizable slds-is-sortable" scope="col">
                                                    <span class="slds-truncate" title="Student Name">Student Name</span>
                                                </th>
                                                <th aria-label="Name" aria-sort="none" class="slds-is-resizable slds-is-sortable" scope="col">
                                                    <span class="slds-truncate" title="Parent Name">Parent Name</span>
                                                </th>
                                                <th aria-label="Name" aria-sort="none" class="slds-is-resizable slds-is-sortable" scope="col">
                                                    <span class="slds-truncate" title="Status">Status</span>
                                                </th>
                                                <th aria-label="Name" aria-sort="none" class="slds-is-resizable slds-is-sortable" scope="col">
                                                    <span class="slds-truncate" title="Type">Type</span>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="attendiesTableBody">

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <!--End of table -->
                            
                            <!-- @jatin: 13-dec- 2019: add Makeup button for added new customer -->
                            <footer class="slds-modal__footer" style="margin-bottom: -20px;">
                                <button class="slds-button button-shadow slds-button_brand" aria-pressed="false" id="MakeupCustomer" title="Add Make-up Customer"
                                    onclick="newGroupAppointmentPopup('MakeUp');return false;">Add Make-Up Booking
                                </button>
                                <!-- added by nishi::2-nov-2020:start: for manage makeup and adhoc bookings -->
                                 <button class="slds-button button-shadow slds-button_brand" aria-pressed="false" id="AddhocCustomer" title="Add AdHoc Customer"
                                    onclick="newGroupAppointmentPopup('AdHoc');return false;">Add AdHoc Group Booking
                                </button> 
                                <!-- added by nishi:2-nov-2020:end: for manage makeup and adhoc bookings -->
                            </footer>
                        </div>
                        <div id="HistoryTab" class="slds-tabs--default__content slds-hide" role="tabpanel" aria-labelledby="HistoryTabitem"
                            style="height: 300px;overflow-y: auto;">
                            <p id="bookingClassHistory" class="slds-m-around_small"></p>
                        </div>

                    </div>
                </div>
                 <footer class="slds-modal__footer   slds-hide groupReschdule" >
                    <button class="slds-button slds-button_neutral" aria-pressed="false" id="cancelGroupChanges" onclick="cancelRescheduling();return false;">Cancel</button>
                    <button class="slds-button slds-button_brand" aria-pressed="false" id="ReschedulingGroupChanges" onclick="commitgrouplesson();return false;">Confirm Changes</button>
                </footer>
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!-- group class edit popup end-->

    <!--@jatin:17-dec-2019: group class add new makeup customer Start-->
    <!-- New Appointment create popup -->
    <div class="slds-hide" id="newGroupMakupBookingDetails">
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1"
            class="slds-modal slds-fade-in-open">
            <div class="slds-modal__container" style="padding: 10px;max-width: 50rem;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="newGroupMakupBookingDetailsHeader" class="slds-text-heading_medium slds-hyphenate">Add Make-Up Booking</h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close"
                        onclick="$('#newGroupMakupBookingDetails').addClass('slds-hide');$('#newGroupClassCMP').removeClass('slds-hide');refreshNewGroupMakupBookingPopup();">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="newGroupMakupBookingDetailsBody" style="overflow-y: auto;height:280">
                    <div class="slds-grid slds-wrap slds-p-around_xx-small">
                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap slds-m-top_large">
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label hyphens-none-fix" style="hyphens:none" for="GroupMakupCenterNameLabel">
                                            <b>Location:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" ><!--style="top: 3px;padding-left:10px;"-->
                                            <label id="GroupMakupCenterNameLabel"></label>
                                        </div>
                                    </div>
                                </div>
                            </div> 
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label hyphens-none-fix" for="GroupMakupStudentInput">
                                            <b>Student:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control">
                                            <div class="slds-combobox_container">
                                                <div class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click " aria-expanded="false" aria-haspopup="listbox"
                                                    role="combobox" id="GroupMakupStudentSelectContainer">
                                                    <div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right" role="none">
                                                        <input class="slds-input slds-combobox__input" id="GroupMakupStudentInput" aria-autocomplete="list" aria-controls="listbox-id-1"
                                                            autocomplete="off" role="textbox" type="text" placeholder="Student Name"
                                                            value="" />
    
                                                    </div>
                                                    <div id="listbox-id-1" class="slds-dropdown slds-dropdown_length-with-icon-7 slds-dropdown_fluid" role="listbox" style="max-height: 160px;">
                                                        <ul class="slds-listbox slds-listbox_vertical" role="presentation" id="GroupMakupStudentSearchList">
    
                                                        </ul>
                                                    </div>
    
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div> 
                        
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label hyphens-none-fix" for="GroupMakupDateLabel">
                                            <b>Date:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <label class="slds-form- element__label" id="GroupMakupDateLabel"></label>
                                        </div>
                                    </div>
                                </div>
                            </div> 
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label hyphens-none-fix" for="GroupMakupParentInput">
                                            <b>Parent:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <input id="GroupMakupParentInput" placeholder="Parent Name" class="slds-input" type="text" value="" />
                                        </div>
                                    </div>
                                </div>
                            </div> 
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label" for="GroupMakupTimeLabel">
                                            <b>Time:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <label id="GroupMakupTimeLabel"></label>
                                        </div>
                                    </div>
                                </div>
                            </div> 
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label" for="GroupMakupPhoneInput">
                                            <b>Phone:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <input id="GroupMakupPhoneInput" placeholder="Phone" class="slds-input" type="text" value="" />
                                        </div>
                                    </div>
                                </div>
                            </div> 
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium makeupPackage">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label" for="GroupMakupPackageLabel">
                                            <b>Package:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <label id="GroupMakupPackageLabel"></label>
                                        </div>
                                    </div>
                                </div>
                            </div> 
                            <!-- added by nishi-3-Nov-2020: for show adhoc package list-->
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium adhocPackage">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label" for="ossiaGroupClassAdhocPackage">
                                            <b>Package:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <select class="slds-select" id="ossiaGroupClassAdhocPackage" disabled="true"  onchange="handleOssiaGroupclassAdhocPackage(); return false;"> 
                                            </select>
                                            <label class="" id="GroupAdhocPackageErrorMsg" style="color:red;"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>   
                             <!-- added by nishi-3-Nov-2020: for show adhoc package list-->
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label" for="GroupMakupEmailInput">
                                            <b>Email:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <input id="GroupMakupEmailInput" placeholder="Email" class="slds-input" type="text" value="" />
                                        </div>
                                    </div>
                                </div>
                            </div>    
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label hyphens-none-fix" for="GroupMakupDurationLabel">
                                            <b>Duration:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" style="padding-left:10px;">
                                            <label id="GroupMakupDurationLabel"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>    
                            
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium ossiaGroupClassMakeupBooking slds-hide">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label hyphens-none-fix" for="ossiaGroupClassInstrment">
                                            <b>Instrument:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control" >
                                            <select class="slds-select" id="ossiaGroupClassInstrment" disabled="true"  onchange="handleOssiaGroupclassMakeupMin(); return false;"> 
                                            </select>
                                            <label class="" id="ossiaGroupClassInstrmentErrorMsg" style="color:red;"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>    
                            <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-right_large slds-m-top_medium">
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                    <div class="slds-col slds-size_4-of-12">
                                        <label class="slds-form-element__label" for="GroupMakupHoursLabel">
                                            <b>AMM:</b>
                                        </label>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12">
                                        <div class="slds-form-element__control">
                                            <label id="GroupMakupHoursLabel"></label>
                                            <br/>
                                            <label class="" id="GroupMakupHoursErrorMsg" style="color:red;"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>      
                        </div>
                    </div>
                </div>
                <footer class="slds-modal__footer">
                    <button class="slds-button slds-button_neutral" id="cancelNewGroupMakupBooking" onclick="$('#newGroupMakupBookingDetails').addClass('slds-hide');$('#newGroupClassCMP').removeClass('slds-hide');refreshNewGroupMakupBookingPopup();">No</button>
                    <button class="slds-button slds-button_brand" id="saveNewGroupMakupBooking" onclick="createGroupMakupBooking();return false;">Save</button>
                </footer>
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!-- @@jatin: 17-dec-2019: group class add new makeup customer end-->

    <!-- @@jatin: 19-dec-2019 :  Upgrade to Individual Class popup start-->
    <div class="slds-hide" id="UpgradeToIndividualEnrolPopup">
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1"
            class="slds-modal slds-fade-in-open slds-modal_medium">
            <div class="slds-modal__container" style="width:55%;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="UpgradeToIndividualEnrolPopupHeader" class="slds-text-heading_medium slds-hyphenate">Upgrade to Individual Class</h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close"
                        onclick="$('#UpgradeToIndividualEnrolPopup').addClass('slds-hide');">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="UpgradeToIndividualEnrolPopupBody">
                    <div class="slds-col slds-size_1-of-1">
                        <div class="slds-grid slds-gutters">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                    <b>Current Teacher:</b>
                                </span>
                                <span id="currentTeacherUpgradeToIndividualEnrol" class="slds-col slds-size_1-of-2"></span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                    <b>Current Date And Time:</b>
                                </span>
                                <span id="currentDateTimeUpgradeToIndividualEnrol" class="slds-col slds-size_1-of-2"></span>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                    <b>Current package: </b>
                                </span>
                                <span id="currentPackageUpgradeToIndividualEnrol" class="slds-col slds-size_1-of-2"></span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                    <b>Select Teacher: </b>
                                </span>
                                <select class="slds-select slds-col slds-size_1-of-2" id="selectTeacherUpgradeToIndividualEnrol" onchange="getPackageByTeacherOrInstrument();availTimeSlots('upgradeToIndividual');return false;">
                                </select>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="teacherSelectUpgradeToIndividualEnrolErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                            <div class="slds-col slds-size_1-of-2  slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                    <b>Select Package: </b>
                                </span>
                                <select class="slds-select slds-col slds-size_1-of-2" id="selectPackageUpgradeToIndividualEnrol" disabled="true" onchange="availTimeSlots('upgradeToIndividual');return false;">
                                </select>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                    <b>Select Effective Date: </b>
                                </span>
                                <select class="slds-select slds-col slds-size_1-of-2" id="selectEffectiveDateUpgradeToIndividualEnrol" onchange="availTimeSlots('upgradeToIndividual');return false;">
                                </select>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters ">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="packageSelectUpgradeToIndividualEnrolErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="effectiveDateUpgradeToIndividualEnrolErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                            <!--<div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2 "><b>Select New Effective Date: </b></span>
                                <select class="slds-select slds-col slds-size_1-of-2 " id="selectNewEffectiveDateUpgradeToIndividualEnrol"  onchange="availTimeSlots('update');return false;">      
                                </select>
                            </div>-->
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                    <b>Select TimeSlot: </b>
                                </span>
                                <select class="slds-select slds-col slds-size_1-of-2" id="availableTimeSlotsUpgradeToIndividualEnrol" disabled="true">
                                </select>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters ">
                            <!--<div class="slds-col slds-size_1-of-2 slds-grid">
                                <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="newEffectiveDateUpgradeToIndividualEnrolErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>-->
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="timeSlotUpgradeToIndividualEnrolErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                        </div>
                    </div>

                </div>
                <footer class="slds-modal__footer">
                    <button class="slds-button slds-button_neutral" onclick="$('#UpgradeToIndividualEnrolPopup').addClass('slds-hide');">Cancel</button>
                    <button class="slds-button slds-button_brand" id="UpgradeToIndividualEnrolClassSummary" onclick="UpgradeToIndividualEnrolClassSummary();return false;">Next</button>
                </footer>
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!-- @@jatin: 19-dec-2019 :  Upgrade to individual class popup end-->

    <!--@@jatin: 23-dec-2019 : Upgrade Group class Summary Popup-->
    <div class="slds-hide" id="upgradeGroupClassSummaryModal">
                
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
            <div class="slds-modal__container" style="width: 35%;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="upgradeGroupClassSummaryHeader" class="slds-text-heading_medium slds-hyphenate"></h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#upgradeGroupClassSummaryModal').addClass('slds-hide'); return false;">     
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">      
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>        
                        </svg>      
                        <span class="slds-assistive-text">Close</span>      
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="upgradeGroupClassSummaryBody">
                    <!--<div class="slds-align_absolute-center">
<apex:image url="{!$Resource.Aureus_logo}" width="150"/>
</div>-->
                    <div class="slds-form" role="list" >
                        <div class="slds-form__row" id="enrolSameClass">
                            <!--Student Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Student Name:</span>
                                    <div class="slds-form-element__control" id="ChangeEnrollmentGroupStudentName">
                                        
                                    </div>
                                </div>
                            </div>
                            <!-- parent name -->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Parent Name:</span>
                                    <div class="slds-form-element__control" id="ChangeEnrollmentGroupParentName">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--12-Nov-2020: nishi: for show change center detials-->
                        <div class="slds-form__row slds-hide" id="ChangeCenterSummary">
                            <!--Previous Center Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Previous Centre:</span>
                                    <div class="slds-form-element__control" id="oldCenterNameupgradeToIndividualSummary">
                                        
                                    </div>
                                </div>
                            </div>
                            <!--Current Center Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">New Centre:</span>
                                    <div class="slds-form-element__control" id="newCenterNameupgradeToIndividualSummary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--12-Nov-2020: nishi: for show change center detials-->
                        <div class="slds-form__row">
                            <!--Previous Package Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Previous Package:</span>
                                    <div class="slds-form-element__control" id="oldPackageNameGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                            <!--Current Package Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">New Package:</span>
                                    <div class="slds-form-element__control" id="newPackageNameGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__row">
                            <!--Previous Lesson Day & Time-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Current Lesson Day &amp; Time:</span>
                                    <div class="slds-form-element__control" id="previousLessonDTGroupClassSummary">
                                       
                                    </div>
                                </div>
                            </div>
                            <!--New Lesson Day & Time-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">New Lesson Day &amp; Time:</span>
                                    <div class="slds-form-element__control" id="newLessonDTGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__row slds-hide" id="upgradeBookingclass">
                            <!--Previous Class Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Previous Class:</span>
                                    <div class="slds-form-element__control" id="oldClassNameGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                            <!--Current Class Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">New Class:</span>
                                    <div class="slds-form-element__control" id="newClassNameGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="slds-form__row slds-hide" id="upgradeToIndividualTeacher">
                            <!--Previous Class Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Previous Teacher:</span>
                                    <div class="slds-form-element__control" id="oldTeacherNameupgradeToIndividualSummary">
                                        
                                    </div>
                                </div>
                            </div>
                            <!--Current Class Name-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">New Teacher:</span>
                                    <div class="slds-form-element__control" id="newTeacherNameupgradeToIndividualSummary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="slds-form__row invoiceTopupGroupClassItem" >
                            <!--Current Deposit on File-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Current Deposit on File:</span>
                                    <div class="slds-form-element__control" id="currentDepositFileGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                            <!--New Package Deposit-->
                            <div class="slds-form__item " role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">New Package Deposit:</span>
                                    <div class="slds-form-element__control" id="newPackageDepositGroupClassSummmary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="slds-form__row">
                            <!--Invoice for Current Month-->
                            <div class="slds-form__item invoiceTopupGroupClassItem" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Invoice for Current Month:</span>
                                    <div class="slds-form-element__control" id="invoiceForCurrentMonthGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                            <!--Invoice Top-Up-->
                            <div class="slds-form__item invoiceTopupGroupClassItem slds-hide" role="listitem" id="invoiceTopupGroupClassItem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Total Invoice Top-Up:</span>
                                    <div class="slds-form-element__control" id="invoiceTopUpGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--Invoice Topup summary-->
                        <div class="slds-form__row">
                            <div class="slds-form__item invoiceTopupGroupClassItem" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Deposit Adjustment:</span>
                                    <div class="slds-form-element__control" id="invoiceDepositTopupGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                            <!--New Package Deposit-->
                            <div class="slds-form__item invoiceTopupGroupClassItem" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Effective Month's Invoice:</span>
                                    <div class="slds-form-element__control" id="invoiceLessonDepositTopupGroupClassSummary">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__row EffecitveDateSummary">
                             <!-- Current effectvie date-->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">Current Effective Date:</span>
                                    <div class="slds-form-element__control" id="invoiceCurrentEffectiveGroupClassDate">
                                        
                                    </div>
                                </div>
                            </div>
                            <!-- new effectvie date -->
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                    <span class="slds-form-element__label">New Effective Date:</span>
                                    <div class="slds-form-element__control" id="invoiceEffectiveGroupClassDate">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__row ChangeCenterDateSummary">
                           <!-- new effectvie date -->
                           <div class="slds-form__item" role="listitem">
                               <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                   <span class="slds-form-element__label">Effective Date:</span>
                                   <div class="slds-form-element__control" id="invoiceChangeCenterEffectiveDate">
                                       
                                   </div>
                               </div>
                           </div>
                       </div>
                        <!--Confirm Enrol Button-->
                        <div class="slds-form-element" style="margin-top: 15px;text-align:right;">
                            <button class="slds-button slds-button_neutral" id ="confirmUpgradeClassEnrolmentCancel" onclick="backToUpgradeChangesPopup(); return false;">BACK</button>
                            <button class="slds-button slds-button_brand " id="confirmUpgradeClassEnrolment" onclick="submitUpgradeClassPackageRequest();return false;">CONFIRM UPGRADE CLASS</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
    <!--@@jatin: 23-dec-2019 : Upgrade Group class Summary Popup-->

     <!--@@jatin: 3-Jan-2019 : Update Enrolment group Button Click Popup-->
     <div class="slds-hide" id="enrolmentUpdateGroupPopup">
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
            <div class="slds-modal__container" style="width:55%;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="enrolmentUpdatePopupGroupHeader" class="slds-text-heading_medium slds-hyphenate">Change Class</h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#enrolmentUpdateGroupPopup').addClass('slds-hide');">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="enrolmentUpdateGroupPopupBody">
                    <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap ">
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small enrolmentWithChangeCenter">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Current Center:</b></span>
                                <span id="currentCenterEnrolGroupUpdate" class="slds-col slds-size_1-of-2"></span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Current Teacher:</b></span>
                                <span id="currentTeacherEnrolGroupUpdate" class="slds-col slds-size_1-of-2"></span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Current Date And Time:</b></span>
                                <span id="currentDateTimeEnrolGroupUpdate" class="slds-col slds-size_1-of-2"></span>
                            </div>
                        
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small">
                                <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Current package: </b></span>
                                <span id="currentPackageEnrolGroupUpdate" class="slds-col slds-size_1-of-2"></span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small enrolmentWithChangeCenter">
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select Center: </b></span>
                                    <select class="slds-select slds-col slds-size_1-of-2" id="selectCenterEnrolGroupUpdate" onchange="getSelectedGroupChangeCenterTeacher();getUpgradePackageByTeacher();return false;">      
                                    </select>
                                </div>
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <div  class="slds-col slds-size_1-of-2" style="color:red;"></div>
                                    <div id="centerSelectGroupErrorMsg" class="slds-col slds-size_1-of-2" style="color:red;margin-left: 35px;"></div>
                                </div>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small">
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select Teacher: </b></span>
                                    <select class="slds-select slds-col slds-size_1-of-2" id="selectTeacherEnrolGroupUpdate" onchange="getUpgradePackageByTeacher();createNewEffectiveGroupDates();availTimeGroupSlots();return false;">      
                                    </select>
                                </div>
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <div  class="slds-col slds-size_1-of-2" style="color:red;"></div>
                                    <div id="teacherSelectGroupErrorMsg" class="slds-col slds-size_1-of-2" style="color:red;margin-left: 35px;"></div>
                                </div>
                            </div>
                       
                            <!-- <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap">
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap">
                                <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="teacherSelectGroupErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div> -->
                       
                            <div class="slds-col slds-size_1-of-2  slds-grid slds-wrap  slds-p-around_x-small">
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select Package: </b></span>
                                    <select class="slds-select slds-col slds-size_1-of-2" id="selectPackageEnrolGroupUpdate" data-toggle="tooltip" data-placement="top" title="" onchange="changePackageGroup(); return false;"  disabled="true" onclick="createNewEffectiveGroupDates();availTimeGroupSlots();return false;">      
                                    </select>
                                </div>
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <div  class="slds-col slds-size_1-of-2" style="color:red;"></div>
                                    <div id="packageSelectGroupErrorMsg" class="slds-col slds-size_1-of-2" style="color:red;margin-left: 35px;"></div>
                                </div>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small enrolmentWithoutChangeCenter">
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select Current Effective Date: </b></span>
                                    <!--<input class="slds-input" id="selectEffectiveDateEnrolUpdate" onchange="availTimeSlots('update');return false;" style="width: 174px;"/>-->
                                    <select class="slds-select slds-col slds-size_1-of-2" id="selectEffectiveDateEnrolGroupUpdate" onchange="createNewEffectiveGroupDates();return false;">      
                                    </select>
                                </div>
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <div  class="slds-col slds-size_1-of-2" style="color:red;"></div>
                                    <div id="effectiveDateGroupErrorMsg" class="slds-col slds-size_1-of-2" style="color:red;margin-left: 35px;"></div>
                                </div>
                            </div>
                        
                            <!-- <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap margin-top5px" style="margin-top: 20px;">
                                <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="packageSelectGroupErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small">
                                <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="effectiveDateGroupErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div> -->
                       
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small ">
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <span class="slds-form-element__label slds-col slds-size_1-of-2 "><b>Select New Effective Date: </b></span>
                                    <!--<input class="slds-input" id="selectEffectiveDateEnrolUpdate" onchange="availTimeSlots('update');return false;" style="width: 174px;"/>-->
                                    <select class="slds-select slds-col slds-size_1-of-2 " id="selectNewEffectiveDateEnrolGroupUpdate"  onchange="availTimeGroupSlots();return false;">      
                                    </select>
                                </div>
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <div  class="slds-col slds-size_1-of-2" style="color:red;"></div>
                                    <div id="newEffectiveDateGroupErrorMsg" class="slds-col slds-size_1-of-2" style="color:red;margin-left: 35px;"></div>
                                </div>
                            </div>
                            
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap slds-p-around_x-small">
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select TimeSlot: </b></span>
                                    <select class="slds-select slds-col slds-size_1-of-2" id="availableTimeSlotsUpdateEnrolmentGroup" disabled="true">      
                                    </select>
                                </div>
                                <div class="slds-col slds-size_1-of-1 slds-grid slds-wrap">
                                    <div  class="slds-col slds-size_1-of-2" style="color:red;"></div>
                                    <div id="timeSlotGroupErrorMsg" class="slds-col slds-size_1-of-2" style="color:red;margin-left: 35px;"></div>
                                </div>
                            </div>
                        
                            <!-- <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap">
                                <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="newEffectiveDateGroupErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid slds-wrap">
                                <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="timeSlotGroupErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div> -->
                        
                    </div>
                    
                </div>  
                <footer class="slds-modal__footer">      
                    <button class="slds-button slds-button_neutral" onclick="$('#enrolmentUpdateGroupPopup').addClass('slds-hide');">Cancel</button>        
                    <button class="slds-button slds-button_brand" id="updateEnrolmentonGroupClick" onclick="updateEnrolmentGroupClick();return false;">Next</button>       
                </footer>  
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>

     <!-- @@jatin: 26-dec-2019: Cancel Group Lesson subscription popup closed -->
     <div class="slds-hide" id="canelGroupClassSubscriptionPopup">
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
            <div class="slds-modal__container" style="width: 30%;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="canelGroupClassSubscriptionPopupHeader" class="slds-text-heading_medium slds-hyphenate"><b>Cancel Class Subscription</b></h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#canelGroupClassSubscriptionPopup').addClass('slds-hide'); return false;">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="canelSubscriptionPopupBody">
                    <div class="slds-grid slds-wrap">
                        <!--Row 1 -->
                        <div class="slds-col slds-size_1-of-12 slds-p-vertical_x-small">
                        </div>
                        <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                            <span class="slds-form-element__label slds-text-align_right"><b>Notice Period End Date</b></span>
                            <span>
                                <input class="slds-input" id="cancelGroupClassRequestEndDate" style="width:130px;" onchange="getCancelGroupClassRequestDateFunc();return false;"/>
                            </span>
                        </div>
                        <div class="slds-col slds-size_5-of-12 slds-p-vertical_x-small">
                            <span class="slds-form-element__label slds-text-align_right"><b>Last Lesson Date</b></span>
                            <span>
                                <span id="lastLessonGroupClassDate"></span>
                            </span>
                        </div>
                        
                        <div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
                            
                        </div>
                    </div>
                </div>

                <footer class="slds-modal__footer">
                    <button class="slds-button button-shadow slds-button_neutral" title="Cancel" aria-pressed="false" id="cancelGroupClassUpgradeRequest" onclick="$('#canelGroupClassSubscriptionPopup').addClass('slds-hide');return false;">Cancel
                        <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                        </svg>
                        <span class="slds-assistive-text">Cancel</span>
                    </button>
                    <button class="slds-button button-shadow slds-button_brand" title="Confirm Withdrawal" aria-pressed="false" id="submitCancelGroupClassRequest" onclick="getWithdrawGroupClassSummary();return false;">Next
                        <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                        </svg>
                        <span class="slds-assistive-text">Next</span>
                    </button>
                </footer>

            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!-- @@jatin: 26-dec-2019: Cancel Group Lesson subscription popup closed -->

    <!-- @@jtin: 26-dec-2019: cancel Group Lesson summary popup -->
    <div class="slds-hide" id="withdrawEnrolGroupClassSummaryModal">
                
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
            <div class="slds-modal__container" style="width: 55%;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="withdrawEnrolGroupClassSummaryModalHeader" class="slds-text-heading_medium slds-hyphenate">Withdrawal Class Summary</h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#withdrawEnrolGroupClassSummaryModal').addClass('slds-hide'); return false;">     
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">      
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>        
                        </svg>       
                        <span class="slds-assistive-text">Close</span>      
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="withdrawEnrolGroupClassSummaryModalBody" style="overflow: auto;">
                    <div class="slds-form-element">
                        <div style="font-size: 1.2em;">Enrolment Details</div>
                        <div class="slds-form__row">
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                    <label class="slds-form-element__label" for="stacked-form-element-id-01">Student Name</label>
                                    <div class="slds-form-element__control">
                                        <label id="withdrawGroupClassSummaryStudentName"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                    <label class="slds-form-element__label" for="stacked-form-element-id-01">Package</label>
                                    <div class="slds-form-element__control">
                                        <label id="withdrawGroupClassSummaryPackage"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__row">
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                    <label class="slds-form-element__label" for="stacked-form-element-id-01">Centre</label>
                                    <div class="slds-form-element__control">
                                        <label id="withdrawGroupClassSummaryCentre"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                    <label class="slds-form-element__label" for="stacked-form-element-id-01">Lesson Day &amp; Time</label>
                                    <div class="slds-form-element__control">
                                        <label id="withdrawGroupClassSummaryLessonDay"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr style="margin: 0px;"/>
                    <div class="slds-form-element" style="margin-top: 15px;">
                        <div style="font-size: 1.2em;">Withdrawal Summary</div>
                        <div class="slds-form__row">
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                    <label class="slds-form-element__label" for="stacked-form-element-id-01">Notice Date</label>
                                    <div class="slds-form-element__control">
                                        <label id="withdrawGroupClassSummaryNoticeDate"></label>
                                    </div>
                                </div>
                            </div>
                            <div class="slds-form__item" role="listitem">
                                <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                    <label class="slds-form-element__label" for="stacked-form-element-id-01">Final Lesson Date</label>
                                    <div class="slds-form-element__control">
                                        <label id="withdrawGroupClassSummaryFinalDate"></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr style="margin: 0px;"/>
                    <div class="slds-form-element" style="margin-top: 15px;">
                        <div style="font-size: 1.2em;">Final 4 Lessons</div>
                        <div>
                            <table id="finalLessonsGroupClassTbl" class="slds-table slds-table_cell-buffer slds-table_bordered">
                                <thead>
                                    <tr class="slds-line-height_reset">
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Lesson">Lesson</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Date">Date</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Time">Time</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Duration">Duration</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Status">Status</div>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="finalLessonsGroupClassTblBody">
                                    
                                </tbody>
                            </table> 
                        </div>
                    </div>
                    <hr style="margin: 0px;"/>
                    <div class="slds-form-element" id="makeupGroupClassSectionSummary" style="margin-top: 15px;">
                        <div style="font-size: 1.2em;">Make-Up Lessons</div>
                        <div>
                            <table id="makeupLessonsGroupClassTbl" class="slds-table slds-table_cell-buffer slds-table_bordered">
                                <thead>
                                    <tr class="slds-line-height_reset">
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Student">Student</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Booking Date">Booking Date</div>
                                        </th>
                                        
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Duration">Duration</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Expiry Date">Expiry Date</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="New Expiry Date">New Expiry Date</div>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="makeupLessonsGroupClassTblBody">
                                    
                                </tbody>
                            </table> 
                        </div>
                    </div>
                    <hr style="margin: 0px;"/>
                    
                    <div class="slds-form-element" style="margin-top: 15px;">
                        <div style="font-size: 1.2em;">Deposit Balance (Final Month)</div>
                        <div>
                            <table id="depositBalanceGroupClassTbl" class="slds-table slds-table_cell-buffer slds-table_bordered">
                                <thead>
                                    <tr class="slds-line-height_reset">
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Package Name">Package Name</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Student">Student</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Qty">Qty</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Rate">Rate</div>
                                        </th>
                                        <th class="" scope="col">
                                            <div class="slds-truncate" title="Total">Total</div>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="depositBalanceGroupClassTblBody">
                                    
                                </tbody>
                            </table> 
                        </div>
                        <div style="font-size: 1.0em;padding: 5px;">Note: 
                            Your final invoice will be generated on the 1st of your final lesson month. 
                            The deposit will be applied, and if a balance is applicable, a refund will be processed thereafter.
                            In the event you have multiple students or multiple enrolments, and refund balance presented in the 
                            summary will be applied as a payment towards your next invoice.
                        </div>
                    </div>
                    <hr style="margin: 0px;"/>
                    <div class="slds-form-element slds-align_absolute-center" style="margin-top: 15px;">
                        <button class="slds-button slds-button_brand" id="confirmGroupClassWithdrawal" onclick="submitCancelGroupClassPackageRequest();return false;">CONFIRM WITHDRAWAL</button>
                    </div>
                </div>
                
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!-- @@jtin: 26-dec-2019: cancel Group Lesson summary popup closed-->

    <!--@jatin : 28-Nov-2019 : Upgrade Class Subscriptions-->
    <div class="slds-hide" id="gradeClassSubscriptionPopup">
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1"
            class="slds-modal slds-fade-in-open slds-modal_medium">
            <div class="slds-modal__container" style="width:45%;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="gradeClassSubscriptionPopupHeader" class="slds-text-heading_medium slds-hyphenate">
                        <b>Upgrade Class Subscription</b>
                    </h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close"
                        onclick="$('#gradeClassSubscriptionPopup').addClass('slds-hide'); return false;">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="gradeClassSubscriptionPopupBody">
                    <div class="slds-col slds-size_1-of-1">
                        <div class="slds-grid slds-gutters">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label  slds-col slds-size_5-of-12">
                                    <b>Current Package: </b>
                                </span>
                                <span id="currentPackageClassName" class="slds-col slds-size_7-of-12"></span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_5-of-12">
                                    <b>Requested Package: </b>
                                </span>
                                <span>
                                    <select class="slds-select slds-col slds-size_7-of-12" id="selectRequestedClassPackage" style="width: 177px;" onchange="availTimeSlots('class upgrade');return false;">
                                    </select>
                                </span>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="upgradePackageSelectClassError" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                            <div class="slds-col slds-size_1-of-2  slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_5-of-12">
                                    <b>Effective Date: </b>
                                </span>
                                <span>
                                    <select class="slds-select slds-col slds-size_7-of-12" id="effectiveDateClassInput" style="width: auto;" onchange="availTimeSlots('class upgrade');return false;">
                                    </select>
                                </span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_5-of-12">
                                    <b>Running Classes: </b>
                                </span>
                                <span>
                                    <select class="slds-select slds-col slds-size_7-of-12" id="runningClassesSelect" style="width: 177px;" onchange="availGroupClassTimeSlots('class upgrade');return false;">
                                    </select>
                                </span>
                            </div>
                        </div>
                        <div class="slds-grid slds-gutters ">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="effectiveDateClassError" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="runningClassesSelectError" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                        </div>


                        <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                            <div class="slds-col slds-size_1-of-2  slds-grid">
                                <span class="slds-form-element__label slds-col slds-size_5-of-12">
                                    <b>Available Slots: </b>
                                </span>
                                <span>
                                    <select class="slds-select slds-col slds-size_7-of-12" id="availableTimeClassSlots" style="width: auto;" disabled="true">
                                        <option>Select Time Slot</option>
                                    </select>
                                </span>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">

                            </div>
                        </div>
                        <div class="slds-grid slds-gutters ">
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label id="availableTimeSlotsClassError" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                            <div class="slds-col slds-size_1-of-2 slds-grid">
                                <label class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                <label class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <footer class="slds-modal__footer">
                    <button class="slds-button button-shadow slds-button_neutral" title="Cancel" aria-pressed="false" id="cancelClassUpgradeRequest"
                        onclick="$('#gradeClassSubscriptionPopup').addClass('slds-hide'); return false;">Cancel
                        <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"
                            />
                        </svg>
                        <span class="slds-assistive-text">Cancel</span>
                    </button>
                    <button class="slds-button button-shadow slds-button_brand" title="Next" aria-pressed="false" id="submitUpgradeClassRequest"
                        onclick="showUpgradeClassSummary('upgrade class');return false;">Next
                        <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}"
                            />
                        </svg>
                        <span class="slds-assistive-text">Next</span>
                    </button>
                </footer>
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>

    <!--added by nishi: 15-Sep-2020: adhoc group class bookings-->
    <div class="slds-hide" id="newAdhocGroupClassDetailPopup">
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
            <div class="slds-modal__container">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="newAdhocGroupClassDetailHeader" class="slds-text-heading_medium slds-hyphenate">New Appointment Detail</h2>
                    <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#newAdhocGroupClassDetailPopup').addClass('slds-hide');refreshNewBookingPopup(); return false;">
                        <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </a>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="newAdhocGroupClassDetailBody">
                    <div class="slds-form__row">
                        <div class="slds-form__item" role="listitem">
                            <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                <label class="slds-form-element__label" for="studentNameAdhocGroupClass"><b>Student Name:</b></label>  
                                <div class="slds-form-element__control">
                                    <label class="slds-form- element__label" id="studentNameAdhocGroupClass"></label>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__item" role="listitem">
                            <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                <label class="slds-form-element__label" for="centerNameAdhocGroupClass"><b>Center Name:</b></label> 
                                <div class="slds-form-element__control">
                                    <label class="slds-form- element__label" id="centerNameAdhocGroupClass"></label>                                                   
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="slds-form__row">
                        <div class="slds-form__item" role="listitem">
                            <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                <label class="slds-form-element__label" for="teacherNameAdhocGroupClass"><b>Teacher Name:</b></label>  
                                <div class="slds-form-element__control">
                                    <label class="slds-form- element__label" id="teacherNameAdhocGroupClass"></label>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__item" role="listitem">
                            <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                <label class="slds-form-element__label" for="packageDurationAdhocGroupClass"><b>Package Duration:</b></label> 
                                <div class="slds-form-element__control">
                                    <label class="slds-form- element__label" id="packageDurationAdhocGroupClass"></label>                                                   
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Added By Ravi on 14 july 2020 -->
                    <div class="slds-form__row">
                        <div class="slds-form__item" role="listitem">
                            <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                <label class="slds-form-element__label" for="classLessonAdhocGroupClass"><b>Class Name:</b></label>  
                                <div class="slds-form-element__control"><!-- style="padding-left: 138px !important;"-->
                                    <label class="slds-form- element__label" id="classLessonAdhocGroupClass"></label>
                                </div>
                            </div>
                        </div>
                        <div class="slds-form__item" role="listitem">
                            
                        </div>
                    </div>
                    <!-- Added By Ravi on 14 july 2020 -->
                    <div class="slds-p-around_medium">
                        <table class="slds-table slds-table_cell-buffer slds-table_bordered">
                            <thead>
                                <tr class="slds-line-height_reset">
                                    <th class="" scope="col">
                                        <div class="slds-truncate" title="Sr.No">Sr No</div>
                                    </th>
                                    <th class="" scope="col">
                                        <div class="slds-truncate" title="Package Name">Package Name</div>
                                    </th>
                                    <th class="" scope="col">
                                        <div class="slds-truncate" title="Package Time">Booking Time</div>
                                    </th>
                                    <th class="" scope="col">
                                        <div class="slds-truncate" title="Package Unit Price">Package Unit Price</div>
                                    </th>
                                    
                                </tr>
                            </thead>
                            <tbody id="countOfClassBookingTableBody">
                                
                                
                            </tbody>
                        </table>
                        
                        
                    </div>
                    
                    
                </div>   
                <footer class="slds-modal__footer">
                    <a href="javascript:void(0);" class="slds-button slds-button_brand" id="createAdhocGroupClassBookingBtn" onclick="createAdhocGroupClassBookings();return false;">Create booking and generate invoice</a>
                </footer>  
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!--added by nishi: 15-Sep-2020: adhoc group class bookings-->

    <!-- added by nishi-3-Nov-2020: for confirmation Deactivate Group class or not-->
    <div class="confirmgroupModal slds-hide" id="confirmgroupModal">
        <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
            <div class="slds-modal__container" style="width: 35%;">
                <header class="slds-modal__header" style="background: #303a42; color: white;">
                    <h2 id="confirmgroupHeader" class="slds-text-heading_medium slds-hyphenate">Deactivate Group Class</h2>
                </header>
                <div class="slds-modal__content slds-p-around_medium" id="confirmGroupBody">
                    This action will remove this and all future instance of this Group class. Are you sure?
                </div>
                <footer class="slds-modal__footer">
                    <button class="slds-button slds-button_neutral revert" id="confirmgroupModalNo" onclick="$('.confirmgroupModal').addClass('slds-hide');$('#newGroupClassCMP').removeClass('slds-hide'); return false;">No</button>
                    <button class="slds-button slds-button_brand yesClass" id="confirmgroupModalYes" onclick="DeactivateGroupClassLesson();return false;">Yes</button>
                </footer>
            </div>
        </section>
        <div class="slds-backdrop slds-backdrop_open"></div>
    </div>
    <!-- added by nishi-3-Nov-2020: for confirmation Deactivate Group class or not-->



    
    <script>

        var selectedStudentData = {};

        //@@jatin: 18-dec-2019:refresh New makeup Booking Popup
        function refreshNewBookingPopup() {
           //console.log('asd');
            $('#newGroupMakupBookingDetails').addClass('slds-hide'); $('#newGroupClassCMP').removeClass('slds-hide');
        }
        /*
                This method will show the details of the edit appointment screen for all 4 tabs.
            */
        function checkCapacity() {
            //console.log(checkCapacity);
            var capacity = $('#ClassCapacityEditInput').val();
            if (capacity < selectedStudentData.ClassCapacity) {
                $('#ClassCapacityEditInput').val(selectedStudentData.ClassCapacity);
            }
        }


        // @@jatin: 26-dec-2019: Cancel Group Class Request and if Notice Period End Date is change then get Last Lesson Date 
        function getCancelGroupClassRequestDateFunc(){
            var timeslot = $('#cancelSubscriptionBtn').attr('data-timeslot');
            var bookingId = $('#cancelSubscriptionBtn').attr('data-id');
            $('#confirmGroupClassWithdrawal').attr('data-id', bookingId );
            var effectiveDate = $('#cancelGroupClassRequestEndDate').val();
            var endDate;
            var lastLessonDate;
            if(effectiveDate){
                endDate = new moment(effectiveDate.split('/')[2]+'-'+effectiveDate.split('/')[0]+'-'+effectiveDate.split('/')[1]);
            }else{
                $('#submitCancelGroupClassRequest').attr('disabled', 'true');
                $('#lastLessonGroupClassDate').html('');
            }
            if(timeslot){
                timeslot = timeslot.split(' ')[1];
                timeslot = timeslot.substr(0,3);
            }
            for(;;){
                if(endDate.format('ddd').toUpperCase() == timeslot){                   
                    lastLessonDate = convertDateToMoment(endDate.format('YYYY-MM-DD'));
                    $('#submitCancelGroupClassRequest').attr('lastLessonGroupClassDate', endDate.format('YYYY-MM-DD'));
                    $('#confirmGroupClassWithdrawal').attr('lastLessonGroupClassDate', endDate.format('YYYY-MM-DD'));
                    break;
                }
                endDate.subtract(1, 'days');
            }
            $('#lastLessonGroupClassDate').html(lastLessonDate);
            $('#submitCancelGroupClassRequest').removeAttr('disabled');
            
        }

        // @@jatin: 26-dec-2019 : for show Withdraw group class Summary
        function getWithdrawGroupClassSummary(){
            $('#submitCancelGroupClassRequest').attr('disabled', 'true');
            $('#submitCancelGroupClassRequest').css('pointer-events', 'none');
            $('#makeupGroupClassSectionSummary').removeClass('slds-hide');
            $('#finalLessonsGroupClassTblBody').empty();
            $('#makeupLessonsGroupClassTblBody').empty();
            $('#depositBalanceGroupClassTblBody').empty();
            $('#withdrawGroupClassSummaryStudentName').html('');
            $('#withdrawGroupClassSummaryPackage').html('');            
            $('#withdrawGroupClassSummaryCentre').html('');  
            $('#withdrawGroupClassSummaryLessonDay').html('');  
            $('#withdrawGroupClassSummaryNoticeDate').html('');  
            $('#withdrawGroupClassSummaryFinalDate').html('');
            var bookId = $('#cancelSubscriptionBtn').attr('data-id');
            var lastLessonDate = $('#submitCancelGroupClassRequest').attr('lastLessonGroupClassDate');
            var endDate = $('#cancelGroupClassRequestEndDate').val();
            var dtObj = moment();
            if(endDate){
                dtObj.year(endDate.split('/')[2]).month(endDate.split('/')[0] - 1).date(endDate.split('/')[1]);
            }
            if(endDate && bookId && lastLessonDate){
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ClassEditController.getWithdrawGroupClassSummary}',
                    bookId, dtObj.format('YYYY-MM-DD'), lastLessonDate, 
                    function(result, event){
                        if(result){
                           //console.log('withdrawEnrolGroupClassSummaryModal result',result);
                            $('#canelGroupClassSubscriptionPopup').addClass('slds-hide');
                            $('#withdrawEnrolGroupClassSummaryModal').removeClass('slds-hide');
                            $('#submitCancelGroupClassRequest').removeAttr('disabled');
                            $('#submitCancelGroupClassRequest').css('pointer-events', '');
                            var tableRow = '';
                            if('lastLessons' in result){
                                $(result.lastLessons).each(function(index, value){
                                    tableRow += '<tr id="'+value.bookingId+'"><td>'+value.Lesson+'</td><td>'+value.bookingDate+'</td><td>'+value.bookingTime+'</td><td>'+value.duration+' mins</td>';
                                    if(value.status != 'Billed' && value.status != 'Deposit' && value.status){
                                        tableRow += '<td><a href="/'+value.status.split(':')[0]+'" target="_blank">'+value.status.split(':')[1]+'</a></td></tr>';
                                    }else{
                                        tableRow += '<td>'+value.status+'</td></tr>';
                                    }
                                });
                                $('#finalLessonsGroupClassTblBody').append(tableRow);
                            }
                            if('makeupLessons' in result){
                                tableRow = '';
                                $(result.makeupLessons).each(function(index, value){
                                    tableRow += '<tr id="'+value.bookingId+'"><td>'+value.student+'</td><td>'+value.cancelDate+'</td><td>'+value.duration+'</td><td>'+value.expiryDate+'</td><td>'+value.nextExpiryDate+'</td></tr>';
                                });
                                $('#makeupLessonsGroupClassTblBody').append(tableRow);
                                if(result.makeupLessons.length < 1){
                                    $('#makeupGroupClassSectionSummary').addClass('slds-hide');
                                }
                            }
                            if('finalDeposits' in result){
                                tableRow = '';
                                $(result.finalDeposits).each(function(index, value){
                                    tableRow += '<tr id="'+value.bookingId+'"><td>'+value.Lesson+'</td><td>'+value.student+'</td><td>'+value.qty+'</td><td>$'+value.unitPrice.toFixed(2)+'</td><td>$'+value.total.toFixed(2) +'</td></tr>';
                                });
                                if('gst' in result && result.gst > 0){
                                    tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>GST</b></td><td>$'+result.gst.toFixed(2) +'</td></tr>';
                                }
                                if('total' in result){
                                    tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>Total</b></td><td>$'+result.total.toFixed(2) +'</td></tr>';
                                }
                                if('deposit' in result){
                                    tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>Deposit</b></td><td>$'+result.deposit.toFixed(2) +'</td></tr>';
                                }
                                if('refund' in result && result.refund && result.refund > 0){
                                    
                                    tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>Refund</b></td><td>$'+Math.abs(result.refund).toFixed(2) +'</td></tr>';
                                }
                                $('#depositBalanceGroupClassTblBody').append(tableRow);
                            }
                            if('student' in result){
                                $('#withdrawGroupClassSummaryStudentName').html(result.student);
                            }
                            if('packageName' in result){
                                $('#withdrawGroupClassSummaryPackage').html(result.packageName);
                            }    
                            if('centre' in result){
                                $('#withdrawGroupClassSummaryCentre').html(result.centre);
                            }
                            if('LessonDay' in result){
                                $('#withdrawGroupClassSummaryLessonDay').html(result.LessonDay);
                            }
                            
                            if('noticeDate' in result){
                                $('#withdrawGroupClassSummaryNoticeDate').html(result.noticeDate);
                            }
                            
                            if('lastDate' in result){
                                $('#withdrawGroupClassSummaryFinalDate').html(result.lastDate);
                            }
                        }
                    }
                );
            }
        }

        function submitCancelGroupClassPackageRequest(){
            var isError = false;
            var bookingId = $('#confirmGroupClassWithdrawal').attr('data-id');
            var endDate = $('#cancelGroupClassRequestEndDate').val();
            var lastLessonDate = $('#confirmGroupClassWithdrawal').attr('lastLessonGroupClassDate');
            
            if(!bookingId){
                isError = true;
            }
            
            if(!endDate){
                isError = true;
            }
            if(!isError){    
                var endDateMoment = moment();
                endDateMoment.year(endDate.split('/')[2]).month(endDate.split('/')[0] - 1).date(endDate.split('/')[1]);
                $('.canelGroupClassSubscriptionPopup').addClass('slds-hide');
                $('#withdrawEnrolGroupClassSummaryModal').addClass('slds-hide');
                $('#confirmModalYes').attr({'data-origin': 'withdrawal-groupLesson', 'data-id': bookingId, 'data-endDate':endDateMoment.format('YYYY-MM-DD'), 'data-lastLessonDate': lastLessonDate});
                $('#confirmModalYes').trigger('click');
                }
            }
         
        function cancelGroupLessonSubscriptionRequest(bookingId, lastLessonDate, lastLessonDate, caseId, redirectCase){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.cancelGroupLessonSubscriptionRequest}',
                bookingId, lastLessonDate, lastLessonDate, caseId, redirectCase,
                function(result, event){
                    $('#confirmModal').addClass('slds-hide');
                    if(result){
                        if(result == 'error'){
                            $('#toastMsg').html('Request failure!');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                        }else{
                            redirectToCaseRecord(result);
                            refreshCalendar();
                        }
                        
                    }else if(!result){
                        refreshCalendar();
                    }
                    
                }
            );
        }

        function handleOssiaGroupclassAdhocPackage(){
            var adhocpackageId = $('#ossiaGroupClassAdhocPackage').val();
            var groupAppointmentType  = $('#saveNewGroupMakupBooking').attr('data-groupAppointmentType');
            if(groupAppointmentType != 'MakeUp'){
                if (adhocpackageId && adhocpackageId != '' && adhocpackageId != null && adhocpackageId != undefined && adhocpackageId.length > 0) {
                    bookingData.packageId =adhocpackageId.split(';')[0];
                    console.log(bookingData.packageId);
                    $('#saveNewGroupMakupBooking').removeAttr('disabled');
                }else{
                    $('#GroupAdhocPackageErrorMsg').text('Please Select Adhoc Package');
                    $('#saveNewGroupMakupBooking').attr('disabled', '');
                }
            }
        }

        // added bu nishi:3-nov-2020: for deactive group class if any enrolled enrolment or regular booking found then user can not deactivate this group class  
        function DeactivateGroupClassLesson(){
            var dateOfAppointment = selectedStudentData.date;
            var groupClassId = selectedStudentData.selgroupClassId;
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.deactivateGroupClass}',
                dateOfAppointment, groupClassId,
                function (result, event) {
                    console.log('result',result);
                    if(result.errorCode === '200'){
                        $('#toastMsg').html(result.errormessage);
                        $('.toastclass').addClass('slds-theme_success');
                        $('.toastclass').removeClass('slds-theme_error');
                        toastLaunch();
                        refreshCalendar();
                    }else{
                        $('#toastMsg').html(result.errormessage);
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                    $('.confirmgroupModal').addClass('slds-hide');
                    $('#newGroupClassCMP').addClass('slds-hide');
                },
                { escape: true }
            );
        }

        function DeactiveGroupclassConfirmation(){
            var dateOfAppointment = selectedStudentData.date;
            var groupClassId = selectedStudentData.selgroupClassId;
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.DeactiveGroupclassConfirmation}',
                dateOfAppointment, groupClassId,
                function (result, event) {
                    console.log('result',result);
                    if(result.errorCode === '200'){
                        $('.confirmgroupModal').removeClass('slds-hide');$('#newGroupClassCMP').addClass('slds-hide');
                    }else{
                        $('#toastMsg').html(result.errormessage);
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                },
                { escape: true }
            );
        }

        function removeAddGroupClassAppoinment(){
            $('#GroupMakupHoursErrorMsg').text('');
            //$('#GroupMakupStudentInput').val('');
            $('#GroupMakupParentInput').val('');
            $('#GroupMakupPhoneInput').val('');
            $('#GroupAdhocPackageErrorMsg').text('');
            $('#GroupMakupEmailInput').val('');
            $('#ossiaGroupClassInstrment').val('');
            $('#ossiaGroupClassInstrment').empty();
            $('#ossiaGroupClassInstrmentErrorMsg').text('');
            $('#GroupMakupHoursErrorMsg').text('');
            $('#GroupMakupHoursLabel').html('');
            $('#GroupMakupStudentSelectContainer').removeClass('slds-is-open');
            $('#GroupMakupStudentSelectContainer').attr('aria-expanded', 'false');
            $('#GroupMakupStudentSearchList').empty();
            $('#GroupMakupParentInput').removeAttr('disabled');
            $('#GroupMakupPhoneInput').removeAttr('disabled');
            $('#GroupMakupEmailInput').removeAttr('disabled');
            $('#GroupMakupParentInput').val('');
            $('#GroupMakupPhoneInput').val('');
            $('#GroupMakupEmailInput').val('');
            $('#ossiaGroupClassInstrment').empty();
        }

        var createGroupBookingResult = {};
       
         // @@jatin:19-dec-2019: for show add new makeup customers popup
         function newGroupAppointmentPopup(groupAppointmentType) {
            $('#newGroupClassCMP').addClass('slds-hide');
            $('.adhocPackage').addClass('slds-hide');
            $('.makeupPackage').addClass('slds-hide');
            $('#ossiaGroupClassAdhocPackage').empty();
            $('#ossiaGroupClassAdhocPackage').val('');
            $('#GroupMakupCenterNameLabel').html('');
            $('#GroupMakupDateLabel').html('');
            $('#GroupMakupTimeLabel').html('');
            $('#GroupMakupPackageLabel').html('');
            $('#GroupMakupDurationLabel').html('');
            $('#GroupMakupStudentInput').val('');
            removeAddGroupClassAppoinment();
            var centerid = selectedStudentData.centerId;
            var teacherid = selectedStudentData.teacherId;
            var dateOfAppointment = selectedStudentData.date;
            bookingData.type = 'Group Lesson';
            bookingData.duration = selectedStudentData.duration;
            bookingData.packageId = selectedStudentData.packageId;
            bookingData.date = selectedStudentData.date;
            bookingData.groupClassId = selectedStudentData.groupClassId;
            bookingData.centerId = selectedStudentData.centerId;
            bookingData.teacherId = selectedStudentData.teacherId;
            bookingData.isOssia =selectedStudentData.isOssia;
            bookingData.selgroupClassId = selectedStudentData.selgroupClassId;
            bookingData.selgroupClassName = selectedStudentData.selgroupClassName;
            bookingData.isRecurring = 'false';
            // added by nishi: 3-Sep-2020: for manage Ossia group class makeup mins 
            if(selectedStudentData.isOssia == true){
               // $('.aureusGroupClassMakeupBooking').addClass('slds-hide');
                $('.ossiaGroupClassMakeupBooking').removeClass('slds-hide');
            }else{
               // $('.aureusGroupClassMakeupBooking').removeClass('slds-hide');
                $('.ossiaGroupClassMakeupBooking').addClass('slds-hide');
                $('#GroupMakupPackageLabel').html(selectedStudentData.packageName);
            }
            // added by nishi: 3-Sep-2020: for manage Ossia group class makeup mins
           
            $('#GroupMakupCenterNameLabel').html(selectedStudentData.centerName);
            $('#saveNewGroupMakupBooking').attr('data-teacher', selectedStudentData.teacherName);
            $('#saveNewGroupMakupBooking').attr('data-date', dateOfAppointment);
            $('#GroupMakupDateLabel').html(convertDateToMoment(dateOfAppointment.split('T')[0]));
            $('#GroupMakupTimeLabel').html(convertTimeToMoment(dateOfAppointment.split('T')[1].split(':')[0], dateOfAppointment.split('T')[1].split(':')[1]));
            $('#saveNewGroupMakupBooking').attr('disabled', '');
            $('#newGroupMakupBookingDetails').removeClass('slds-hide');
            // added by nishi:start: for manage makeup and adhoc bookings
            if(groupAppointmentType == 'MakeUp'){
                $('#newGroupMakupBookingDetailsHeader').html('Add Make-Up Booking');
                $('.makeupPackage').removeClass('slds-hide');
                $('.adhocPackage').addClass('slds-hide');
            }else{
                $('#newGroupMakupBookingDetailsHeader').html('Add Adhoc Group booking');
                $('.adhocPackage').removeClass('slds-hide');
                $('.makeupPackage').addClass('slds-hide');
            }
            // added by nishi:end: for manage makeup and adhoc bookings
            $('#saveNewGroupMakupBooking').attr('data-groupAppointmentType', groupAppointmentType);
            $('#GroupMakupDurationLabel').html(selectedStudentData.duration);  
            var groupAppointmentType  = $('#saveNewGroupMakupBooking').attr('data-groupAppointmentType');
            if(groupAppointmentType === 'AdHoc'){ 
                getGroupAdhocPackagesList(selectedStudentData.centerId,selectedStudentData.selgroupClassId,selectedStudentData.isOssia);
            }
        }
        
        // nishi: 3-Nov-2020: for get Adhoc Group class Packages list If aureus organisation then we get package according to duration and center
        // If ossia organisation then we get pacakges according to instrument, grade and duration
        function getGroupAdhocPackagesList(centerid,groupClassid,isOssia){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.getGroupAdhocPackagesList}',
                centerid, groupClassid,isOssia,
                function (result, event) {
                    console.log('result'+result);
                    var adhocPackagesListOfEvent = JSON.parse(result.replace(/(&quot\;)/g, "\""));
                    console.log('adhocPackagesListOfEvent'+adhocPackagesListOfEvent);
                    var instrumentStr = '<option value="">Select Adhoc Package</option>';
                    $('#ossiaGroupClassAdhocPackage').empty();
                    $(adhocPackagesListOfEvent).each(function (index, value) {
                        instrumentStr += '<option value="' + value.packageid + ';' + value.packageName + ';' + value.packageDuration + ';' + value.instrument+ ';' + value.gradeList + '">'+ value.packageName + '</option>';
                    });
                    $('#ossiaGroupClassAdhocPackage').append(instrumentStr);
                    $('#ossiaGroupClassAdhocPackage').removeAttr('disabled');
                    
                },
                { escape: true }
            );

        }

        $('#GroupMakupStudentInput').keyup(function () {
            var centerid = selectedStudentData.centerId;
            var student_name = $(this).val();
            var studentListItem = '';
            var groupAppointmentType  = $('#saveNewGroupMakupBooking').attr('data-groupAppointmentType');
            var isOssia =bookingData.isOssia;
            console.log('bookingData.isOssia'+bookingData.isOssia);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.getGroupStudents}',
                student_name, centerid,groupAppointmentType,isOssia,
                function (result, event) {
                    console.log('result'+result);
                    var ResultOfEvent = JSON.parse(result.replace(/(&quot\;)/g, "\""));
                    $(ResultOfEvent).each(function (index3, value3) {
                        studentListItem += '<li role="presentation" class="slds-listbox__item " id="' + value3.id + '"><div id="option' + (index3 + 1) + '" class="slds-media slds-listbox__option slds-listbox__option_entity slds-listbox__option_has-meta GroupMakupstudent-list" role="option"><span class="slds-media__body">';
                        studentListItem += '<span class="slds-listbox__option-text slds-listbox__option-text_entity studentNameLabel">' + value3.label + '</span><span class="slds-listbox__option-meta slds-listbox__option-meta_entity"> • ' + value3.parentName + '</span></span></div></li>';
                    });
                    $('#GroupMakupStudentSelectContainer').removeClass('slds-is-open');
                    $('#GroupMakupStudentSelectContainer').attr('aria-expanded', 'false');
                    $('#GroupMakupStudentSearchList').empty();
                    $('#GroupMakupStudentSearchList').append(studentListItem);
                    $('#GroupMakupStudentSelectContainer').addClass('slds-is-open');
                    $('#GroupMakupStudentSelectContainer').attr('aria-expanded', 'true');
                   
                    if (ResultOfEvent.length == 0) {
                        removeAddGroupClassAppoinment();
                    }

                    $('.GroupMakupstudent-list').click(function () {
                        $('#ossiaGroupClassInstrment').empty();
                        var studentId = $(this).parent().attr('id');
                        $(ResultOfEvent).each(function (index4, value4) {
                            if (value4.id == studentId) {
                                bookingData.studentId = value4.id;

                                if (value4.label) {
                                    $('#GroupMakupStudentInput').val(value4.label);
                                } else {
                                    $('#GroupMakupStudentInput').val('');
                                }

                                if (value4.parentName) {
                                    $('#GroupMakupParentInput').val(value4.parentName);
                                } else {
                                    $('#GroupMakupParentInput').val('');
                                }

                                if (value4.phone) {
                                    $('#GroupMakupPhoneInput').val(value4.phone);
                                } else {
                                    $('#GroupMakupPhoneInput').val('');
                                }

                                if (value4.email) {
                                    $('#GroupMakupEmailInput').val(value4.email);
                                } else {
                                    $('#GroupMakupEmailInput').val('');
                                }
                                console.log('groupAppointmentType',groupAppointmentType);
                                if(groupAppointmentType === 'MakeUp'){
                                    if(bookingData.isOssia){
                                        ossiaGroupClassMakeupEnrolment(centerid,bookingData.teacherId,bookingData.selgroupClassId,value4.id);
                                    }else{
                                        $('#GroupMakupHoursLabel').html(value4.makeupHours + ' min');
                                        bookingData.availableHours = value4.makeupHours;
                                            if (bookingData.availableHours < bookingData.duration) {
                                                $('#saveNewGroupMakupBooking').attr('disabled', '');
                                                $('#GroupMakupHoursErrorMsg').text('Insufficient Makup minutes');
                                            } else {
                                                $('#saveNewGroupMakupBooking').removeAttr('disabled');
                                                $('#GroupMakupHoursErrorMsg').text('');
                                            }
                                    }
                                }
                                if(groupAppointmentType === 'AdHoc'){
                                    console.log('groupAppointmentType',groupAppointmentType);
                                    if(bookingData.isOssia){
                                        ossiaGroupClassAdhocEnrolment(centerid,bookingData.teacherId,bookingData.selgroupClassId,value4.id,bookingData.isOssia);
                                    }else{
                                        $('#GroupMakupHoursLabel').html(value4.makeupHours + ' min');
                                        bookingData.availableHours = value4.makeupHours;
                                    }
                                }
                                $('#GroupMakupParentInput').attr('disabled', '');
                                $('#GroupMakupPhoneInput').attr('disabled', '');
                                $('#GroupMakupEmailInput').attr('disabled', '');
                                $('#GroupMakupStudentSelectContainer').removeClass('slds-is-open');
                                $('#GroupMakupStudentSelectContainer').attr('aria-expanded', 'false');
                                $('#GroupMakupStudentSearchList').empty();
                                

                            }
                        });

                    });



                },
                { escape: true }
            );

        });


         

        //@@jatin:19-dec-2019: for get Packages according to center or instrument
        function getUpgradePackageByTeacher() {
            $('#selectPackageEnrolGroupUpdate').empty();
            $('#selectPackageEnrolGroupUpdate').attr('disabled', 'true');
            var teacherId = $('#selectTeacherEnrolGroupUpdate').val();
            var centerId = $('#selectTeacherEnrolGroupUpdate').attr('data-center');
            var grade = $('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
            var bookingId = $('#advanceOptionsBtn').attr('data-id');
           //console.log('getUpgradePackageByTeacher',bookingId);
           //console.log('centerId',centerId);
           //console.log('teacherId',teacherId);
           //console.log('grade',grade);
           var grade =$('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
            if(grade == 'GroupToChangeCenter'){
                    centerId = $('#selectCenterEnrolGroupUpdate').val();
            }
            if (teacherId != 'Select Teacher' && centerId && bookingId) {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ClassEditController.getUpgradePackageAccordingToTeacher}',
                    centerId, teacherId, bookingId,grade,
                    function (result, event) {
                       //console.log('result',result);
                        var packageEnrol = '<option value="Select Package">Select an Option</option>';
                        $(result).each(function (index, value) {
                            packageEnrol += '<option value="' + value.Id + '">' + value.Name + '</option>';
                        });
                        $('#selectPackageEnrolGroupUpdate').append(packageEnrol);
                        $('#selectPackageEnrolGroupUpdate').removeAttr('disabled');
                    }
                );
            }
        }
       
        // Jatin:3-Jan-2020 : for show Change Enrolment Popup and show different package according to grade conditions
        function upgradeEnrolmentGroupUpgrade(grade){
            $('#teacherSelectGroupErrorMsg').html('');
            $('#packageSelectGroupErrorMsg').html('');
            $('#effectiveDateGroupErrorMsg').html('');
            $('#newEffectiveDateGroupErrorMsg').html('');
            $('#timeSlotGroupErrorMsg').html('');
            $('#currentTeacherEnrolGroupUpdate').html('');
            $('#currentDateTimeEnrolGroupUpdate').html('');
            $('#currentPackageEnrolGroupUpdate').html('');
            $('#selectTeacherEnrolGroupUpdate').empty();
            $('#selectPackageEnrolGroupUpdate').empty();
            $('#selectNewEffectiveDateEnrolGroupUpdate').empty();
            $('#selectCenterEnrolGroupUpdate').empty();
            $("#selectPackageEnrolGroupUpdate").attr('title',  '');
            $('#selectPackageEnrolGroupUpdate').attr('disabled', 'true');
            $('#advanceOptionPopup').addClass('slds-hide');
            $('#selectEffectiveDateEnrolGroupUpdate').empty();
            $('.enrolmentWithChangeCenter').addClass('slds-hide');
            $('.enrolmentWithoutChangeCenter').addClass('slds-hide');
            var enrolmentId = $('#updateEnrolmentBtn').attr('data-enrol');
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.getGroupLessonEnrolmentUpdateDetails}',
                enrolmentId,grade, 
                function(result, event){
                    if(grade == 'GroupToHigherPackage'){
                        $('#enrolmentUpdatePopupGroupHeader').html('Upgrade to Group Package');
                    }else if(grade=='GroupToIndividual'){
                        $('#enrolmentUpdatePopupGroupHeader').html('Upgrade to Individual Package');
                    }else if(grade=='GroupToSameClass'){
                        $('#enrolmentUpdatePopupGroupHeader').html('Change Class');
                    }else if(grade=='GroupToChangeCenter'){
                        $('#enrolmentUpdatePopupGroupHeader').html('Change Centre');
                        $('#currentCenterEnrolGroupUpdate').html(result.center);
                        $('#enrolmentWithChangeCenter').removeClass('slds-hide');
                        $('#enrolmentWithoutChangeCenter').addClass('slds-hide');
                    }
                    $('#updateEnrolmentonGroupClick').attr({                        
                            'data-duration': result.duration,
                            'data-center': result.center,
                            'data-currentInstrument': result.currentInstrument,
                            'data-currentTeacherId': result.currentTeacherId,
                            'data-currentPackageId': result.currentPackageId,
                            'data-enrol': enrolmentId,
                            'data-enrolDay': result.currentWeekDay,
                            'data-groupUpgrade':grade                
                        });
                    $('#currentTeacherEnrolGroupUpdate').html(result.currentTeacher);    
                    $('#currentTeacherEnrolGroupUpdate').attr('data-currentTeacherId',result.currentTeacherId);
                    $('#currentDateTimeEnrolGroupUpdate').html(result.currentDayTimeSlot);
                    $('#currentPackageEnrolGroupUpdate').html(result.currentPackage);
                    $('#currentPackageEnrolGroupUpdate').attr('data-currentPackageId',result.currentPackageId);
                    $('#selectTeacherEnrolGroupUpdate').attr({'data-duration': result.duration, 'data-center': result.center,'data-groupUpgrade':grade});
                     if(grade=='GroupToChangeCenter'){
                        $('#enrolmentUpdatePopupGroupHeader').html('Change Centre');
                        $('#currentCenterEnrolGroupUpdate').html(result.centerName);
                        $('#currentCenterEnrolGroupUpdate').attr('data-currentcenterrId',result.center);
                        $('.enrolmentWithChangeCenter').removeClass('slds-hide');
                        $('.enrolmentWithoutChangeCenter').addClass('slds-hide');
                        
                        var weekDatesList = [];
                        var effectiveDate = moment();
                        for (var startday = 1; startday <= 7; startday++) {
                            var day = new Date(effectiveDate.year(), parseInt(effectiveDate.month()) + 1, startday);
                            var startedDate = new moment(day);
                            //if (startedDate.format('ddd') == week) {
                                newEffectiveDayObj = {};
                                newEffectiveDayObj.value = startedDate.format('MM/DD/YYYY');
                                newEffectiveDayObj.label = startedDate.format('ddd, MMM DD YYYY');
                                weekDatesList.push(newEffectiveDayObj);
                        // }
                        }
                        if(weekDatesList.length > 0){
                            var effectiveDateStr = '<option>Select Effective Date</option>';
                            $(weekDatesList).each(function (index, value) {
                                effectiveDateStr += '<option value="' + value.value + '">' + value.label + '</option>';
                            });
                            $('#selectNewEffectiveDateEnrolGroupUpdate').append(effectiveDateStr);
                        }
                        
                        if ('centers' in result) {
                            var centerEnrol = '<option>Select Centre</option>';
                            $(result.centers).each(function (index, value) {
                                centerEnrol += '<option value="' + value.Id + '">' + value.Name + '</option>';
                            });
                            $('#selectCenterEnrolGroupUpdate').append(centerEnrol);
                            
                        }
                        $('#selectTeacherEnrolGroupUpdate').empty();
                    }else{
                        $('.enrolmentWithChangeCenter').addClass('slds-hide');
                         $('.enrolmentWithoutChangeCenter').removeClass('slds-hide');
                        if('teachers' in result){
                            var teachersEnrol = '<option>Select Teacher</option>';
                            $(result.teachers).each(function(index, value){
                                teachersEnrol += '<option value="'+value.Id+'">'+value.Name+'</option>';
                            });
                            $('#selectTeacherEnrolGroupUpdate').append(teachersEnrol);
                        }
                        $('#enrolmentUpdateGroupPopup').removeClass('slds-hide');   
                        var weekDatesList = getWeekDayDates(result.currentWeekDay, 1, 4);
                        if(weekDatesList.length > 0){
                            var effectiveDateStr = '<option>Select Effective Date</option>';
                            $(weekDatesList).each(function(index, value){
                                effectiveDateStr += '<option value="'+value.value+'">'+value.label+'</option>';
                            });
                            $('#selectEffectiveDateEnrolGroupUpdate').append(effectiveDateStr);
                            $('#selectNewEffectiveDateEnrolGroupUpdate').val('');
                            $('#selectNewEffectiveDateEnrolGroupUpdate').empty();
                            $('#selectNewEffectiveDateEnrolGroupUpdate').attr('disabled', 'true');

                            $('#availableTimeSlotsUpdateEnrolmentGroup').val('');
                            $('#availableTimeSlotsUpdateEnrolmentGroup').empty();
                            $('#availableTimeSlotsUpdateEnrolmentGroup').attr('disabled', 'true');
                        }
                    }
                    $('#enrolmentUpdateGroupPopup').removeClass('slds-hide'); 
                }
            );
        }
        function updateEnrolmentGroupClick(){
            var grade = $('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
            $('#teacherSelectGroupErrorMsg').html('');
            $('#centerSelectGroupErrorMsg').html('');
            $('#packageSelectGroupErrorMsg').html('');
            $('#newEffectiveDateGroupErrorMsg').html('');
            $('#effectiveDateGroupErrorMsg').html('');
            $('#timeSlotGroupErrorMsg').html('');
            $('.invoiceTopupGroupClassItem').addClass('slds-hide');
            $('#nextInvoiceItem').addClass('slds-hide');
            $('#upgradeBookingclass').addClass('slds-hide');
            $('#upgradeGroupClassSummaryHeader').html('');
            $('#confirmUpgradeEnrolment').addClass('slds-hide');
            $('#confirmGroupClassEnrolment').addClass('slds-hide');
            var errorFlag = false;
            var newcenter,enrolmentId, newPackage, newTeacher, newTime,newEffectiveDate, 
                    currentEffectiveDate, oldTeacher, oldPackage, oldTime, newPackageName, oldPackageName,
                    newclass,oldclass,oldCenter;
            enrolmentId = $('#updateEnrolmentonGroupClick').attr('data-enrol');
            newPackage = $('#selectPackageEnrolGroupUpdate').val();
            newTeacher = $('#selectTeacherEnrolGroupUpdate').val();
            newcenter = $('#selectCenterEnrolGroupUpdate').val();
            currentEffectiveDate = $('#selectEffectiveDateEnrolGroupUpdate').val();
            //currentEffectiveDate = (newdate.split('T')[0].split('-')[1]+'/'+newdate.split('T')[0].split('-')[2]+'/'+newdate.split('T')[0].split('-')[0]);;
           //console.log('currentEffectiveDate'+currentEffectiveDate);
            newEffectiveDate = $('#selectNewEffectiveDateEnrolGroupUpdate').val();
            newTime = $('#availableTimeSlotsUpdateEnrolmentGroup').val();
            oldTeacher = $('#updateEnrolmentonGroupClick').attr('data-currentTeacherId');
            oldCenter = $('#currentCenterEnrolGroupUpdate').attr('data-currentcenterrId');
            oldPackage = $('#updateEnrolmentonGroupClick').attr('data-currentPackageId');
            oldTime = $('#currentDateTimeEnrolGroupUpdate').text().split('@')[1];
            oldclass = $('#updateEnrolmentonGroupClick').attr('data-classId');
            //console.log('@@@@newPackage'+newPackage);
            newPackageName = $('#selectPackageEnrolGroupUpdate option:selected').text();
            //console.log('@@@@newPackageName'+newPackageName);
            oldPackageName = $('#currentPackageEnrolGroupUpdate').text();
            if (!newPackage || newPackage == 'Select Package') {
                $('#packageSelectGroupErrorMsg').html('Please Select the Package...');
                errorFlag = true;
            }
            if (!newTeacher || newTeacher == 'Select Teacher') {
                $('#teacherSelectGroupErrorMsg').html('Please Select the Teacher...');
                errorFlag = true;
            }
            if(grade =='GroupToChangeCenter'){
                if ( !newcenter || newcenter == 'Select Centre') {
                    $('#centerSelectGroupErrorMsg').html('Please Select the Centre...');
                    errorFlag = true;
                }
                currentEffectiveDate = $('#UpgradeToIndividualEnrolClassSummary').attr('data-effectiveDate').split('T')[0];
            }else{
                if (!currentEffectiveDate || currentEffectiveDate == 'Select Effective Date') {
                    $('#effectiveDateGroupErrorMsg').html('Please Select Date...');
                    errorFlag = true;
                }
            }
            if (!newEffectiveDate || newEffectiveDate == 'Select Effective Date') {
                    $('#newEffectiveDateGroupErrorMsg').html('Please Select Date...');
                    errorFlag = true;
            }
            if (!newTime || newTime == 'Select Time Slot') {
                $('#timeSlotGroupErrorMsg').html('Please Select Time Slot...');
                errorFlag = true;
            }
            if (enrolmentId &&!errorFlag && grade) {
            
                if(grade =='GroupToHigherPackage'){
                    newTime = $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[1];
                    newclass= $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[0];
                    UpgradeToIndividualEnrolClassSummary(newEffectiveDate, oldPackage, newPackage, currentEffectiveDate,
                                        newTime,oldTime,newclass,oldclass, enrolmentId, grade,oldTeacher,newTeacher,'','');
                }else if(grade =='GroupToIndividual'){
                    newTime = $('#availableTimeSlotsUpdateEnrolmentGroup').val();
                    UpgradeToIndividualEnrolClassSummary(newEffectiveDate, oldPackage, newPackage, currentEffectiveDate,
                                        newTime,oldTime,'','', enrolmentId, grade,oldTeacher,newTeacher,'','');
                }else if(grade =='GroupToSameClass'){
                    newTime = $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[1];
                    newclass= $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[0];
                    UpgradeToIndividualEnrolClassSummary(newEffectiveDate, oldPackage, newPackage, currentEffectiveDate,
                                        newTime,oldTime,newclass,oldclass, enrolmentId, grade,oldTeacher,newTeacher,'','');
                }else if(grade =='GroupToChangeCenter'){
                    newTime = $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[1];
                    newclass= $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[0];
                    UpgradeToIndividualEnrolClassSummary(newEffectiveDate, oldPackage, newPackage,currentEffectiveDate ,
                                        newTime,oldTime,newclass,oldclass, enrolmentId, grade,oldTeacher,newTeacher,newcenter,oldCenter);
                }
                
                
            }   
        }
         
        
        // @@Jatin:19-dec-2019: upgrade group lesson to individual enrollement summary page show
        function UpgradeToIndividualEnrolClassSummary(newEffectiveDate, oldPackage, newPackage, currentEffectiveDate,
                                            newTime,oldTime,newclass,oldclass, enrolmentId, grade,oldTeacher,newTeacher,newcenter,oldCenter) {
                $('#updateEnrolmentonGroupClick').removeAttr('disabled');
                $('#enrolmentUpdateGroupPopup').addClass('slds-hide');
                $('#updateEnrolmentonClickNo').addClass('slds-hide');
                $('#UpgradeToIndividualEnrolNo').removeClass('slds-hide');
                
                $('#confirmUpgradeToIndividualEnrol').removeClass('slds-hide');
                $('#confirmChangeEnrolment').addClass('slds-hide');
                $('#upgradeBookingclass').addClass('slds-hide');
                $('#gradeClassSubscriptionPopup').addClass('slds-hide');
                /*getEntrollmentPackageSummary('UpgradeToIndividual',enrolmentId,newTeacher,oldTeacher,newPackage,oldPackage,
                                          newEffectiveDate,currentEffectiveDate,newTime,oldTime);*/
                    // @@jatin: 23-dec-2019: for get Summary
                getUpgradeGroupClassPackageSummary(newEffectiveDate, oldPackage, newPackage,newTime,oldTime,enrolmentId,
                                                    currentEffectiveDate,grade,oldclass,newclass,oldTeacher,newTeacher,newcenter,oldCenter);
            
        }
       
        // @@jatin: 19-dec-2019: for create group lesson makeup booking
        function createGroupbooking(redirectCase) {
            var bookingDataStr = JSON.stringify(bookingData);
            //console.log('bookingDataStr' + bookingDataStr);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.createGroupbooking}',
                bookingDataStr, redirectCase, caseId,
                function (result, event) {
                  //console.log(result);
                    if (event.status) {
                        if (result.caseId) {
                            $('.confirmModal').addClass('slds-hide');
                            redirectToCaseRecord(result.caseId);
                            refreshNewGroupMakupBookingPopup();
                        } else if (result.msg == 'false') {
                            $('#newBookingGroupMakupDetails').addClass('slds-hide');
                            refreshNewGroupMakupBookingPopup();
                            refreshCalendar();
                            $('.confirmModal').addClass('slds-hide');

                        } else if (result.msg == 'duration') {
                            $('#saveNewGroupMakupBooking').css('pointer-events', '');
                            $('#GroupMakupHoursErrorMsg').text('Insufficient Makup minutes');
                        } else if (result.msg == 'existing') {
                            $('#newGroupMakupBookingDetails').addClass('slds-hide');
                            refreshNewGroupMakupBookingPopup();
                            $('#toastMsg').html('Cannot create Booking Please Remove Existing Bookings..');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                        } else if (result.msg == 'error') {
                            $('#newGroupMakupBookingDetails').addClass('slds-hide');
                            refreshNewGroupMakupBookingPopup();
                            $('#toastMsg').html('Booking cannot be created...');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                            refreshCalendar();
                        }
                    }

                }
            );
        }
        function refreshNewGroupMakupBookingPopup() {
            bookingData = {};
            $('#saveNewGroupMakupBooking').css('pointer-events', '');
            $('#saveNewGroupMakupBooking').attr('disabled', '');
            $('#GroupMakupCenterNameLabel').html('');
            $('#GroupMakupDateLabel').html('');
            $('#GroupMakupTimeLabel').html('');
            $('#GroupMakupPackageSelect').val('');
            $('#GroupMakupDurationLabel').html('');
            $('#GroupMakupParentInput').val('');
            $('#GroupMakupPhoneInput').val('');
            $('#GroupMakupEmailInput').val('');
            $('#GroupMakupStudentInput').val('');
            $('#GroupMakupParentInput').removeAttr('disabled');
            $('#GroupMakupPhoneInput').removeAttr('disabled');
            $('#GroupMakupEmailInput').removeAttr('disabled');
            $('#GroupMakupHoursSection').addClass('slds-hide');
            //$('.repeatSelection').addClass('slds-hide');
            //$('#recurringSection').addClass('slds-hide');
            $('#GroupMakupMakeupHoursErrorMsg').text('');
            $('#GroupMakupRecurrenceOccure').empty();
            $('#GroupMakupTotalNoOfBookings').html('');
            $('#GroupMakupAfterRadio').prop('checked', true);
            $('#GroupMakupHoursLabel').text('');
            $('#GroupMakupRepeatSelect').val('None');
            $('#GroupMakupAfterRadio').prop('checked');
            $('#GroupMakupSelectPackageListSection').empty();
            $('#GroupMakupGetPackageId').removeClass('slds-is-open');
            $('#GroupMakupRepeatSelectBusy').val('None');
            $('#GroupMakupHoursErrorMsg').text('');
        }
        function createGroupMakupBooking() {
            var groupAppointmentType = $('#saveNewGroupMakupBooking').attr('data-groupAppointmentType');
            var errorFlag = false;
            if(bookingData.isOssia){
                var enrolInstrument = $('#ossiaGroupClassInstrment').val(); 	
                if(!enrolInstrument || enrolInstrument == '' || enrolInstrument == undefined  ){	
                    $('#ossiaGroupClassInstrmentErrorMsg').html('Please Select the Instrument...');	
                    $('#saveNewGroupMakupBooking').attr('disabled', '');
                    errorFlag = true;           	
                }	
                if(groupAppointmentType === 'MakeUp'){
                    var selectedInstrument = $('#saveNewGroupMakupBooking').attr('data-enrolInstrument');
                    var selectedTeacherInstrument = bookingData.classInstrument;
                //console.log('selectedInstrument',selectedInstrument);
                //console.log('selectedTeacherInstrument',selectedTeacherInstrument);
                    if(!(selectedInstrument && selectedInstrument != null && selectedInstrument != undefined && selectedInstrument.length > 0 &&	
                        selectedTeacherInstrument && selectedTeacherInstrument != null && selectedTeacherInstrument != undefined && selectedTeacherInstrument.length > 0	
                        && selectedTeacherInstrument.includes(selectedInstrument))){	
                        $('#saveNewGroupMakupBooking').attr('disabled', '');
                        $('#ossiaGroupClassInstrmentErrorMsg').text('Please Select the different Instrument.Current teacher skills do not match the instrument you have chosen.');	
                        errorFlag = true;   	
                    }
                }
            }
            if(groupAppointmentType === 'MakeUp'){
                if (bookingData.availableHours < bookingData.duration) {
                        $('#saveNewGroupMakupBooking').attr('disabled', '');
                        $('#GroupMakupHoursErrorMsg').text('Insufficient Makup minutes');
                        errorFlag = true;   
                } 
            }
            if(!errorFlag){
                if(groupAppointmentType === 'MakeUp'){
                   //console.log('bookingData',bookingData);
                    $('.confirmModal').removeClass('slds-hide');
                    $('#confirmBody').html('Do you want to send an email?');
                    $('#confirmHeader').html('Email Confirmation');
                    $('#confirmModalYes').attr('data-origin', 'createGroupBooking');
                    $('#confirmModalNo').attr('data-origin', 'createGroupBooking');
                    $('#newGroupMakupBookingDetails').addClass('slds-hide');
                }else{
                    // create adhoc bookings 
                    var adhocpackageId = $('#ossiaGroupClassAdhocPackage').val();
                    if(!adhocpackageId || adhocpackageId == '' || adhocpackageId == undefined  ){	
                        $('#GroupAdhocPackageErrorMsg').text('Please Select Adhoc Package');
                        $('#saveNewGroupMakupBooking').attr('disabled', '');
                        errorFlag = true;  
                    }
                   //open adhoc payment summary model
                   if(!errorFlag){
                        showAdhocGroupClassBookings(bookingData.studentId,bookingData.packageId,bookingData.date.split('T')[0], bookingData.date.split('T')[1],1);
                   }
                }
            }
        }

        // show adhoc group class  packages details popup 
        function showAdhocGroupClassBookings(student, package, dateOfAppointment, timeOfAppointment,recurring){
            $('#countOfClassBookingTableBody').empty();
            $('#newGroupMakupBookingDetails').addClass('slds-hide');
            var teacherId = bookingData.teacherId; //$('#saveNewBooking').attr('data-teacher');
            console.log('getPackageDetail -student',student);     
            console.log('getPackageDetail -teacherId',teacherId);     
            console.log('getPackageDetail -package',package);     
            console.log('getPackageDetail -dateOfAppointment',dateOfAppointment);     
            console.log('getPackageDetail -recurring',recurring); 
            console.log('getPackageDetail -selgroupClassId',bookingData.selgroupClassId);     
            $('#newAdhocGroupClassDetailPopup').addClass('slds-hide');
           Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.getGroupAdhocPackageDetail}',
                student, package, teacherId, 
                function(result, event){
                    if (event.status) {
                        var trRow = '';
                        var total = 0;
                        var gstTotal = 0;  
                        console.log('getPackageDetail -result',result);     
                        if(timeOfAppointment){      
                            var formmatedTime = convertTimeToMoment(timeOfAppointment.split(':')[0], timeOfAppointment.split(':')[1]);      
                        }
                        $('#studentNameAdhocGroupClass').html(result.studentFirstName + ' ' + result.studentLastName);
                        $('#teacherNameAdhocGroupClass').html(result.teacherName);
                        $('#classLessonAdhocGroupClass').html(bookingData.selgroupClassName);
                        $('#centerNameAdhocGroupClass').html(result.centerName);
                        $('#packageDurationAdhocGroupClass').html(result.duration + ' min');
                        $('#classLessonAdhocGroupClass').html();
                        $('#createAdhocGroupClassBookingBtn').attr({'data-package': result.packageId,
                                                                    'data-centerId': filter.center,
                                                                    'data-teacherId': result.teacherId,
                                                                    'data-studentId': result.studentId,
                                                                    'data-count': recurring,
                                                                    'data-date': dateOfAppointment+'T'+timeOfAppointment,
                                                                    'data-isOssia': bookingData.isOssia,
                                                                    'data-enrolementId' : bookingData.enrolementId});
                        var gstRate =0;
                        for(var i=1; i<=recurring; i++){
                            var unitfee = parseFloat(result.packageFee);
                            console.log('unitfee',unitfee);
                            total += parseFloat(unitfee.toFixed(2));

                            trRow += '<tr class="slds-hint-parent"><td data-label="Sr.No"><div class="slds-truncate" title="Sr.No">'+i+'</div></td><td data-label="Package Name"><div class="slds-truncate" title="Package Name">'+result.packageName+'</div></td><td data-label="Package Time"><div class="slds-truncate" title="Package Time">'+formmatedTime+'</div></td><td data-label="Package Price"><div class="slds-truncate" title="Package Price">$'+parseFloat(unitfee).toFixed(2)+'</div></td></tr>';
                            if(result.gstRate > 0){
                                gstRate += parseFloat((parseFloat(result.unitFee) * parseFloat(result.gstRate) / 100).toFixed(2));
                                console.log('GSTrate'+gstRate);
                            }
                            console.log('@@gstRate'+gstRate);
                        }
                        if(gstRate > 0){
                            console.log('total',total);
                            console.log('result.gstRate',gstRate);
                            gstTotal = gstRate+total;
                            trRow += '<tr class="slds-hint-parent"><td  colspan="2"></td><td data-label="GST"><b>GST('+(result.gstRate.toFixed(2))+'%)</b></td><td>$'+(gstRate.toFixed(2))+'</td>';
                        }else{
                            gstTotal = 0;
                        }     
                        console.log('gstTotal',gstTotal);
                        trRow += '</tr><tr class="slds-hint-parent"><td colspan="2"></td><td data-label="total"><b>Total</b></td><td>$'+(parseFloat(gstTotal).toFixed(2))+'</td></tr>';
                        
                        $('#countOfClassBookingTableBody').append(trRow);
                        $('#newGroupMakupBookingDetails').addClass('slds-hide');
                        $('#newAdhocGroupClassDetailPopup').removeClass('slds-hide');
                        $('#createAdhocGroupClassBookingBtn').removeAttr('disabled');
                        $('#createAdhocGroupClassBookingBtn').css('pointer-events', '');
                    }
                }
            );
        }

        //nishi: 3-Nov-2020: In Aureus, Group ad-hoc booking should be created once the payment is successful whereas in Ossia, Group ad-hoc booking can be created even if the payment is failed.
        // Failed payments can be collected via dunning process as an outstanding invoice
        function createAdhocGroupClassBookings(){
            $('#createAdhocGroupClassBookingBtn').attr('disabled', 'true');
            $('#createAdhocGroupClassBookingBtn').css('pointer-events', 'none');
            var packageId = $('#createAdhocGroupClassBookingBtn').attr('data-package');
            var teacherId = $('#createAdhocGroupClassBookingBtn').attr('data-teacherId');
            var studentId = $('#createAdhocGroupClassBookingBtn').attr('data-studentId');
            var recurring = $('#createAdhocGroupClassBookingBtn').attr('data-count');
            var bookDate = $('#createAdhocGroupClassBookingBtn').attr('data-date');
            var center = $('#createAdhocGroupClassBookingBtn').attr('data-centerId');
            var groupLessonId =  $('#newGroupClassCMP').attr('data-groupclassid');
            var isossia = $('#createAdhocGroupClassBookingBtn').attr('data-isOssia');
            var enrolementId = '';
            if(isossia ==='true'){
                $('#createAdhocGroupClassBookingBtn').attr('data-enrolementId');
            }
            // console.log('packageId'+packageId);
            // console.log('teacherId'+teacherId);
            // console.log('studentId'+studentId);
            // console.log('recurring'+recurring);
            // console.log('bookDate'+bookDate);
            // console.log('center'+center);
            // console.log('groupLessonId'+groupLessonId);
            // console.log('isossia'+isossia);
            // console.log('enrolementId'+enrolementId);
            $('#newAdhocGroupClassDetailPopup').addClass('slds-hide');
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.createAdhocGroupClassBookings}',
                packageId,center,teacherId, studentId, recurring, bookDate,groupLessonId,enrolementId,
                function(result, event){
                    console.log('@@@result', result);
                    if (event.status) {
                        removeAddGroupClassAppoinment();
                        if(result){
                            $('#createAdhocGroupClassBookingBtn').removeAttr('disabled');
                            $('#createAdhocGroupClassBookingBtn').css('pointer-events', '');
                            $('#toastMsg').html('Adhoc Group Bookings are successfully created...');
                            toastLaunch();
                            refreshCalendar();
                        }else{
                            $('#createAdhocGroupClassBookingBtn').removeAttr('disabled');
                            $('#createAdhocGroupClassBookingBtn').css('pointer-events', '');
                            $('#toastMsg').html('Booking cannot be created...');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                            refreshCalendar();
                        }
                        
                    }
                }, 
                {escape: true}
            ); 
        }
        // jatin:19-dec-2019 :show group package list
        $('#GroupMakupPackageSelect').focusin(function () {
            $('#getGroupMakupPackageId').addClass('slds-is-open');
        });


        // @jatin : 11-dec-2019 : for upgrade package time slots
        function getGroupLessonTimeSlotsAccordingly(grade, dtObj, newClassId) {
           //console.log('dtObj' + dtObj);

           //console.log('newClassId' + newClassId);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.getGroupLessonTimeSlotsAccordingly}',
                dtObj.format('YYYY-MM-DD'), newClassId,
                function (result, event) {
                    ////console.log('result',result);
                    var availSlots = '';
                    $(result).each(function (index, value) {
                        availSlots += '<option value="' + value + '">' + value + '</option>';
                    });
                    if (grade == 'class upgrade') {
                        $('#availableTimeClassSlots').append(availSlots);
                        $('#availableTimeClassSlots').removeAttr('disabled');
                    }

                }
            );
        }

        //@jatin : 28-Nov-2019 : Upgrade Class Subscriptions
        function submitUpgradeGroupToHigherPackage() {
            var error = false;
            var bookingId = $('#updateEnrolmentonGroupClick').attr('data-id');
            var oldPackageId = $('#updateEnrolmentonGroupClick').attr('data-currentPackageId');
            var newPackageId = $('#selectPackageEnrolGroupUpdate').val();
            var effectiveDate = $('#selectNewEffectiveDateEnrolGroupUpdate').val();
            var availableTimeSlot = $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[1];
            var enrolmentId = $('#updateEnrolmentonGroupClick').attr('data-enrol');
            var newTeacherId = $('#selectTeacherEnrolGroupUpdate').val();
            var oldTeacherId = $('#updateEnrolmentonGroupClick').attr('data-currentTeacherid');
            var oldClassId = $('#updateEnrolmentonGroupClick').attr('data-classid');
            var newClassId = $('#updateEnrolmentonGroupClick').attr('data-newclass');
            var today = moment();
            if (bookingId && oldPackageId && oldClassId && newClassId,oldTeacherId) {
                if (newPackageId == "Select an Option") {
                    error = true;
                }
                if (!effectiveDate) {
                    error = true;
                } else {
                    var effectiveDateMoment = moment();
                    effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                    if (today.diff(effectiveDateMoment) > 0) {
                        // $('#effectiveDateError').html('Select Future effective date....');
                        error = true;
                    }
                }
                if (availableTimeSlot == "Select Time Slot") {
                    error = true;
                }
                if (newTeacherId == "Select Teacher") {
                    error = true;
                }
                
                if (!error) {
                    $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'none');
                    $('#confirmUpgradeClassEnrolment').attr('disabled', 'true');
                    //console.log('submitUpgradeClassPackageRequest found all details');
                    $('#confirmModalYes').attr({ 'data-origin': 'upgradeGroupToHigherPackage',
                                                'data-id': bookingId, 
                                                'data-date': effectiveDate, 
                                                'data-newPackage': newPackageId, 
                                                'data-oldPackage': oldPackageId, 
                                                'data-oldTeacherId': oldTeacherId,
                                                'data-newTeacherId': newTeacherId,
                                                'data-timeslot': availableTimeSlot, 
                                                'data-oldClass': oldClassId,
                                                'data-newclass': newClassId});
                    $('#confirmModalYes').trigger('click');
                }
            }
        }
        //@jatin : 28-Nov-2019 : Upgrade Class Subscriptions
        function submitUpgradeClassPackageRequest() {
            var grade = $('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
            if(grade =='GroupToIndividual'){
               //console.log('grade',grade);
                submitUpgradeToIndividualPackageRequest();
            }else if(grade =='GroupToHigherPackage'){
                submitUpgradeGroupToHigherPackage();
            }else if(grade =='GroupToSameClass'){
                submitUpdateToSameGroup();
            }else if(grade =='GroupToChangeCenter'){
                submitChangeCenterSameGroup();
            }

        }

        //@@nishi 12-nov-2019: change center group  class To same package prise class bookings
        function submitChangeCenterSameGroup(){
            var grade = $('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
            var error = false;
            var bookingId = $('#updateEnrolmentonGroupClick').attr('data-id');
            var oldPackageId = $('#updateEnrolmentonGroupClick').attr('data-currentPackageId');
            var newPackageId = $('#selectPackageEnrolGroupUpdate').val();
            var effectiveDate = $('#selectNewEffectiveDateEnrolGroupUpdate').val();
            var availableTimeSlot = $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[1];
            var enrolmentId = $('#updateEnrolmentonGroupClick').attr('data-enrol');
            var newTeacherId = $('#selectTeacherEnrolGroupUpdate').val();
            var oldTeacherId = $('#updateEnrolmentonGroupClick').attr('data-currentTeacherid');
            var oldClassId = $('#updateEnrolmentonGroupClick').attr('data-classid');
            var newClassId = $('#updateEnrolmentonGroupClick').attr('data-newclass');
            var newCenterId = $('#updateEnrolmentonGroupClick').attr('data-newcentreid');
            var oldCenterId= $('#updateEnrolmentonGroupClick').attr('data-center');
            var today = moment();
            if (bookingId && oldPackageId && oldClassId && newClassId && oldTeacherId && oldCenterId) {
                if (newPackageId == "Select an Option") {
                    error = true;
                }
                if (!effectiveDate) {
                    error = true;
                } else {
                    var effectiveDateMoment = moment();
                    effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                    if (today.diff(effectiveDateMoment) > 0) {
                        // $('#effectiveDateError').html('Select Future effective date....');
                        error = true;
                    }
                }
                if (availableTimeSlot == "Select Time Slot") {
                    error = true;
                }
                if (newTeacherId == "Select Teacher") {
                    error = true;
                }
                
                if (!error) {
                    $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'none');
                    $('#confirmUpgradeClassEnrolment').attr('disabled', 'true');
                    //console.log('submitUpgradeClassPackageRequest found all details');
                    $('#confirmModalYes').attr({ 'data-origin': 'ChangeCenterGroupClass',
                                                'data-id': bookingId, 
                                                'data-date': effectiveDate, 
                                                'data-newPackage': newPackageId, 
                                                'data-oldPackage': oldPackageId, 
                                                'data-oldTeacherId': oldTeacherId,
                                                'data-newTeacherId': newTeacherId,
                                                'data-timeslot': availableTimeSlot, 
                                                'data-oldClass': oldClassId,
                                                'data-newclass': newClassId,
                                                'data-newCenterId': newCenterId,
                                                'data-oldCenterId': oldCenterId});
                    $('#confirmModalYes').trigger('click');
                }
            }
        }
        //@@jatin 4-jan-2019: Update group  class To same package prise class bookings
        function submitUpdateToSameGroup(){
            var error = false;
            var bookingId = $('#updateEnrolmentonGroupClick').attr('data-id');
            var oldPackageId = $('#updateEnrolmentonGroupClick').attr('data-currentPackageId');
            var newPackageId = $('#selectPackageEnrolGroupUpdate').val();
            var effectiveDate = $('#selectNewEffectiveDateEnrolGroupUpdate').val();
            var availableTimeSlot = $('#availableTimeSlotsUpdateEnrolmentGroup').val().split('-')[1];
            var enrolmentId = $('#updateEnrolmentonGroupClick').attr('data-enrol');
            var newTeacherId = $('#selectTeacherEnrolGroupUpdate').val();
            var oldTeacherId = $('#updateEnrolmentonGroupClick').attr('data-currentTeacherid');
            var oldClassId = $('#updateEnrolmentonGroupClick').attr('data-classid');
            var newClassId = $('#updateEnrolmentonGroupClick').attr('data-newclass');
            var today = moment();
            if (bookingId && oldPackageId && oldClassId && newClassId&&oldTeacherId) {
                if (newPackageId == "Select an Option") {
                    error = true;
                }
                if (!effectiveDate) {
                    error = true;
                } else {
                    var effectiveDateMoment = moment();
                    effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                    if (today.diff(effectiveDateMoment) > 0) {
                        // $('#effectiveDateError').html('Select Future effective date....');
                        error = true;
                    }
                }
                if (availableTimeSlot == "Select Time Slot") {
                    error = true;
                }
                if (newTeacherId == "Select Teacher") {
                    error = true;
                }
                
                if (!error) {
                    $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'none');
                    $('#confirmUpgradeClassEnrolment').attr('disabled', 'true');
                    //console.log('submitUpgradeClassPackageRequest found all details');
                    $('#confirmModalYes').attr({ 'data-origin': 'GroupToSameClass',
                                                'data-id': bookingId, 
                                                'data-date': effectiveDate, 
                                                'data-newPackage': newPackageId, 
                                                'data-oldPackage': oldPackageId, 
                                                'data-oldTeacherId': oldTeacherId,
                                                'data-newTeacherId': newTeacherId,
                                                'data-timeslot': availableTimeSlot, 
                                                'data-oldClass': oldClassId,
                                                'data-newclass': newClassId});
                    $('#confirmModalYes').trigger('click');
                }
            }
        }
        
        //@jatin : 24-Dec-2019 : Upgrade class To Individual bookings 
        function submitUpgradeToIndividualPackageRequest() {
            //console.log('submitUpgradeToIndividualPackageRequest');
            var error = false;
            var bookingId = $('#updateEnrolmentonGroupClick').attr('data-id');
            var oldPackageId = $('#updateEnrolmentonGroupClick').attr('data-currentPackageId');
            var newPackageId = $('#selectPackageEnrolGroupUpdate').val();
            var effectiveDate = $('#selectNewEffectiveDateEnrolGroupUpdate').val();
            var availableTimeSlot = $('#availableTimeSlotsUpdateEnrolmentGroup').val();
            var enrolmentId = $('#updateEnrolmentonGroupClick').attr('data-enrol');
            var newTeacherId = $('#selectTeacherEnrolGroupUpdate').val();
            var oldTeacherId = $('#updateEnrolmentonGroupClick').attr('data-currentTeacherid');
            var today = moment();
            if (bookingId && oldPackageId && oldTeacherId) {
                if (newPackageId == "Select an Option") {
                    error = true;
                }
                if (!effectiveDate) {
                    error = true;
                } else {
                    var effectiveDateMoment = moment();
                    effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                    if (today.diff(effectiveDateMoment) > 0) {
                        // $('#effectiveDateError').html('Select Future effective date....');
                        error = true;
                    }
                }
                if (availableTimeSlot == "Select Time Slot") {
                    error = true;
                }

                if (newTeacherId == "Select Teacher") {
                    error = true;
                }

                if (!error) {
                    $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'none');
                    $('#confirmUpgradeClassEnrolment').attr('disabled', 'true');
                    //console.log('submitUpgradeClassPackageRequest found all details');
                    $('#confirmModalYes').attr({ 'data-origin': 'upgradeToIndividualClass',
                                                 'data-id': bookingId, 
                                                 'data-date': effectiveDate, 
                                                 'data-newPackage': newPackageId, 
                                                 'data-oldPackage': oldPackageId,
                                                  'data-timeslot': availableTimeSlot, 
                                                  'data-oldTeacherId': oldTeacherId,
                                                   'data-newTeacherId': newTeacherId });
                    $('#confirmModalYes').trigger('click');

                }
            }
        }
        //@jatin:24-Dec-2019 : for manage upgrade group class To Individual bookings 
        function upgradeToIndividualClassOfCustomer(bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, caseId, caseRedirect, casevalues, oldTeacher,newTeacher){
             Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.upgradeToIndividualClassOfCustomer}',
                bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, caseId, caseRedirect, casevalues, oldTeacher,newTeacher,
                function(result, event){
                     refreshCalendar();
                    $('#confirmModalYes').css('pointer-events','auto');
                    $('#confirmModalYes').removeAttr('disabled');
                    $('#confirmModalNo').css('pointer-events','auto');
                    $('#confirmModalNo').removeAttr('disabled');
                   //console.log('result'+result);
                    if(result && result!='error'){                       
                        $('#confirmModal').addClass('slds-hide');
                        redirectToCaseRecord(result);  
                    }else{
                        $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                        $('#toastMsg').html('Request failure!<br/>Please try again....');
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                   
                }
            );
              
                
        }
        //@jatin:03-Dec-2019 : for manage upgrade group class bookings 
        function upgradePackageClassOfCustomer(bookingId, effectiveDate, newPackageId, oldPackageId,newTeacher,oldTeacher, timeSlot, caseId, caseRedirect,casevalues, oldClass,newClass){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.upgradePackageClassOfCustomer}',
                bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, caseId, caseRedirect, casevalues, oldClass,newClass,newTeacher,
                function(result, event){
                    refreshCalendar();
                    $('#confirmModalYes').css('pointer-events','auto');
                    $('#confirmModalYes').removeAttr('disabled');
                    $('#confirmModalNo').css('pointer-events','auto');
                    $('#confirmModalNo').removeAttr('disabled');
                    //console.log('result'+result);
                    if(result && result!='error'){                       
                        $('#confirmModal').addClass('slds-hide');
                        redirectToCaseRecord(result);  
                    }else{
                        $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                        $('#toastMsg').html('Request failure!<br/>Please try again....');
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                   
                }
            );
        }
        //@jatin:03-Dec-2019 : for manage upgrade group class bookings 
        function updateGroupClassToSamePackageOfCustomer(bookingId, effectiveDate, newPackageId, oldPackageId,newTeacher,
                                            oldTeacher, timeSlot, caseId, caseRedirect, oldClass,newClass){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.updateGroupClassToSamePackageOfCustomer}',
                bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, caseId, caseRedirect,oldClass,newClass,newTeacher,
                function(result, event){
                     refreshCalendar();
                    $('#confirmModalYes').css('pointer-events','auto');
                    $('#confirmModalYes').removeAttr('disabled');
                    $('#confirmModalNo').css('pointer-events','auto');
                    $('#confirmModalNo').removeAttr('disabled');
                    //console.log('result'+result);
                    if(result && result!='error'){                       
                        $('#confirmModal').addClass('slds-hide');
                        redirectToCaseRecord(result);  
                    }else{
                        $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                        $('#toastMsg').html('Request failure!<br/>Please try again....');
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                   
                }
            );
        }

        //@nishi:12-nov-2020 : for manage change center group class bookings 
        function ChangeCenterGroupToSamePackageOfCustomer(bookingId, effectiveDate, newPackageId, oldPackageId,newTeacher,
                                            oldTeacher, timeSlot, caseId, caseRedirect, oldClass,newClass,oldCenterId,newCenterId){
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.ChangeCenterGroupToSamePackageOfCustomer}',
                bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, caseId, caseRedirect,oldClass,newClass,newTeacher,oldCenterId,newCenterId,
                function(result, event){
                    refreshCalendar();
                    $('#confirmModalYes').css('pointer-events','auto');
                    $('#confirmModalYes').removeAttr('disabled');
                    $('#confirmModalNo').css('pointer-events','auto');
                    $('#confirmModalNo').removeAttr('disabled');
                    //console.log('result'+result);
                    if(result && result!='error'){                       
                        $('#confirmModal').addClass('slds-hide');
                        redirectToCaseRecord(result);  
                    }else{
                        $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
                        $('#toastMsg').html('Request failure!<br/>Please try again....');
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                   
                }
            );
        }

        //@jatin : 29-Nov-2019 : Upgrade Class Subscriptions
        function showUpgradeClassSummary(grade) {
            var bookingId = $('#submitUpgradeClassRequest').attr('data-id');
            var oldPackageId = $('#submitUpgradeClassRequest').attr('data-packageid');
            var newPackageId = $('#selectRequestedClassPackage').val();
            var effectiveDate = $('#effectiveDateClassInput').val();
            var availableTimeSlots = $('#availableTimeClassSlots').val();
            var enrolmentId = $('#submitUpgradeClassRequest').attr('data-enrolment');
            var newClassId = $('#runningClassesSelect').val();
            var oldClassId = $('#submitUpgradeClassRequest').attr('data-classId');
            $('.invoiceTopupGroupClassItem').addClass('slds-hide');
            $('#nextInvoiceItem').addClass('slds-hide');
            $('#upgradeBookingclass').addClass('slds-hide');
            $('#upgradeGroupClassSummaryHeader').html('');
            $('#confirmUpgradeEnrolment').addClass('slds-hide');
            $('#confirmGroupClassEnrolment').addClass('slds-hide');
            var error = false;
            var today = moment();
            if (bookingId && oldPackageId && enrolmentId && newClassId) {
                if (grade == 'upgrade class') {
                    if (newPackageId == "Select an Option") {
                        $('#upgradePackageSelectClassError').html('Please select the package...');
                        error = true;
                    } else {
                        $('#upgradePackageSelectClassError').html('');
                    }

                    if (!effectiveDate) {
                        $('#effectiveDateClassError').html('Select the effective date....');
                        error = true;
                    } else {
                        var effectiveDateMoment = moment();
                        effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                        if (today.diff(effectiveDateMoment) > 0) {
                            $('#effectiveDateClassError').html('Select Future effective date....');
                            error = true;
                        } else {
                            $('#effectiveDateClassError').html('');
                        }
                    }

                    if (availableTimeSlots == 'Select Time Slot') {
                        $('#availableTimeSlotsClassError').html('Select the Time Slot....');
                        error = true;
                    } else {
                        $('#availableTimeSlotsClassError').html('');
                    }

                    if (newClassId == 'Select Class') {
                        $('#runningClassesSelectError').html('Select the New Class....');
                        error = true;
                    } else {
                        $('#runningClassesSelectError').html('');
                    }

                }
                if (!error) {
                    $('#upgradeBookingclass').addClass('slds-hide');
                    $('#gradeClassSubscriptionPopup').addClass('slds-hide');
                    var currentEffectiveDate = $('#UpgradeToIndividualEnrolClassSummary').attr('data-effectiveDate').split('T')[0];
                    getUpgradeGroupClassPackageSummary(effectiveDate, oldPackageId, newPackageId, availableTimeSlots,
                                                     enrolmentId,currentEffectiveDate, grade, oldClassId, newClassId,'','','','');
                }
            }
        }
   
function  getUpgradeGroupClassPackageSummary(newEffectiveDate, oldPackageId, newPackageId,availableTimeSlots,oldavailableTimeSlots, enrolmentId,
                                                currentEffectiveDate,grade,oldClass,newClass,oldTeacher,newTeacher,newcenter,oldCenter){
    /*jatin:24-dec-2019: for upgrade to individual booking manage button */
    $('#ChangeCenterSummary').addClass('slds-hide');
    $('#upgradeBookingclass').addClass('slds-hide');
    $('#upgradeToIndividualTeacher').addClass('slds-hide');
    $('.ChangeCenterDateSummary').addClass('slds-hide');
    $('.EffecitveDateSummary').removeClass('slds-hide');
        var newEffectiveDateObj = moment();
        if(newEffectiveDate){
            newEffectiveDateObj.year(newEffectiveDate.split('/')[2]).month(newEffectiveDate.split('/')[0] - 1).date(newEffectiveDate.split('/')[1]);
        }
        var currentEffectiveDateObj = moment();
        if(currentEffectiveDate ){
            if(grade == 'GroupToChangeCenter' || grade == 'upgrade class'){
                currentEffectiveDateObj=moment(currentEffectiveDate);
                console.log('currentEffectiveDate'+currentEffectiveDate);
            }else{
                currentEffectiveDateObj.year(currentEffectiveDate.split('/')[2]).month(currentEffectiveDate.split('/')[0] - 1).date(currentEffectiveDate.split('/')[1]);
            }
        }
        console.log('currentEffectiveDateObj'+currentEffectiveDateObj);
        console.log('newcenter'+newcenter);
        console.log('oldCenter'+oldCenter);
        console.log('newEffectiveDateObj'+newEffectiveDateObj);
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ClassEditController.getUpgradeGroupClassPackageSummary}',
            oldPackageId, newPackageId, currentEffectiveDateObj.format('YYYY-MM-DD'),newEffectiveDateObj.format('YYYY-MM-DD'),
             availableTimeSlots, oldavailableTimeSlots,enrolmentId, grade,newTeacher,oldTeacher,oldClass,newClass,newcenter,oldCenter,
            function(result, event){
               console.log(result);
                if(grade == 'upgrade class'){
                    // $('#gradeClassSubscriptionPopup').addClass('slds-hide');
                    $('#upgradeGroupClassSummaryHeader').html('Upgrade Class Summary');
                    $('#confirmUpgradeClassEnrolment').html('CONFIRM UPGRADE CLASS');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'auto');
                    $('#confirmUpgradeClassEnrolment').removeAttr('disabled');
                    $('.invoiceTopupGroupClassItem').removeClass('slds-hide');
                    $('#enrolSameClass').addClass('slds-hide');
                    if('invoiceTopup' in result){
                        if(result.invoiceTopup >= 0){
                            $('#invoiceTopUpGroupClassSummary').html('$'+result.invoiceTopup.toFixed(2));
                        }
                    }
                    $('#upgradeBookingclass').removeClass('slds-hide');
                    if('newClassName' in result){
                        $('#newClassNameGroupClassSummary').html(result.newClassName);
                        $('#confirmModalYes').attr('data-newclass', result.newClassName);
                        if('newClassId' in result){
                            $('#updateEnrolmentonGroupClick').attr('data-newclass', result.newClassId);
                        }
                    }
                    if('oldClassName' in result){
                        $('#oldClassNameGroupClassSummary').html(result.oldClassName);
                        $('#confirmModalYes').attr('data-previousClass', result.oldClassName);
                    }
                    
                }/*jatin:24-dec-2019: for upgrade to individual booking then show teacher details div */
                else if(grade == 'GroupToIndividual'){
                    $('#upgradeGroupClassSummaryHeader').html('Upgrade to Individual Package Summary');
                    $('#confirmUpgradeClassEnrolment').html('CONFIRM UPGRADE TO INDIVIDUAL PACKAGE');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'auto');
                    $('#confirmUpgradeClassEnrolment').removeAttr('disabled');
                    $('.invoiceTopupGroupClassItem').removeClass('slds-hide');
                    $('#enrolSameClass').addClass('slds-hide');
                    if('invoiceTopup' in result){
                        if(result.invoiceTopup >= 0){
                            $('#invoiceTopUpGroupClassSummary').html('$'+result.invoiceTopup.toFixed(2));
                        }
                    }
                    $('#upgradeToIndividualTeacher').removeClass('slds-hide');
                    if('newTeacherName' in result){
                        $('#newTeacherNameupgradeToIndividualSummary').html(result.newTeacherName);
                        $('#confirmModalYes').attr('data-newTeacher', result.newTeacherId);
                    }
                    if('oldTeacherName' in result){
                        $('#oldTeacherNameupgradeToIndividualSummary').html(result.oldTeacherName);
                        $('#confirmModalYes').attr('data-previousTeacher', result.oldTeacherId);
                    }
                }/*jatin:4-Jan-2020: for upgrade to group booking then show teacher details div */
                else if(grade == 'GroupToHigherPackage'){
                    $('#upgradeGroupClassSummaryHeader').html('Upgrade to Group Package Summary');
                    $('#confirmUpgradeClassEnrolment').html('CONFIRM UPGRADE TO GROUP PACKAGE');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'auto');
                    $('#confirmUpgradeClassEnrolment').removeAttr('disabled');
                    $('.invoiceTopupGroupClassItem').removeClass('slds-hide');
                    $('#enrolSameClass').addClass('slds-hide');
                    if('invoiceTopup' in result){
                        if(result.invoiceTopup >= 0){
                            $('#invoiceTopUpGroupClassSummary').html('$'+result.invoiceTopup.toFixed(2));
                        }
                    }
                    $('#upgradeToIndividualTeacher').removeClass('slds-hide');
                    if('newTeacherName' in result){
                        $('#newTeacherNameupgradeToIndividualSummary').html(result.newTeacherName);
                        $('#confirmModalYes').attr('data-newTeacher', result.newTeacherId);
                    }
                    if('oldTeacherName' in result){
                        $('#oldTeacherNameupgradeToIndividualSummary').html(result.oldTeacherName);
                        $('#confirmModalYes').attr('data-previousTeacher', result.oldTeacherId);
                    }
                    $('#upgradeBookingclass').removeClass('slds-hide');
                    if('newClassName' in result){
                        $('#newClassNameGroupClassSummary').html(result.newClassName);
                        $('#confirmModalYes').attr('data-newclass', result.newClassId);
                        $('#updateEnrolmentonGroupClick').attr('data-newclass', result.newClassId);
                    }
                    if('oldClassName' in result){
                        $('#oldClassNameGroupClassSummary').html(result.oldClassName);
                        $('#confirmModalYes').attr('data-previousClass', result.oldClassId);
                    }
                }/*jatin:4-Jan-2020: for upgrade to group booking then show teacher details div */
                else if(grade == 'GroupToSameClass' || grade == 'GroupToChangeCenter'){
                    $('#upgradeGroupClassSummaryHeader').html('Change Class Summary');
                    $('#confirmUpgradeClassEnrolment').html('CONFIRM CHANGE CLASS');
                    $('#confirmUpgradeClassEnrolment').css('pointer-events', 'auto');
                    $('#confirmUpgradeClassEnrolment').removeAttr('disabled');
                    $('#upgradeToIndividualTeacher').removeClass('slds-hide');
                    if(grade == 'GroupToChangeCenter'){
                        $('#upgradeGroupClassSummaryHeader').html('Change Centre Summary');
                        $('#confirmUpgradeClassEnrolment').html('CONFIRM CHANGE CENTRE');
                        $('#ChangeCenterSummary').removeClass('slds-hide');
                        $('.ChangeCenterDateSummary').removeClass('slds-hide');
                        $('.EffecitveDateSummary').addClass('slds-hide');
                        if('newCenterName' in result){
                            $('#newCenterNameupgradeToIndividualSummary').html(result.newCenterName);
                            $('#confirmModalYes').attr('data-newcenter', result.newCenterId);
                        }
                        if('oldCenterName' in result){
                            $('#oldCenterNameupgradeToIndividualSummary').html(result.oldCenterName);
                            $('#confirmModalYes').attr('data-previousCenter', result.oldCenterId);
                        }
                        if('effectiveDate' in result){
                            $('#invoiceChangeCenterEffectiveDate').html(result.effectiveDate);
                        }
                    }
                    if('newTeacherName' in result){
                        $('#newTeacherNameupgradeToIndividualSummary').html(result.newTeacherName);
                        $('#confirmModalYes').attr('data-newTeacher', result.newTeacherId);
                    }
                    if('oldTeacherName' in result){
                        $('#oldTeacherNameupgradeToIndividualSummary').html(result.oldTeacherName);
                        $('#confirmModalYes').attr('data-previousTeacher', result.oldTeacherId);
                    }
                    $('#upgradeBookingclass').removeClass('slds-hide');
                    if('newClassName' in result){
                        $('#newClassNameGroupClassSummary').html(result.newClassName);
                        $('#confirmModalYes').attr('data-newclass', result.newClassId);
                        $('#updateEnrolmentonGroupClick').attr('data-newclass', result.newClassId);
                    }
                    if('oldClassName' in result){
                        $('#oldClassNameGroupClassSummary').html(result.oldClassName);
                        $('#confirmModalYes').attr('data-previousClass', result.oldClassId);
                    }
                    $('#enrolSameClass').removeClass('slds-hide');
                    if('studentName' in result){
                        $('#ChangeEnrollmentGroupStudentName').html(result.studentName);
                    } 
                    if('parentName' in result){
                        $('#ChangeEnrollmentGroupParentName').html(result.parentName);
                    } 
                }
                
                //$('#gradeSubscriptionPopup').addClass('slds-hide');
                if('newPackageName' in result){
                    $('#newPackageNameGroupClassSummary').html(result.newPackageName);
                    $('#confirmModalYes').attr('data-newPackageName', result.newPackageName);
                }
                if('oldPackageName' in result){
                    $('#oldPackageNameGroupClassSummary').html(result.oldPackageName);
                    $('#confirmModalYes').attr('data-previousPackage', result.oldPackageName);
                } 
                if(grade == 'GroupToHigherPackage' || grade == 'GroupToIndividual'){
                    if('currentPackageDeposit' in result){
                        if(result.currentPackageDeposit  || result.currentPackageDeposit == 0){
                            $('#currentDepositFileGroupClassSummary').html('$'+result.currentPackageDeposit.toFixed(2));
                            $('#confirmModalYes').attr('data-currentDepositonFile', result.currentPackageDeposit);
                        }
                        
                    }
                    if('newPackageDeposit' in result){
                        if(result.newPackageDeposit){
                            $('#newPackageDepositGroupClassSummmary').html('$'+result.newPackageDeposit.toFixed(2));
                            $('#confirmModalYes').attr('data-newPackageDeposit', result.newPackageDeposit);
                        }
                    }
                    if('invoiceForCurrentMonth' in result){
                        if(result.invoiceForCurrentMonth){
                            $('#invoiceForCurrentMonthGroupClassSummary').html('$'+result.invoiceForCurrentMonth.toFixed(2));
                            $('#confirmModalYes').attr('data-invoiceForCurrentMonth', result.invoiceForCurrentMonth);
                        }
                    }
                    if('invoiceDepositLessonTopup' in result){
                        if(result.invoiceDepositLessonTopup >= 0){
                            $('#invoiceLessonDepositTopupGroupClassSummary').html('$'+result.invoiceDepositLessonTopup.toFixed(2));
                        }else{
                            $('#invoiceLessonDepositTopupGroupClassSummary').html('-$'+Math.abs(result.invoiceDepositLessonTopup).toFixed(2));
                        }
                        
                        $('#confirmModalYes').attr('data-lessonCharge', result.invoiceDepositLessonTopup.toFixed(2));
                    }
                    
                    if('invoiceDepositTopup' in result){
                        if(result.invoiceDepositTopup >= 0){
                            $('#invoiceDepositTopupGroupClassSummary').html('$'+result.invoiceDepositTopup.toFixed(2));
                        }else{
                            $('#invoiceDepositTopupGroupClassSummary').html('-$'+Math.abs(result.invoiceDepositTopup).toFixed(2));
                        }
                        $('#confirmModalYes').attr('data-deposit', result.invoiceDepositTopup.toFixed(2));
                    }
                }
                if('currentDayAndTime' in result){
                    $('#previousLessonDTGroupClassSummary').html(result.currentDayAndTime);
                    $('#confirmModalYes').attr('data-previousLessonDayTime', result.currentDayAndTime);
                }
               
                if('newDayAndTime' in result){
                    $('#newLessonDTGroupClassSummary').html(result.newDayAndTime);
                    $('#confirmModalYes').attr('data-newLessonDayTime', result.newDayAndTime);
                }
                
                if('effectiveDate' in result){
                    $('#invoiceEffectiveGroupClassDate').html(result.effectiveDate);
                }
                if('currentEffectiveDate' in result){
                    $('#invoiceCurrentEffectiveGroupClassDate').html(result.currentEffectiveDate);
                }

                
                $('#upgradeGroupClassSummaryModal').removeClass('slds-hide');
            }
        );
    }

        function removeUpgradeGroupClassValues() {

            $('#effectiveDateClassInput').empty();

            $('#selectRequestedClassPackage').empty();

            $('#availableTimeClassSlots').empty();
            $('#availableTimeClassSlots').append('<option>Select Time Slot</option>');
            $('#availableTimeClassSlots').attr('disabled', true);

            $('#runningClassesSelect').empty();
            $('#runningClassesSelect').append('<option>Select Class</option>');
            $('#runningClassesSelect').attr('disabled', true);

            $('#upgradePackageSelectClassError').html('');
            $('#effectiveDateClassError').html('');
            $('#runningClassesSelectError').html('');
            $('#availableTimeSlotsClassError').html('');
            $('#submitUpgradeClassRequest').css('pointer-events', '');
            $('#submitUpgradeClassRequest').removeAttr('disabled');
            $('#confirmUpgradeClassEnrolment').css('pointer-events', 'auto');
            $('#confirmUpgradeClassEnrolment').removeAttr('disabled');
        }
        // add Edit class tabs values 
        function editClassAppointments(bookingId, appointmentStartDate) {
           //console.log('appointmentStartDate' + appointmentStartDate);
            $('#SelectAllStudent').removeAttr('disabled');
            $('#NoShowClass').removeAttr('disabled');
            $('#completeClass').removeAttr('disabled');
            $('.groupReschdule').addClass('slds-hide');
            $('.deactivateGroup').removeClass('slds-hide');
            $('#ClassHistory').removeClass('slds-hide');
            $('#showGroupClassGradeDetials').removeClass('slds-hide');
            $('#ClassCustomers').removeClass('slds-hide');
            selectedStudentData = {};
            if (bookingId) {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ClassEditController.fetchBookDetailsForScreen}',
                    bookingId,
                    function (result, event) {
                       //console.log('result', result);
                        $('#ClassPackageEditSelect').empty();
                        $('#attendiesTableBody').empty();
                        var packages = result.groupPackages;
                       //console.log('result.groupPackages',result.groupPackages);
                        $('#submitUpgradeClassRequest').attr('data-classId', result.bookObj.Class__r.Id);
                        $('#submitUpgradeClassRequest').attr('data-className', result.bookObj.Class__r.Name);
                        $('#updateEnrolmentonGroupClick').attr('data-classId', result.bookObj.Class__r.Id);
                        $('#updateEnrolmentonGroupClick').attr('data-className', result.bookObj.Class__r.Name);
                        /*var packagesSelect = '<option value="">Select Package</option>';
                        $(packages).each(function(index, value){
                            
                            if(result.bookObj.Package__r.Id === value.id){
                                //console.log('result.bookObj.Package__r.Id --'+result.bookObj.Package__r.Id);
                               ////console.log('value.id --'+value.id);
                                packagesSelect += '<option value="'+value.id+':'+value.duration+':'+result.bookObj.Class__r.Total_Capacity__c+':'+value.price+'">'+value.name+'</option>';
                                //console.log('packagesSelect',packagesSelect);
                           
                            }else{
                                packagesSelect += '<option value="'+value.id+':'+value.duration+':'+value.studentCapacity+':'+value.price+'">'+value.name+'</option>';
                            }
                            
                        });
                        //$('#ClassPackageEditSelect').append(packagesSelect);*/

                        //console.log('result.bookObj.Id'+result.bookObj.Id);
                        $('#ClassDurationEditLabel').html('');
                        $('#ClassCapacityEditInput').val('');
                        $('#ClassPriceEditLabel').html('');
                        $('#ClassMinimumAgeEditLabel').html('');
                        $('#ClassMaximumAgeEditLabel').html('');
                        $('#ClassInstrumentEditLabel').html('');
                        $('#ClassPackageEditSelect').html('');
                        //$('#AvailableCustomersEditLabel').html('');
                        $('#AvailableCapacityEditLabel').html('');
                        $('#ClassTypeEditLabel').html('');
                        $('#StartDateEditLabel').html(''); 
                        
                        //added by nishi: 2-Sep-2020: for manage ossia group lesson details
                        $('#ClassOssiaGradeEditLabel').html('');
                        $('.ossiaGroupClassBookingDetail').addClass('slds-hide');
                        $('.aureusGroupClassBookingDetail').removeClass('slds-hide');
                        
                        if (result.bookObj.Id) {
                          //console.log(result.bookObj.Class__r.Active__c);
                           // added by nishi: 2-Sep-2020: for manage ossia group lesson details in ossia case we show grade other wise we show package realed details 
                           selectedStudentData.isOssia =result.isOssia;
                           $('#DeactivateGroupClass').attr('disabled', !(result.bookObj.Class__r.Active__c));
                            if(result.isOssia){
                                $('.aureusGroupClassBookingDetail').addClass('slds-hide');
                                $('.ossiaGroupClassBookingDetail').removeClass('slds-hide');
                                if(result.bookObj.Class__r.Grade__c != null && result.bookObj.Class__r.Grade__c != undefined){
                                    $('#ClassOssiaGradeEditLabel').html(result.bookObj.Class__r.Grade__c.replace(/;/g, ", "));
                                    $('#ClassDurationEditLabel').html(result.bookObj.Class__r.Duration__c + ' Mins');
                                    $('#showGroupClassGradeDetials').attr('data-classId',result.bookObj.Class__c);
                                    $('#newOssiaClassBookingDetailsHeader').html('Grade Details ' + result.bookObj.Class__r.Name);
                                    selectedStudentData.duration =result.bookObj.Class__r.Duration__c;
                                }
                            }else{
                                selectedStudentData.packageId = result.bookObj.Package__r.Id;
                                $('#ClassPackageEditSelect').html(result.bookObj.Package__r.Name);
                                $('#ClassDurationEditLabel').html(result.bookObj.Package__r.Duration__c + ' Mins');
                                
                                $('#ClassPriceEditLabel').html('$' + result.bookObj.Package__r.Package_Fee__c);
                                selectedStudentData.duration = result.bookObj.Package__r.Duration__c;
                                selectedStudentData.packageName = result.bookObj.Package__r.Name;
                                $('.ossiaGroupClassBookingDetail').addClass('slds-hide');
                                $('.aureusGroupClassBookingDetail').removeClass('slds-hide');
                            }
                            selectedStudentData.selgroupClassId = result.bookObj.Class__c;
                            selectedStudentData.selgroupClassName = result.bookObj.Class__r.Name;
                            // added by nishi: 2-Sep-2020: for manage ossia group lesson details in ossia case we show grade other wise we show package realed details 
                            selectedStudentData.groupClassId = result.bookObj.Id;
                            selectedStudentData.ClassCapacity = result.bookObj.Class__r.Total_Capacity__c;
							 $('#newGroupClassCMP').attr('data-groupclassid',  result.bookObj.Id);
                            $('#newBookingDetailsHeader').html('Class Details ' + result.bookObj.Class__r.Name);
                            $('#LocationNameEditClass').html(result.bookObj.Center__r.Name);
                            $('#TeacherNameEditClass').html(result.bookObj.Teacher_Account__r.Name);

                            // added by jatin: 18-dec-2019: show class type ,age,Instrument
                            $('#ClassTypeEditLabel').html(result.bookObj.Class__r.Class_Type__c);
                            var minAge = result.bookObj.Class__r.Minimum_age__c != undefined ?  (result.bookObj.Class__r.Minimum_age__c == 1 ? result.bookObj.Class__r.Minimum_age__c + ' Year' :result.bookObj.Class__r.Minimum_age__c + ' Years'): '';
                            var maxAge = result.bookObj.Class__r.Maximum_age__c != undefined ? (result.bookObj.Class__r.Maximum_age__c == 1 ? result.bookObj.Class__r.Maximum_age__c + ' Year' :result.bookObj.Class__r.Maximum_age__c + ' Years') : '';
                            $('#ClassMinimumAgeEditLabel').html(minAge);
                            $('#ClassMaximumAgeEditLabel').html(maxAge);
                            $('#ClassInstrumentEditLabel').html(result.bookObj.Class__r.Instrument__c);
                            $('#ClassCapacityEditInput').html(result.bookObj.Class__r.Total_Capacity__c);
                            //$('#AvailableCustomersEditLabel').html(result.bookObj.Class__r.of_Units__c);
                            $('#AvailableCapacityEditLabel').html(result.bookObj.Class__r.Available_Capacity__c);
                            $('#StartDateEditLabel').html(moment(result.bookObj.Class__r.Class_Start_Date__c).format("D MMM YYYY"));
                            $('#UpgradeToIndividualEnrolClassSummary').attr('data-classInstrument', result.bookObj.Class__r.Instrument__c);
                            $('#UpgradeToIndividualEnrolClassSummary').attr('data-effectiveDate', appointmentStartDate);
                            
                            selectedStudentData.teacherId = result.bookObj.Teacher_Account__r.Id;
                            selectedStudentData.teacherName = result.bookObj.Teacher_Account__r.Name;
                            selectedStudentData.centerId = result.bookObj.Center__r.Id;
                            selectedStudentData.centerName = result.bookObj.Center__r.Name;
                            $('#MakeupCustomer').attr('data-centerId', result.bookObj.Center__r.Id);
                            $('#MakeupCustomer').attr('data-teacherId', result.bookObj.Teacher_Account__r.Id);
                            $('#MakeupCustomer').attr('data-bookingDate', appointmentStartDate);
                            selectedStudentData.date = appointmentStartDate;
                            
                              
                            $('#ClassTimeEditLabel').html(moment(result.bookObj.Booking_Date__c + result.bookObj.Start_Time__c).utc().format('ddd, MMM DD YYYY LT'));
                        }

                        if (result.bookingList && result.bookingList.length > 0) {
                            var attendies = '';
                            $(result.bookingList).each(function (index, value) {
                                attendies += '<tr class="slds-hint-parent" data-rowId="' + value.bookingId + '">';
                                //@jatin:1Jan-2020: for add placeholder bookings
                                if(value.bookingType == 'Busy'){
                                    attendies += '<th scope="row"><div class="slds-truncate" title="' + value.bookingName + '"><a onclick="classPlaceholderBookingShow(\'' + value.bookingId + '\',\'' + value.start + '\'); return false;">' + value.bookingName + '</a></div></th>';
                                }else{
                                    attendies += '<th scope="row"><div class="slds-truncate" title="' + value.bookingName + '"><a onclick="classBookingShow(\'' + value.bookingId + '\',\'' + value.start + '\'); return false;">' + value.bookingName + '</a></div></th>';
                                }
                                if(value.studentName == undefined){
                                    attendies +='<td role="gridcell"><div class="slds-truncate" title=""></div></td>';
                                }else{
                                    attendies +='<td role="gridcell"><div class="slds-truncate" title="' + value.studentName + '">' + value.studentName + '</div></td>';
                                }
                                if(value.parentName == undefined){
                                    attendies +='<td role="gridcell"><div class="slds-truncate" title=""></div></td>';
                                }else{
                                    attendies +='<td role="gridcell"><div class="slds-truncate" title="' + value.parentName + '">' + value.parentName + '</div></td>';
                                }
                                var statusBgColor= (value.status =='No-show' ? '#e55454' : (value.status =='Completed' ? 'rgb(97, 213, 144)' : (value.status =='Scheduled' || value.status =='Pending' ? 'rgb(171, 184, 184)' : '')));
                                attendies +='<td role="gridcell"><div class="slds-truncate" style="background:'+ statusBgColor +';font-weight: bold;" title="' + value.status + '">' + value.status + '</div></td>';
                                attendies +='<td role="gridcell"><div class="slds-truncate" title="' + value.bookingType + '">' + value.bookingType + '</div></td></tr>';
                            });
                        } else {
                            $('#NoShowClass').attr('disabled', true);
                            $('#completeClass').attr('disabled', true);
                            $('#SelectAllStudent').attr('disabled', true);
                        }
                        if (result.bookingHistoryList.length > 0) {
                            $('#HistoryCount').html(result.bookingHistoryList.length);
                            $('#bookingClassHistory').html('');
                            for (var i = 0; i < result.bookingHistoryList.length; i++) {

                                var description = result.bookingHistoryList[i].Description;
                                var historyDateTime = result.bookingHistoryList[i].DateOfHistory;
                                var historyBy = result.bookingHistoryList[i].HistoryBy;
                                if (historyBy) {
                                    $('#bookingClassHistory').append('<div class="eventHistory"><h1><span class="slds-page-header__title slds-truncate headerTitle"> ' + historyDateTime + '<span class="historyBy"> - by ' + historyBy + '</span></span></h1> ' + description + ' </div>');
                                } else {
                                    $('#bookingClassHistory').append('<div class="eventHistory"><h1><span class="slds-page-header__title slds-truncate headerTitle"> ' + historyDateTime + ' </span></h1> ' + description + ' </div>');
                                }
                            }
                        }

                        $('#attendiesTableBody').append(attendies);
                        $('#newGroupClassCMP').removeClass('slds-hide');

                        $('#DetailsTab').removeClass('slds-hide');
                        $('#ClassDetails').addClass('slds-active');
                        $('#CustomersTab').addClass('slds-hide');
                        $('#ClassCustomers').removeClass('slds-active');
                        $('#HistoryTab').addClass('slds-hide');
                        $('#ClassHistory').removeClass('slds-active');
                    }
                );
            }
        }
        $('#showGroupClassGradeDetials').click(function(){
            showossiaGroupClassGradeDetials();
        });
        function backToUpgradeChangesPopup(){
            $('#upgradeGroupClassSummaryModal').addClass('slds-hide');
            $('#enrolmentUpdateGroupPopup').removeClass('slds-hide'); 
        }
        /*
            This method will fill the package price, and student capacity etc 
        */
        function groupPackageSelectEdit() {
            $('#ClassPackageEditSelectError').addClass('slds-hide');

            $('#ClassDurationEditLabel').html('');
            $('#ClassCapacityEditInput').val('');
            $('#ClassPriceEditLabel').html('');

            var packageVal = $('#ClassPackageEditSelect').val();
            if (packageVal) {
                $('#ClassDurationEditLabel').html(packageVal.split(':')[1] + ' Mins');
                $('#ClassCapacityEditInput').val(packageVal.split(':')[2]);
                $('#ClassPriceEditLabel').html('$' + packageVal.split(':')[3]);
                checkCapacity();
            }
        }

        
        function clearClassCustomerForm() {
            $('#studentSelectContainerInClass').removeClass('slds-is-open');
            $('#studentSelectContainerInClass').attr('aria-expanded', 'false');
            $('#studentSearchListClassModal').empty();
            $('#parentInputClass').removeAttr('disabled');
            $('#phoneInputClass').removeAttr('disabled');
            $('#emailInputClass').removeAttr('disabled');
            $('#parentInputClass').val('');
            $('#phoneInputClass').val('');
            $('#emailInputClass').val('');
            $('#studentInputInClass').val('');
        }



        

        function selectAllStudent() {
            if ($('#SelectAllStudent').prop('checked')) {
                $("#classStudentSection input[type='checkbox']").each(function (index, value) {
                    $(this).prop('checked', true);
                });
            } else {
                $("#classStudentSection input[type='checkbox']").each(function (index, value) {
                    $(this).prop('checked', false);
                });
            }
        }

        function inputCheckGotChange(val) {
            //console.log('@@@val', val);
            if (!val.prop('checked')) {
                $('#SelectAllStudent').prop('checked', false);
            }
        }

        function classBookingShow(bookingId, startDate) {
           //Need to stay opened the class window on the click of the Booking :jatin:31-Dec-2019
            initEvents(bookingId, startDate);
        }
         //@jatin:1Jan-2020: for show placeholder bookings
        function classPlaceholderBookingShow(bookingId, startDate) {
            $('#busyBookingFooter').addClass('slds-hide');
            getBusyBookingDetails(bookingId,startDate); 
        }
        function markCompleteOrNoShow(action) {

            var bookingsId = '';
            $("#attendiesTableBody input[type='checkbox']").each(function (index, value) {
                if ($(this).prop('checked')) {
                    bookingsId += $(this).attr('id') + ';';
                }
            });


            if (bookingsId) {
                //console.log('@@bookingsId...', bookingsId);
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ClassEditController.markCompleteOrNoShow}',
                    bookingsId, action,
                    function (result, event) {
                        if (result) {
                            $('#newGroupClassCMP').addClass('slds-hide');
                            $('#toastMsg').html('Attendence Mark Successfully...');
                            $('.toastclass').removeClass('slds-theme_error');
                            $('.toastclass').addClass('slds-theme_success');
                            toastLaunch();
                            $('#classStudentSection').prop('checked', false);
                        } else {
                            $('#newGroupClassCMP').addClass('slds-hide');
                            $('#toastMsg').html('Some Error Occurred...');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                            $('#classStudentSection').prop('checked', false);
                        }
                    }
                );
            }
        }
        //9-nov-2019 : @@jatin  :for Change Enrollement Effective dates
        function createNewEffectiveGroupDates(){
            var effectiveDate = $('#selectEffectiveDateEnrolGroupUpdate').val();
            var teacherId = $('#selectTeacherEnrolGroupUpdate').val();
            var packageId = $('#selectPackageEnrolGroupUpdate').val();
            var centerId = $('#selectTeacherEnrolGroupUpdate').attr('data-center');
            var selectDate = '<option value="">Select Effective Date</option>';
            var grade = $('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
            if(grade !='GroupToChangeCenter'){
            $('#selectNewEffectiveDateEnroGroupUpdate').empty();
                if(effectiveDate && teacherId && effectiveDate != 'Select Effective Date' && teacherId != 'Select Teacher' ){
                    $('#selectNewEffectiveDateEnrolGroupUpdate').removeAttr('disabled'); 
                    $('#selectNewEffectiveDateEnrolGroupUpdate').empty();
                    if(grade =='GroupToIndividual'){
                        if(teacherId != 'Select Teacher' && centerId){
                            getNewEffectiveDate(effectiveDate,centerId,teacherId,grade); 
                        }
                    }else{
                        if(packageId && packageId != 'Select Package'){
                        //console.log('packageId',packageId);
                        //console.log('teacherId',teacherId);
                            $('#selectNewEffectiveDateEnrolGroupUpdate').removeAttr('disabled'); 
                            var geteffectiveDay = effectiveDate.split('/')[1];
                            var newEffectiveDayList = [];
                            var startedDate = new moment();
                            $('#selectNewEffectiveDateEnrolGroupUpdate').empty();
                            var weekdays = [];
                            if(teacherId != 'Select Teacher' && centerId){
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.ClassEditController.getNewEffectiveGroupDateSlots}',
                                    packageId, teacherId,
                                    function(result, event){
                                    //console.log('result',result);
                                        for (i = 0; i < result.length; i++) {
                                            weekdays.push(result[i]);
                                        }
                                        var newEffectiveDayList = [];
                                        if(weekdays.length > 0 ){
                                            newEffectiveDayList = getNewEffectiveDaysWeekdays(effectiveDate,weekdays);
                                        }
                                    //console.log('newEffectiveDayList'+newEffectiveDayList);
                                        $(newEffectiveDayList).each(function(inex, value){
                                            selectDate += '<option value="'+value.value+'">'+value.label+'</option>';
                                        });
                                        //console.log('selectDate'+selectDate);
                                        $('#selectNewEffectiveDateEnrolGroupUpdate').append(selectDate);
                                    }
                                );
                            }
                        }else{
                            $('#selectNewEffectiveDateEnrolGroupUpdate').attr('disabled', 'true'); 
                            $('#selectNewEffectiveDateEnrolGroupUpdate').append(selectDate);
                        }
                    }
                }else{
                    $('#selectNewEffectiveDateEnrolGroupUpdate').attr('disabled', 'true'); 
                    $('#selectNewEffectiveDateEnrolGroupUpdate').append(selectDate);
                }
            }
        }

        //@jatin : 12-dec-2019 : Upgrade Class time slotes
        function availGroupClassTimeSlots(grade) {
            var effectiveDate, selectedPackage, bookingId, centerId, teacherId, enrolmentId, enrolweek, weekDayError, newClassId;
            var dtObj = moment();
            weekDayError = false;
            if (grade == 'class upgrade') {
                ////console.log('Clas Upgrade..');
                selectedPackage = $('#selectRequestedClassPackage').val();
                enrolweek = $('#submitUpgradeClassRequest').attr('data-enrolday');
                bookingId = $('#submitUpgradeClassRequest').attr('data-id');
                enrolmentId = $('#submitUpgradeClassRequest').attr('data-enrolment');
                effectiveDate = $('#effectiveDateClassInput').val();
                centerId = $('#submitUpgradeClassRequest').attr('data-centerid');
                teacherId = $('#submitUpgradeClassRequest').attr('data-teacherid');
                newClassId = $('#runningClassesSelect').val();
                if (effectiveDate && effectiveDate != 'Select Effective Date') {
                    dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                }
                $('#availableTimeClassSlots').attr('disabled', 'true');
                $('#availableTimeClassSlots').empty();
                $('#availableTimeClassSlots').append('<option>Select Time Slot</option>');

            }
            if ((effectiveDate && effectiveDate != 'Select Effective Date') &&
                ((selectedPackage != 'Select an Option' && selectedPackage) && selectedPackage != 'Downgrade Subscription' && selectedPackage != 'Select Package')
                && (!centerId && centerId == 'Select Centre') && (teacherId && teacherId != 'Select Teacher') && enrolmentId) {
                if (dtObj) {
                    if (!weekDayError) {
                        if (grade == 'class upgrade') {
                            if (newClassId && newClassId != 'Select Class') {
                               //console.log('@@if newClassId' + newClassId);
                                getGroupLessonTimeSlotsAccordingly(grade, dtObj, newClassId);
                            }
                        }
                    }
                }
            }
        }
        function availTimeGroupSlots(){
            var effectiveDate = $('#selectNewEffectiveDateEnrolGroupUpdate').val();
            var teacherId = $('#selectTeacherEnrolGroupUpdate').val();
            var selectedPackage = $('#selectPackageEnrolGroupUpdate').val();
            var centerId = $('#selectTeacherEnrolGroupUpdate').attr('data-center');
            var grade = $('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
            var weekDayError = false;
            var dtObj = moment();
            if(grade =='GroupToIndividual'){
                availTimeSlots(grade);
            }else{
                var grade =$('#updateEnrolmentonGroupClick').attr('data-groupUpgrade');
                if(grade == 'GroupToChangeCenter'){
                    centerId = $('#selectCenterEnrolGroupUpdate').val();
                }
                $('#availableTimeSlotsUpdateEnrolmentGroup').attr('disabled', 'true');
                $('#availableTimeSlotsUpdateEnrolmentGroup').empty();
                $('#availableTimeSlotsUpdateEnrolmentGroup').append('<option>Select Time Slot</option>');
                if(effectiveDate && effectiveDate != 'Select Effective Date'){
                    dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                }
                if((!centerId && centerId == 'Select Centre') && (!effectiveDate && effectiveDate == 'Select Effective Date') || (selectedPackage == 'Select Package' || !selectedPackage)  || teacherId == 'Select Teacher'){
                    $('#availableTimeSlotsUpdateEnrolmentGroup').attr('disabled', 'true');
                }
                if((effectiveDate && effectiveDate != 'Select Effective Date') && 
                     ((selectedPackage != 'Select Package' && selectedPackage) 
                    && centerId && (teacherId && teacherId != 'Select Teacher'))){
                    if(dtObj){
                        if(!weekDayError){
                            getTimeSlotsGroupClassAccordingly(grade,centerId, teacherId, selectedPackage, dtObj);
                        }else{
                            $('#availableTimeSlotsUpdateEnrolment').attr('disabled', 'true');
                            $('#availableTimeSlotsDowngrade').attr('disabled', 'true');
                            $('#availableTimeSlots').attr('disabled', 'true');
                            $('#availableTimeSlotsUpgradeToIndividualEnrol').attr('disabled', 'true');
                            
                        }
                    }
                }
            }
        }
        // 7-jan: show tooltip on package picklist 
        function changePackageGroup(){
            $("#selectPackageEnrolGroupUpdate").attr('title',  $("#selectPackageEnrolGroupUpdate option:selected").text());
        }
        function getTimeSlotsGroupClassAccordingly(grade,centerId, teacherId, selectedPackage,  dtObj){
            console.log('grade',grade);
            console.log('centerId',centerId);
            console.log('teacherId',teacherId);
            console.log('selectedPackage',selectedPackage);
            console.log('dtObj',dtObj);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.getTimeSlotsGroupClassAccordingly}',
                centerId, teacherId, selectedPackage, dtObj.format('YYYY-MM-DD'), 
                function(result, event){
                  console.log('result',result);
                    var availSlots = '';
                    $(result).each(function(index, value){
                        availSlots += '<option value="'+value+'">'+value.split('-')[1]+'</option>';   
                    });
                    if(grade == 'GroupToChangeCenter' || grade == 'GroupToSameClass'  || grade == 'GroupToHigherPackage'){
                        $('#availableTimeSlotsUpdateEnrolmentGroup').append(availSlots);
                        $('#availableTimeSlotsUpdateEnrolmentGroup').removeAttr('disabled');
                    }
                }
            );
        }
         
        function rescheduleThisGroupLessonOnly(){
            bookingReschedule.isRecurrence = 'false';
            rescheduleGroupLesson();
        }
        function rescheduleFutureGroupLessonAlso(){
            bookingReschedule.isRecurrence = 'true';
            rescheduleGroupLesson();
        }
        function rescheduleGroupLesson(){
            $('.groupReschdule').removeClass('slds-hide');
            $('.deactivateGroup').addClass('slds-hide');
            $('#newBookingDetailsHeader').html('');
            $('#confirmModal').addClass('slds-hide');
            $('#DetailsTab').removeClass('slds-hide');
            $('#ClassDetails').addClass('slds-active');
            $('#ClassHistory').addClass('slds-hide');
            $('#ClassCustomers').addClass('slds-hide');
            $('#CustomersTab').addClass('slds-hide');
            $('#HistoryTab').addClass('slds-hide');
            $('#ClassDurationEditLabel').html('');
            $('#ClassCapacityEditInput').val('');
            $('#ClassPriceEditLabel').html('');
            $('#ClassMinimumAgeEditLabel').html('');
            $('#ClassMaximumAgeEditLabel').html('');
            $('#ClassInstrumentEditLabel').html('');
            $('#ClassPackageEditSelect').html('');
            $('#AvailableCapacityEditLabel').html('');
            $('#ClassTypeEditLabel').html('');
            $('#StartDateEditLabel').html(''); 
            $('#ClassOssiaGradeEditLabel').html('');
            $('.ossiaGroupClassBookingDetail').addClass('slds-hide');
            $('.aureusGroupClassBookingDetail').removeClass('slds-hide');
            $('#showGroupClassGradeDetials').addClass('slds-hide');
           //console.log('bookingReschedule'+bookingReschedule);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.ClassEditController.showRescheduledGroupClassBookings}',
                bookingReschedule, 
                function(result, event){
                   //console.log(result);
                    if (result.bookObj.Id) {
                        $('#newGroupClassCMP').removeClass('slds-hide');
                       //console.log(result.bookObj);
                           // added by nishi: 2-Sep-2020: for manage ossia group lesson details in ossia case we show grade other wise we show package realed details 
                            if(result.isOssia){
                                $('.aureusGroupClassBookingDetail').addClass('slds-hide');
                                $('.ossiaGroupClassBookingDetail').removeClass('slds-hide');
                                if(result.bookObj.Class__r.Grade__c != null && result.bookObj.Class__r.Grade__c != undefined){
                                    $('#ClassOssiaGradeEditLabel').html(result.bookObj.Class__r.Grade__c.replace(/;/g, ", "));
                                    $('#ClassDurationEditLabel').html(result.bookObj.Class__r.Duration__c + ' Mins');
                                 }
                            }else{
                                $('#ClassPackageEditSelect').html(result.bookObj.Package__r.Name);
                                $('#ClassDurationEditLabel').html(result.bookObj.Package__r.Duration__c + ' Mins');
                                $('#ClassPriceEditLabel').html('$' + result.bookObj.Package__r.Package_Fee__c);
                                $('.ossiaGroupClassBookingDetail').addClass('slds-hide');
                                $('.aureusGroupClassBookingDetail').removeClass('slds-hide');
                            }
                          
                            // added by nishi: 2-Sep-2020: for manage ossia group lesson details in ossia case we show grade other wise we show package realed details 
                            $('#newBookingDetailsHeader').html('Rescheduled Class Appointment');
                            $('#LocationNameEditClass').html(result.bookObj.Center__r.Name);
                            $('#TeacherNameEditClass').html(result.staffMember);

                            // added by jatin: 18-dec-2019: show class type ,age,Instrument
                            $('#ClassTypeEditLabel').html(result.bookObj.Class__r.Class_Type__c);
                            var minAge = result.bookObj.Class__r.Minimum_age__c != undefined ?  (result.bookObj.Class__r.Minimum_age__c == 1 ? result.bookObj.Class__r.Minimum_age__c + ' Year' :result.bookObj.Class__r.Minimum_age__c + ' Years'): '';
                            var maxAge = result.bookObj.Class__r.Maximum_age__c != undefined ? (result.bookObj.Class__r.Maximum_age__c == 1 ? result.bookObj.Class__r.Maximum_age__c + ' Year' :result.bookObj.Class__r.Maximum_age__c + ' Years') : '';
                            $('#ClassMinimumAgeEditLabel').html(minAge);
                            $('#ClassMaximumAgeEditLabel').html(maxAge);
                            $('#ClassInstrumentEditLabel').html(result.bookObj.Class__r.Instrument__c);
                            $('#ClassCapacityEditInput').html(result.bookObj.Class__r.Total_Capacity__c);
                            //$('#AvailableCustomersEditLabel').html(result.bookObj.Class__r.of_Units__c);
                            $('#AvailableCapacityEditLabel').html(result.bookObj.Class__r.Available_Capacity__c);
                            $('#StartDateEditLabel').html(moment(result.bookObj.Class__r.Class_Start_Date__c).format("D MMM YYYY"));
                            //$('#ClassTimeEditLabel').html(moment(result.bookObj.Booking_Date__c + result.bookObj.Start_Time__c).utc().format('ddd, MMM DD YYYY LT'));
                            var dateTime = result.dateAndTime;
                            var res;
                            if(dateTime){
                                res =  dateTime.split("T"); 
                                $('#ClassTimeEditLabel').text(convertDateToMoment(res[0]) +' '+ convertTimeToMoment(res[1].split(':')[0], res[1].split(':')[1]));
                            }
                           //console.log('result.bookObj.isDayChange'+result.isDayChange);
                            $('#ReschedulingGroupChanges').attr({'data-isDayChange':result.isDayChange});
                    }
                }
            );
        }
        function commitgrouplesson(){
            bookingReschedule.scheduleType = 'commit';
           //console.log('commitgrouplesson bookingReschedule',bookingReschedule);
            if((bookingReschedule.Type == 'Group Class' || bookingReschedule.Type == 'Busy') && bookingReschedule.isRecurrence == 'false' && bookingReschedule.Individual == 'true'){
                updateGroupClassBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
            }else if((bookingReschedule.Type == 'Group Class' || bookingReschedule.Type == 'Busy') && bookingReschedule.Individual == 'false' && bookingReschedule.isRecurrence == 'false'){
                if(bookingReschedule.Type == 'Group Class'){
                    updateGroupClassBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'true', 'false');
                }else{
                    updateGroupClassBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                }
            }else if((bookingReschedule.Type == 'Group Class' || bookingReschedule.Type == 'Busy') &&  bookingReschedule.isRecurrence == 'true'){
                    updateGroupClassBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'true');
            }else if(bookingReschedule.Type != 'Group Class'){
                updateGroupClassBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
            }
            
        }
        function updateGroupClassBooking(id, start, end, teacherId, isplaceholder, isFuture){
           //console.log('updateGroupClassBooking id',id);
           //console.log('updateGroupClassBooking start',start);
           //console.log('updateGroupClassBooking end',end);
           //console.log('updateGroupClassBooking teacherId',teacherId);
           //console.log('updateGroupClassBooking isplaceholder',isplaceholder);
           //console.log('updateGroupClassBooking isFuture',isFuture);
            if(id && start && bookingReschedule.Type){
                // if(filter.resource && filter.resource != 'Select Resource'){
                //     $('#confirmModalNo').attr({'data-id': id, 'start': start, 'end': end,'isResourceId':'true', 'teacherId': teacherId, 'isplaceholder': isplaceholder, 'isFuture': isFuture, 'data-origin': 'update'});
                //     $('#confirmModalNo').trigger('click');
                // }else{
                    if(bookingReschedule.Type != 'Busy' ){
                        if(isFuture =='true'){
                            var isDayChange = $('#ReschedulingGroupChanges').attr('data-isDayChange');
                            if(isDayChange == 'true'){
                                $('#newGroupClassCMP').addClass('slds-hide');
                                $('#confirmBody').html('Do you want Rescheduled all group class appointments?<br/> All Make-up bookings and Ad-hoc have been canceled and makeup credit will be added back to the parent record.');
                                $('#confirmHeader').html('Rescheduled Class Appointment');
                                $('#confirmModalYes').attr({'data-id': id, 'start': start, 'end': end,'isResourceId':'false', 'teacherId': teacherId, 'isplaceholder': isplaceholder, 'isFuture': isFuture, 'data-origin': 'updategroupClass'});
                                $('#confirmModalYes').removeClass('slds-hide');
                                $('#confirmModalNo').removeAttr('data-origin');
                                $('.confirmModal').removeClass('slds-hide');
                            }else{
                                $('#confirmModalNo').attr({'data-id': id, 'start': start, 'end': end,'isResourceId':'false', 'teacherId': teacherId, 'isplaceholder': isplaceholder, 'isFuture': isFuture, 'data-origin': 'updategroupClass'});
                                $('#confirmModalNo').trigger('click');
                            }
                        }else{
                            $('#confirmModalNo').attr({'data-id': id, 'start': start, 'end': end,'isResourceId':'false', 'teacherId': teacherId, 'isplaceholder': isplaceholder, 'isFuture': isFuture, 'data-origin': 'updategroupClass'});
                            $('#confirmModalNo').trigger('click');
                        }
                    }else{
                        $('#statusOnPage').hide();
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.ClassEditController.updateGroupClassBooking}',
                            id, start, end, teacherId, isplaceholder, isFuture, //'false', caseId, 'false',
                            function(result, event){
                                var msg = '';
                                if (event.status) {
                                    $('#newGroupClassCMP').addClass('slds-hide');
                                    isReschedule = false;
                                    $('#confirmModalNo').html('No');
                                    $('#confirmHeader').parent().removeClass('slds-text-align_left');
                                    $('#confirmBody').removeClass('slds-text-align_center');
                                    $('#confirmModalYes').removeClass('slds-hide');
                                    $("#rescheduleClose").trigger("click");
                                    
                                    bookingReschedule.Id = '';
                                    bookingReschedule.Type = '';
                                    bookingReschedule.resource = '';
                                    bookingReschedule.date = '';
                                    bookingReschedule.Individual = '';
                                    bookingReschedule.isRecurrence = '';
                                    bookingReschedule.scheduleType = '';
                                }
                                refreshCalendar();
                            },
                            {buffer: false, escape: true}
                        );
                    }
               // }
            }
        }
        function updategroupClass( bookingId, start, end, teacherId, isplaceholder, isFuture /*,redirectCase, caseId, isResourceId*/){
            $('.confirmModal').addClass('slds-hide');
            if(bookingId && start){
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ClassEditController.updateGroupClassBooking}',
                    bookingId, start, end, teacherId, isplaceholder, isFuture, //redirectCase, caseId, isResourceId,
                    function(result, event){
                   //console.log('result',result);
                        var msg = '';
                        if (event.status) {
                            isReschedule = false;
                            $("#rescheduleClose").trigger("click");
                            if(bookingReschedule.scheduleType == 'commit'){
                                if(result.caseId){
                                    redirectToCaseRecord(result.caseId); 
                                }
                            }
                            bookingReschedule.Id = '';
                            bookingReschedule.Type = '';
                            bookingReschedule.resource = '';
                            bookingReschedule.date = '';
                            bookingReschedule.Individual = '';
                            bookingReschedule.isRecurrence = '';
                            bookingReschedule.scheduleType = '';
                            
                            $('#toastMsg').html('Appointment Reschedule successfully');
                            toastLaunch();
                            refreshCalendar();
                        }
                    },
                    {buffer: false, escape: true}
                );
            }
        }
    </script>

    </html>
</apex:component>