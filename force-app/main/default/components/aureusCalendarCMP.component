<apex:component controller="AureusCalendarController" allowDML="true">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <style>
            
            .slds-button-group-width{
            width: 20% !important;
            } 
            .classModalForm{
            margin-left: 9px !important;
            width: 240px !important;
            }
            
            a[name="skiplink"] { 
            display:none;
            }
            .dv_load{
            top: 45%;
            margin-left: 40%;
            padding: 15px;
            z-index: 20000;
            position: fixed;
            width: 250px;
            background-color: #ccd8e7;
            border: 5px solid #afc3e0;
            color: #394057;
            }
            .selectBox{
            width: 100%;
            }
            .pointerForClick{
            cursor:pointer;
            }
            
            .button-shadow{
            box-shadow: 2px 2px 5px #888888;
            }
            .fc-state-default, .fc-state-hover{
            padding-left: 1rem !important;
            padding-right: 1rem !important;
            text-align: center !important;
            vertical-align: middle !important;
            border: 1px solid rgb(221, 219, 218) !important;
            transition: border .15s linear !important;
            background-color: rgba(255, 255, 255, 1.0) !important;
            border-color: rgb(177, 166, 166) !important;
            color: rgb(0, 0, 0) !important;
            background-image: none !important;
            text-transform: uppercase !important;
            }
            .fc-widget-header table thead tr{
            background: #F7F7F7;
            font-weight:800;
            }
            .fc-time, .fc-axis {
            text-transform: uppercase !important;
            font-size: 12px;
            font-weight: 800;
            background: whitesmoke;
            }
            .fc-event-container .fc-time , .fc-event-container .fc-title{
            font-size: 12px;
            font-weight: 600;
            background: transparent;
            }
            .fc-title{
            font-size: 12px !important;
            }
            
            .fc-toolbar{
            padding: 5px 1rem !important;
            margin: 0 !important;
            display: flex;      
            flex-wrap: wrap;        
            width: 100%;        
            justify-content: space-between;     
            align-items: center;        
            background:#e9e9e9;     
            }       
            div#statusOnPage {      
            left: 0;        
            top: 0;     
            }  
            .fc-scroller {
            height: auto !important;
            overflow: hidden !important;
            }     
            .fc-toolbar .fc-right {     
            order: 1;       
            }       
            .fc-toolbar .fc-clear {     
            display: none;      
            }       
            th.fc-resource-cell {       
            padding: 1px;      
            }       
            
            .fc-resource-cell:hover, .fc-day-header:hover { 
            color: #0000FF;
            cursor: pointer;
            }
            
            .fifthClass{
            color: black;
            background: repeating-linear-gradient(
            45deg,
            transparent,
            transparent 10px,
            #ccc 10px,
            #ccc 20px
            ),
            linear-gradient(
            to bottom,
            #fff,
            #999
            )
            }
            /*Start: 30-Jul-20202:added by nishi : for show online class booking color different  */
            .TrialClass {//done
                color: black;
                background :repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #f5e08cf7 10px, #f5e08cf7 20px ), linear-gradient( to bottom, #f7ecc2, #f7ecc2 );
             }
            
             .Make_upClass { /done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #5d6d7d 10px, #5d6d7d 20px ), linear-gradient( to bottom, #9bb1ca, #9bb1ca );
             }
             .PianoClass { //done
                color: black;
                background :repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #54c9b1 10px, #54c9b1 20px ), linear-gradient( to bottom, #bbd4cf, #92d4c7 );
            }
             .ViolinClass { //done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #61d590 10px, #61d590 20px ), linear-gradient( to bottom, #9ed6b5, #9ed6b5 );
            }
             .GuitarClass { //done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #59a5d8 10px, #59a5d8 20px ), linear-gradient( to bottom, #a8c6db, #a8c6dbf7 );
             }
             .VocalClass { //done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #ea985a 10px, #ea985a 20px ), linear-gradient( to bottom, #ddb395, #ddb395 );
             }
             .UkuleleClass { //done
                color: black;
                background : repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #59a5d8 10px, #59a5d8 20px ), linear-gradient( to bottom, #acc4d4, #c8d8e3 );
             }
             .DrumClass { //done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #15fbff 10px, #15fbff 20px ), linear-gradient( to bottom, #76d3d4, #a0d3d4 );
             }
             .CelloClass {//done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #1ebf00 10px, #1ebf00 20px ), linear-gradient( to bottom, #8de57c, #8de57c );
               }
             .FluteClass {//done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #bca1fd 10px, #bca1fd 20px ), linear-gradient( to bottom, #9c8ac6, #a29bb3 );
             }
             .AuralClass { //done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #bca1fd 10px, #bca1fd 20px ), linear-gradient( to bottom, #a49bbc, #a49bbc );
             }
             .TheoryClass {//done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #bca1fd 10px, #bca1fd 20px ), linear-gradient( to bottom, #c2bbd2, #c2bbd2 );
             }
             .Kids_ClassClass {//done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #ff3ff5 10px, #ff3ff5 20px ), linear-gradient( to bottom, #dd98d9, #dd98d9 );
             }
             .Music_ExplorationClass { // done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #ff3ff5 10px, #ff3ff5 20px ), linear-gradient( to bottom, #e788e2, #e788e2 );
             }
             .ClarinetClass {//done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #a642c7 10px, #a642c7 20px ), linear-gradient( to bottom, #c79dd4, #caa3d6 );
             }
             .Ad_hocClass { //done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #bca1fd 10px, #bca1fd 20px ), linear-gradient( to bottom, #b5a4dd, #9a80d6 );
             }
             .RegularCancelClass { //done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #DF4D7E 10px, #DF4D7E 20px ), linear-gradient( to bottom, #df7eaf, #df7eaf );
             }
             .TrialBlockedClass {//done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #071FA6 10px, #071FA6 20px ), linear-gradient( to bottom, #6170c8, #6170c8 );
             }
             /* .StudioClass {//done
                color: black;
                background: repeating-linear-gradient( 45deg, #e5a51600, #eb212100 10px, #5d6d7d 10px, #5d6d7d 20px ), linear-gradient( to bottom, #8ba9c8, #8ba9c8 );
             } */
            /*end: 30-Jul-20202:added by nishi : for show online class booking color different  */
            th.fc-day-header {      
            padding: 1px;  /*10px */    
            }       
            .fc-time-grid .fc-slats td {        
            height: 0.9rem;                   
            }
            
            .fc-widget-content{
            height: 1.3rem !important;
            }
            .fc-slats td.fc-widget-content:nth-child(2){
            border: 1px solid #2123261a;
            border-radius: 3px;
            opacity: 0.5;
            }
            /*.fc-time-grid .fc-slats, .fc-time-grid>hr {
            position: relative;
            z-index: 2;
            top: 43px;
            }*/
            .fc-scroller>.fc-day-grid, .fc-scroller>.fc-time-grid{
            top:42px;
            }
            
            .teacherWorkingHours{
            background: #fff;
            border: 1px solid #fff;
            opacity: 1;
            }
            
            .bookingNotAvailable{               
            background: rgb(215, 162, 162)  !important;
            opacity: 1 !important;
            pointer-events: none;
            bottom: auto !important;
            color: #b95f5f !important;
            border: 1px solid #b95f5f !important;
            left: -2px !important;
            width: 100%;
            }
            .fc-event {
            
            display: block;
            align-items: center;
            justify-content: center;
            padding: 10px;
            /*left: -2px !important;
            width: 100%;*/
            }
            .slds-scope .slds-page-header{
            padding: 5px;
            }
            .slds-page-header {
            border-radius: 0 !important;
            }
            .fc-event-container{
            width: 100%;
            }
            .fc-state-active{
            background: rgb(221, 219, 218) !important;
            }
            .fc-button-group, .fc-toolbar button{
            font-size: 14px !important;
            text-transform: capitalize !important;
            height: 2.4em !important;
            }
            .fc-resource-cell{
            word-wrap: break-word;
            padding: 3px;
            }
            .fc-widget-header thead .fc-resource-cell, .fc-widget-header thead .fc-day-header{
            text-align: center !important;
            }
            .eventHistory{
            border-top: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            padding: 15px 5px;
            }
            #eventIcons{
            position: absolute;
            top: 3px;
            right: 0px;
            }
            .closeon a{
            color: #5a5959;
            }
            #retweet svg{
            transform: rotate(90deg);
            }
            .historyBy{
            color: #afa5a5;
            font-size: 16px;
            vertical-align: text-top;
            }
            #calendar{
            background: #fff;
            }
            .slds-scope a.slds-tabs--default__link {
            color: rgb(0, 109, 204) !important;
            text-decoration: none !important;
            transition: color .1s linear;
            }
            .slds-tabs--default__item.slds-is-active{
            font-weight: unset !important;
            }
            .headerTitle{
            font-size: .8125rem !important;
            font-weight: unset !important;
            }
            #ToastMessage{
            position: absolute !important;
            }
            .slds-scope .slds-is-relative{
            position: fixed !important;
            }
            /*.slds-button-group{
            width: 100%;
            }
            .slds-button-group .slds-button{
            width: 40%;
            }*/
            .btnWidth{
            width: 54% !important;
            }
            .btnBlue{
            background: #00b3f0 !important;
            border-color: #0fa6da !important;
            }
            .customTable th{
            text-align: right;
            font-weight: bold !important;
            }
            .editCustomer{
            position: absolute;
            top: 0px;
            right: 0;
            }
            .recurrence .slds-select, .recurrence .slds-input{
            width: unset !important;
            }
            .editCustomerDetails{
            z-index: 9999;
            position: absolute;
            top: 9%;
            right: 0px;
            }
            .editCustomerDetails section{
            padding: 15px;
            }
            #popoverTitle{
            font-size: 15px;
            font-weight: 600;
            }
            .customInput{
            width: 97% !important;
            margin-left: 4px !important;
            }
            .customPadding{
            padding-left: 0px !important; 
            padding-right: 0px !important;
            }
            .customHeader{
            background: #F8B52F;
            color: white;
            height: 50px;
            padding: 15px;
            }
            .slds-scope .slds-radio_button [type=radio]:checked+.slds-radio_faux, .slds-scope .slds-radio_button [type=radio]:checked+.slds-radio--faux, .slds-scope .slds-radio_button [type=radio]:checked~.slds-radio_faux, .slds-scope .slds-radio_button [type=radio]:checked~.slds-radio--faux, .slds-scope .slds-radio_button [type=radio]:checked+.slds-radio_button__label, .slds-scope .slds-radio_button [type=radio]:checked+.slds-radio--button__label, .slds-scope .slds-radio--button [type=radio]:checked+.slds-radio_faux, .slds-scope .slds-radio--button [type=radio]:checked+.slds-radio--faux, .slds-scope .slds-radio--button [type=radio]:checked~.slds-radio_faux, .slds-scope .slds-radio--button [type=radio]:checked~.slds-radio--faux, .slds-scope .slds-radio--button [type=radio]:checked+.slds-radio_button__label, .slds-scope .slds-radio--button [type=radio]:checked+.slds-radio--button__label{
            background-color: #e6e6e6 !important;
            color: #000 !important;
            }
            #services{
            width: 100px;
            }
            .bookingStatus{
            width: 30% !important;
            }
            .slds-template__container {
            background: #f9b758 !important;
            }
            body{
            background: #f9b758 !important;
            }
            .close-btn {
            position: absolute !important;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            }
            .pop-header {
            position: relative;
            }
            a.editCustomer {
            background: #333;
            color: #fff !important;
            display: inline-block;
            padding: 10px 10px;
            top: 4px;
            text-decoration:none; 
            }
            .popupDetails .pop-header span,.popupDetails .pop-header a,.popupDetails .pop-header svg {
            color: #fff !important;
            }  
            td.fc-widget-content:not(:nth-child(1)) {
            background: #858585;
            opacity: 0.5;
            }
            .custBtn{
            width: 130px;
            background: #f9f3f3 !important;
            color: #000 !important;
            font-weight: bold !important;
            }
            .custmBTN{
            width: 200px;
            background: #f9f3f3 !important;
            color: #000 !important;
            }
            .studentImg{
            width: 200px !important;
            height: 200px !important;
            }
            .fc-ltr .fc-axis{
            font-weight: 500;
            }
            .black{
            border-top: 2px solid #21232645 !important;
            }
            .slds-scope{
            overflow: hidden;
            }
            .fc-header-toolbar{
            position: fixed;
            z-index: 100;
            top: 68px;
            }
            @media only screen and (min-device-width: 720px) and (max-device-width: 1300px) {
            .fc-header-toolbar{
            position: fixed;
            z-index: 100;
            top: 56px;
            }
            }
            .fc-head-container{
            position: -webkit-sticky;
            position: sticky;
            z-index: 999;
            top: 43px;
            }
            #calendar{
            height: calc(100vh - 13vh);
            overflow-y:auto;
            }
            
            td.fc-widget-content:not(:nth-child(1)) {
            background: #fff;
            //opacity: 0.5;
            }
            .fc-nonbusiness {
            background: #858585 !important;
            opacity: 0.5;
            }
            .fc-center{
            margin-left: -204px;
            font-size: large;
            font-weight: 600;
            }
            .editBookingDetailBody{
            height: 160px;
            overflow-y: auto;
            overflow-x: hidden;
            }
            .hyphens-none-fix{
            hyphens:none !important;
            }
            
            .another-box {      
            background: rgba(255, 255, 255, 0.5);       
            width: calc(100% - 30px);       
            margin: 0 15px 15px;        
            padding: 10px 0 20px;       
            }       
            .custom-calendar .calc {        
            border: 1px solid rgb(221, 219, 218);       
            border-radius: .25rem;      
            padding: .25rem 0;      
            background: rgb(255, 255, 255);     
            box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.16);        
            width: 100%;        
            }       
            .date-list {        
            padding: 0 10px !important;     
            }       
            
            .date-list label {      
            padding: 0 5px;     
            }       
            
            
            /*  Date picker css   */       
            #datepicker > .ui-datepicker {      
            width: 17em;        
            padding: 0;     
            display: none;      
            background:#846733;         
            }       
            #datepicker > .ui-datepicker .ui-datepicker-title {     
            margin: 0;      
            line-height: 36px;      
            text-align: center;     
            }       
            #datepicker > .ui-datepicker table {        
            background:#fff;            
            }       
            #datepicker > .ui-datepicker td {       
            padding: 0px;       
            border: 1px solid #eee;     
            font-size: .75rem;      
            position: relative;     
            width: 2rem;        
            min-height: 2rem;       
            line-height: 2.5rem;        
            
            }       
            #datepicker > .ui-datepicker td span,       
            #datepicker > .ui-datepicker td a {     
            display: block;     
            padding: 0em;       
            text-align: center;     
            text-decoration: none;      
            }       
            #datepicker,        
            #datepicker > .ui-datepicker,       
            #datepicker > .ui-datepicker-header,        
            #datepicker > .ui-datepicker-calendar {     
            width: 100%;        
            }       
            #datepicker > .loc-maps span {      
            width: 100%;        
            }       
            #datepicker > .ui-datepicker td span, #datepicker > .ui-datepicker td a {       
            
            background: #fff !important;        
            border:2px solid #fff !important;       
            }       
            #datepicker > .ui-state-highlight, #datepicker > .ui-widget-content .ui-state-highlight,#datepicker > .ui-widget-header .ui-state-highlight {       
            background: rgb(236, 235, 234) !important;      
            border-color: rgb(236, 235, 234) !important;        
            border-width: 2px !important;       
            border-style: solid !important      
            }       
            #datepicker > .ui-datepicker table{     
            margin:0 !important;        
            }       
            #datepicker > .ui-widget.ui-widget-content {        
            border: none;       
            }       
            
            #datepicker > table.ui-datepicker-calendar thead {      
            border: 1px solid #eee;     
            }       
            #datepicker > .ui-datepicker .ui-datepicker-header{     
            border-radius:0;        
            }       
            #datepicker > .ui-datepicker td a.ui-state-active {     
            background: #fff!important;     
            border: 2px solid #f6911d !important;       
            color: #f6911d !important;      
            }       
            #datepicker > .ui-datepicker td a:before, #datepicker > .ui-datepicker td span:before {     
            content: "";        
            position: absolute;     
            max-width: 12px;        
            height: 5px;        
            background: #eee;       
            bottom: 5px;        
            left: 4px;      
            width: 100%;        
            }       
            #datepicker > .ui-datepicker td a:after, #datepicker > .ui-datepicker td span:after {       
            content: "";        
            position: absolute;     
            max-width: 12px;        
            height: 5px;        
            background: #eee;       
            bottom: 5px;        
            right: 4px;     
            width: 100%;        
            }       
            #datepicker > .ui-datepicker .ui-datepicker-prev span, #datepicker > .ui-datepicker .ui-datepicker-next span {      
            display: block;     
            position: absolute;     
            left: 50%;      
            margin-left: -8px;      
            top: 15%;       
            margin-top: 0;      
            transform: translateY(50%);     
            }       
            
            #datepicker > .day-availability--morning .ui-state-default:before, #datepicker > .ui-widget-content .day-availability--morning .ui-state-default:before, #datepicker > .ui-widget-header .day-availability--morning .ui-state-default:before {      
            background: #61c461;        
            }       
            #datepicker > .day-availability--afternoon .ui-state-default:after, #datepicker > .ui-widget-content .day-availability--afternoon .ui-state-default:after, #datepicker > .ui-widget-header .day-availability--afternoon .ui-state-default:after {       
            background: #61c461;        
            }       
            #datepicker > .ui-datepicker .ui-datepicker-next, #datepicker > .ui-datepicker .ui-datepicker-prev{     
            height: 100%;       
            }           
            
            .time-list span.slds-button.slds-radio_button {     
            width: 100%;        
            margin-bottom: 5px;     
            border: 1px solid #eee;     
            }       
            
            .time-list label.slds-radio_button__label {     
            width: 100%;        
            text-align: center;     
            }       
            
            .time-list {        
            background: #f7f7f7;        
            padding: 15px 15px 5px;     
            border: 1px solid #eee;     
            width: calc(100% - 15px);       
            margin: 0 auto 10px;        
            }       
            
            .afternoon .time-list{     
            float: right !important;       
            }       
            .calc > div fieldset {      
            overflow: hidden;       
            }       
            
            .errortxt{      
            color: red;     
            }
            .margin-top5px{
            margin-top:5px;
            }
            
            
            
        </style>
        <apex:form >
            <apex:actionFunction name="reRenderHidden" reRender="calViewInput"/>
            <apex:inputHidden value="{!calView}" id="calViewInput"/>
            
            <div class="demo-only demo--inverse slds-hide" id="enrolProcessLoader" style="height:100%;width:100%;z-index:200;position:fixed">
                <div class="slds-spinner_container" style="height:100%;width:100%;">        
                    <div role="status" style="position: absolute;top:45%;left:45%">     
                        <img src="{!$Resource.animatedmusic}"/>         
                    </div>      
                </div>      
            </div>
            <apex:actionStatus id="status" styleClass="status">
                <apex:facet name="start">
                    <div class="demo-only demo--inverse " style="height:100%;width:100%;z-index:200;position:fixed">
                        <div class="slds-spinner_container" style="height:100%;width:100%;">
                            <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
                                <span class="slds-assistive-text">Loading</span>
                                <div class="slds-spinner__dot-a"></div>
                                <div class="slds-spinner__dot-b"></div>
                            </div>
                        </div>
                    </div>
                </apex:facet>
            </apex:actionStatus>
            <apex:actionFunction name="centerName" reRender="teachersName,resourceName,employeeName" action="{!getTeacherByCenter}" status="status" oncomplete="initChange();teacherChange();getEmployeeByCenter();"/><!--getEmployeeByCenter();-->
            <!-- Jatin:21-jan-2020: for get employee list according to changed Center Id-->
            <!--Jatin:Commented by Jatin : 11-Mar-2020:for deployement:-->
                                              
              <apex:actionFunction name="getEmployeeByCenter" reRender="employeeName" action="{!getEmployeeByCenter}" status="status" oncomplete="employeeChange();"/>
            <div class="slds-scope slds-calender-page">
                <!-- Toast -->
                <div class="demo-only slds-hide" style="height: 4rem;" id='ToastMessage'>
                    <div class="slds-notify_container slds-is-relative">
                        <div class="slds-notify slds-notify_toast slds-theme_success toastclass" role="alert">
                            <span class="slds-assistive-text">success</span>
                            <span class="slds-icon_container slds-icon-utility-success slds-m-right_small slds-no-flex slds-align-top" title="Description of icon when needed">
                                <svg class="slds-icon slds-icon_small" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#success')}" />
                                </svg>
                            </span>
                            <div class="slds-notify__content">
                                <h2 class="slds-text-heading_small" id="toastMsg"></h2>
                            </div>
                            <button class="slds-button slds-button_icon slds-notify__close slds-button_icon-inverse" title="Close" onclick='toastLaunch()'>
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </button>
                        </div>
                    </div>
                </div>
                <!-- Toast -->
                
                <!-- loader start -->
                <div id="statusOnPage" class="demo-only demo--inverse" style="display:none;height:100%;width:100%;z-index:200;position:fixed">
                    <div class="slds-spinner_container" style="height:100%;width:100%;">
                        <div role="status" class="slds-spinner slds-spinner_large slds-spinner_brand">
                            <span class="slds-assistive-text">Loading</span>
                            <div class="slds-spinner__dot-a"></div>
                            <div class="slds-spinner__dot-b"></div>
                        </div>
                    </div>
                </div>
                <!-- loader end -->
                <apex:outputPanel id="op"></apex:outputPanel>
                <div class="slds-page-header">
                    <div class="slds-page-header__row">
                        <div class="slds-page-header__col-title">
                            <div class="slds-media">
                                <div class="slds-media__body">
                                    <div class="slds-grid slds-gutters">
                                        <div class="slds-col slds-size_2-of-12">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label">Centre</label>
                                                <div class="slds-form-element__control">
                                                    <apex:selectList value="{!centerName}" id="centers"  size="1" onchange="centerName();getCenter($(this).val());return false;" styleClass="slds-select selectBox centerList">
                                                        <apex:selectOptions value="{!Centers}"/>
                                                    </apex:selectList>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_2-of-12">
                                            <div class="slds-form-element">
                                                <apex:outputPanel id="teachersName">
                                                    <!--<apex:pageMessages ></apex:pageMessages>-->
                                                    <label class="slds-form-element__label">Teacher</label>
                                                    <div class="slds-form-element__control">
                                                        <apex:selectList value="{!teacherName}" size="1" id="teachers" styleClass="slds-select selectBox teachers">
                                                            <apex:selectOptions value="{!Teachers}"/>
                                                        </apex:selectList>
                                                    </div>
                                                </apex:outputPanel>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_2-of-12">
                                            <div class="slds-form-element">
                                                <label class="slds-form-element__label">Instrument</label>
                                                <div class="slds-form-element__control">
                                                    <select id="instruments" size="1" class="slds-select selectBox instrument" onchange="getInstrument($(this).val());return false;">
                                                    </select>                              
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_2-of-12">
                                            <div class="slds-form-element">
                                                <apex:outputPanel id="resourceName">
                                                    <label class="slds-form-element__label">Resources</label>
                                                    <div class="slds-form-element__control">
                                                        <apex:selectList value="{!resourceId}" id="resources" size="1" styleClass="slds-select selectBox" onchange="getResource($(this).val());return false;">
                                                            <apex:selectOptions value="{!Resources}"/>
                                                        </apex:selectList>
                                                    </div>
                                                </apex:outputPanel>    
                                                
                                            </div> 
                                        </div>
                                        <!-- Jatin: 20-jan- 2020:START: show employee List -->
                                       <!--Commented By jatin: 11-Mar-2020: For we not deploye employee picklist in calender-->
                                          <div class="slds-col slds-size_2-of-12">
                                            <div class="slds-form-element">
                                                <apex:outputPanel id="employeeName">
                                                    <label class="slds-form-element__label">Employee</label>
                                                    <div class="slds-form-element__control">
                                                        <apex:selectList value="{!employeeId}" id="employee" size="1" styleClass="slds-select selectBox employee" onchange="getEmployeeList($(this).val());return false;">
                                                            <apex:selectOptions value="{!EmployeeList}"/>
                                                        </apex:selectList>
                                                    </div>
                                                </apex:outputPanel>    
                                                
                                            </div> 
                                        </div> 
                                       
                                        <!-- Jatin: 20-jan- 2020:END: show employee List -->
                                        
                                        <div class="slds-col slds-size_4-of-12" style="padding-top: 24px;">
                                            <div class="slds-button-group slds-grid" role="group">
                                                    <button class="slds-col slds-size_2-of-12 slds-button slds-button_icon slds-button_icon-border-filled button-shadow" aria-pressed="false"   title="Refresh" onclick="refreshCalendar();return false;">
                                                        <svg class="slds-button__icon slds-icon_x-small" aria-hidden="true">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/action-sprite/svg/symbols.svg#refresh')}"></use>
                                                        </svg>
                                                    </button>
                        
                                            </div>

                                            <!--<div class="slds-grid slds-gutters">
                                                <div class="slds-col slds-size_1-of-2">
                                                    <button class="slds-button slds-button_neutral"  title="Refresh" onclick="refreshCalendar();return false;">
                                                        <svg class="slds-button__icon slds-icon_x-small" aria-hidden="true">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/action-sprite/svg/symbols.svg#refresh')}"></use>
                                                        </svg>
                                                    </button> 
                                                </div>
                                                <div class="slds-col slds-size_1-of-2">
                                                    
                                                </div>
                                            </div>-->
                                        </div>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div id="calendar"></div>
                
                <!-- booking detail popup end--> 
                <div class="editDetails slds-hide">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="width: 65%;">
                            <div class="slds-modal__content" id="modal-content-id-1" style="min-height: 385px; max-height: 440px;overflow-y: hidden; ">
                                <div class="slds-grid slds-wrap customHeader" style="background: #303a42;">
                                    <div class="slds-col slds-size_10-of-12">
                                        <h1>
                                            <span class="slds-page-header__title slds-truncate" id="detailPopupTitle">
                                                Appointment Details
                                            </span>
                                        </h1>
                                    </div>
                                    <div class="slds-col slds-size_2-of-12 slds-text-align_right">
                                        <a  class="slds-button slds-button_icon" id="closeRescheduleIconButton" title="Close" style="color: white;" href="javascript:void(0);" onclick="cancelRescheduling();return false;">
                                            <svg class="slds-button__icon slds-icon_x-small" aria-hidden="true">
                                                <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/action-sprite/svg/symbols.svg#close')}"></use>
                                            </svg>
                                            <span class="slds-assistive-text">Close</span>
                                        </a>
                                    </div>
                                    
                                </div>
                                <div class="slds-m-around--large" style="margin-bottom: 0px" role="group">
                                    <div class="slds-tabs--default">
                                        <div style="float:right;">
                                            <label><b>Status: </b></label>
                                            <label id="statusLabelOnEdit"></label>
                                            <span id="statusIconOnEdit"></span>
                                        </div>
                                        
                                        <ul class="slds-tabs--default__nav customTabs" role="tablist">
                                            
                                            <li class="slds-tabs--default__item slds-text-heading--label slds-active" title="Details" role="presentation">
                                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="0" aria-selected="true" aria-controls="tab-default-1" id="tab-default-1__item">
                                                    Details
                                                </a>
                                            </li>
                                            <li class="slds-tabs--default__item slds-text-heading--label" title="Notes" role="presentation">
                                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="true" aria-controls="tab-default-2" id="tab-default-2__item">                                                    
                                                    Notes
                                                </a>
                                            </li>
                                            <li class="slds-tabs--default__item slds-text-heading--label" title="History" role="presentation">
                                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="true" aria-controls="tab-default-3" id="tab-default-3__item">
                                                    History
                                                </a>
                                            </li>
                                            <li class="slds-tabs--default__item slds-text-heading--label slds-hide" title="Advance Actions" role="presentation" id="advanceDetailsSection">
                                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="true" aria-controls="tab-default-4" id="tab-defaul-4__item">
                                                    Adv. Actions
                                                </a>
                                            </li>
                                            <li class="slds-tabs--default__item slds-text-heading--label slds-hide" title="Enrolment" role="presentation" id="enrolmentDetailSection">
                                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="true" aria-controls="tab-default-5" id="tab-defaul-5__item">
                                                    Enrolment
                                                </a>
                                            </li>
                                            <!-- Added By Ravi on 8 july 2020 online lesson Tab-->
                                                 <li class="slds-tabs--default__item slds-text-heading--label" title="Online Lesson" role="presentation">
                                                <a class="slds-tabs--default__link" href="javascript:void(0);" role="tab" tabindex="-1" aria-selected="true" aria-controls="tab-default-6" id="tab-default-6__item">
                                                    Online Lesson
                                                </a>
                                            </li> 
                                            <!-- Added By Ravi on 8 july 2020 online lesson Tab-->
                                        </ul>
                                        <div id="tab-default-1" class="slds-tabs--default__content slds-show" role="tabpanel" aria-labelledby="tab-default-1__item">
                                            <div class="slds-grid slds-wrap slds-p-around_xxx-small">
                                                
                                                <div class="slds-col slds-size_1-of-1">
                                                    <div class="editBookingDetailBody">
                                                        <div class="slds-grid slds-gutters">
                                                            <div class="slds-col slds-size_5-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Location:</b></span>
                                                                <!--<span id="centerName"></span>-->
                                                                <span><a id="centerName" href="" target="_blank"></a></span>
                                                            </div>
                                                            <div class="slds-col slds-size_7-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Student:</b></span>
                                                                <!--<span id="name1"></span>-->
                                                                <span><a id="name1" target="_blank" href="#"></a></span>
                                                            </div>
                                                        </div>
                                                        <div class="slds-grid slds-gutters">
                                                            <div class="slds-col slds-size_5-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Teacher Name:</b></span>
                                                                <!--<span id="teacherNameEditPopup"></span>-->
                                                                <span><a id="teacherNameEditPopup" target="_blank" href="#"></a></span>
                                                            </div>
                                                            
                                                            <div class="slds-col slds-size_7-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Parent:</b></span>
                                                                <!--<span id="parentname1"></span>-->
                                                                <span><a id="parentname1" target="_blank" href="#"></a></span>
                                                            </div>
                                                            
                                                        </div>
                                                        <div class="slds-grid slds-gutters">
                                                            <div class="slds-col slds-size_5-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Date:</b></span>
                                                                <span id="date"></span>
                                                                
                                                            </div>
                                                            
                                                            <div class="slds-col slds-size_7-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Phone:</b></span>
                                                                <span><a id="phone" target="_blank" href="#"></a></span>
                                                            </div>
                                                        </div>
                                                        <div class="slds-grid slds-gutters">
                                                            <div class="slds-col slds-size_5-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Time:</b></span>
                                                                <span id="serviceTime"></span>
                                                                
                                                            </div>
                                                            
                                                            <div class="slds-col slds-size_7-of-12" style="margin-right: 0px;padding-right: 0PX;">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Email:</b></span>
                                                                <span id="email"></span>
                                                            </div>
                                                        </div>
                                                        <div class="slds-grid slds-gutters">
                                                            <!-- added by Ravi..Exchanged the place of Package and Duration on 15 july 2020-->
                                                            <div class="slds-col slds-size_5-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Duration:</b></span>
                                                                <span id="serviceDuration"></span>
                                                            </div>
                                                            <div class="slds-col slds-size_7-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Package:</b></span>
                                                                <span id="servicePackagName"></span>
                                                            </div>
                                                            <!-- Exchanged the place of Package and Duration -->
                                                            <!-- div class="slds-col slds-size_5-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Package:</b></span>
                                                                <span id="servicePackagName"></span>
                                                            </div>
                                                            <div class="slds-col slds-size_7-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Duration:</b></span>
                                                                <span id="serviceDuration"></span>
                                                            </div -->
                                                            
                                                        </div>
                                                        <!-- added By ravi on 3rd july 2020 -->
                                                        <div class="slds-grid slds-gutters" >
                                                            <div class="slds-col slds-size_5-of-12">
                                                                <div>
                                                                    <span class="slds-form-element__label slds-text-align_right"><b>Studio:</b></span>
                                                                    <span id="ResourceTypeName"></span>&nbsp;
                                                                  
                                                                </div>
                                                            </div>
                                                            <div class="slds-col slds-size_7-of-12">
                                                                <div>
                                                                    <span class="slds-form-element__label slds-text-align_right"><b>Lesson Type:</b></span>
                                                                    <span id="lessonTypeName"></span>&nbsp;
                                                                </div>
                                                            </div>
                                                            
                                                        </div>
                                                        <div class="slds-grid slds-gutters" id="changeLessonResource">
                                                            <div class="slds-col slds-size_5-of-12">
                                                                <div>
                                                                    <a href="javascript:void(0);" id="changeResourceType">
                                                                        Change Studio 
                                                                    </a>
                                                                </div>
                                                            </div>
                                                            <div class="slds-col slds-size_7-of-12">
                                                                <div>
                                                                    <a href="javascript:void(0);" id="changeLessonType">
                                                                        Change Lesson Mode
                                                                    </a>
                                                                </div>
                                                            </div>
                                                            
                                                        </div>
                                                         <!-- End added By ravi on 3rd july 2020 -->
                                                    </div>
                                                    <hr style="margin-bottom: 0px;" id="hr-editAppointment"/>
                                                    <div class="slds-grid slds-gutters slds-m-top_large" id="hide-Button-Section-On-Blocked" >
                                                        <div class="slds-col slds-size_5-of-12 button_Group_reschedule" id="button_Group_reschedule" style="padding-right:0.25rem;padding-left:0.25rem;">
                                                            <div class="slds-button-group slds-grid" role="group" >
                                                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="No-show" aria-pressed="false" id="noShowBooking">No-show&nbsp;
                                                                    <svg class="slds-button__icon" aria-hidden="true">
                                                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                                                    </svg>
                                                                    <span class="slds-assistive-text">No-show</span>
                                                                </button>
                                                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Completed" aria-pressed="false" id="completeBooking">Completed&nbsp;
                                                                    <svg class="slds-button__icon" aria-hidden="true">
                                                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                                                    </svg>
                                                                    <span class="slds-assistive-text">Complete</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <div class="slds-col slds-size_5-of-12" id="button_Group_Cancel_reschedule" style="padding-right:0.25rem;padding-left:0.25rem;">
                                                            <div class="slds-button-group slds-grid" role="group">
                                                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Cancel" aria-pressed="false" id="cancelBooking">Cancel&nbsp;
                                                                    <svg class="slds-button__icon" aria-hidden="true">
                                                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clear')}" />
                                                                    </svg>
                                                                    <span class="slds-assistive-text">Cancelled</span>
                                                                </button>
                                                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled editBooking button-shadow" title="Reschedule" aria-pressed="false" id="rescheduleBookingOnlyResource">Reschedule&nbsp;
                                                                    <svg class="slds-button__icon" aria-hidden="true">
                                                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#edit')}" />
                                                                    </svg>
                                                                    <span class="slds-assistive-text">Reschedule</span>
                                                                </button>
                                                            </div>
                                                        </div>
                                                        <div class="slds-col slds-size_2-of-12"  style="padding-right:0.25rem;padding-left:0.25rem;">
                                                            <div class="slds-button-group slds-grid"  id="button_Group_EditDetails"  role="group">
                                                               
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="tab-default-2" class="slds-tabs--default__content slds-hide" role="tabpanel" aria-labelledby="tab-default-2__item">
                                            <div class="slds-col slds-size_1-of-1">
                                                <div>
                                                    <a href="javascript:void(0);" class="slds-button slds-button_brand" id="newBookingNote">
                                                        <svg class="slds-button__icon slds-icon_x-small" aria-hidden="true">
                                                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>
                                                        </svg>
                                                        Add New Booking Note
                                                    </a>
                                                </div>
                                            </div>
                                            <div class="slds-grid"> 
                                                <div class="slds-col slds-size_3-of-3 slds-m-top_small slds-wrap slds-scrollable_x" style="height: 200px;overflow-y: auto;">
                                                    <h1>
                                                        <span class="slds-page-header__title slds-truncate">
                                                            Booking Notes:
                                                        </span>
                                                    </h1>
                                                    <table class="slds-table slds-no-row-hover slds-table_bordered slds-wrap slds-scrollable_x">
                                                        <thead>
                                                            <tr class="slds-line-height_reset">
                                                                <th class="" scope="col">
                                                                    <div class="slds-truncate">Title</div>
                                                                </th>
                                                                <th class="" scope="col">
                                                                    <div class="slds-truncate">Body</div>
                                                                </th>
                                                                <th class="" scope="col">
                                                                    <div class="slds-truncate">Date-Time</div>
                                                                </th>
                                                                <th class="" scope="col">
                                                                    <div class="slds-truncate">Created By</div>
                                                                </th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="bookingNotesTBody"></tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="tab-default-3" class="slds-tabs--default__content slds-hide" role="tabpanel" aria-labelledby="tab-default-3__item" style="max-height: 300px;overflow-y: auto;">
                                            <p id="bookingHistory" class="slds-m-top_small"></p>
                                        </div>
                                        
                                        <div id="tab-default-5" class="slds-tabs--default__content" role="tabpanel" aria-labelledby="tab-default-5__item" style="max-height: 300px;overflow-y: auto;">
                                            <div class="slds-col slds-size_1-of-1 slds-align_absolute-center">      
                                                <span>      
                                                    <!--<button class="slds-button slds-button_neutral" style="width:350px" id="enrollNowProcess" onclick="enrollNowProcessFunc();return false;">       
Enrol now       
</button> -->      
                                                </span>     
                                            </div>
                                            <div class="slds-col slds-size_1-of-1 slds-p-around_small slds-align_absolute-center">
                                                <span>
                                                    <button class="slds-button slds-button_neutral" style="width:350px" id="sendTrialEnrollmentLink" onclick="sendTrialEnrollment($(this).attr('data-id'));return false;">
                                                        Send Enrolment Link
                                                    </button>
                                                </span>
                                            </div>
                                            <div class="slds-col slds-size_1-of-1 slds-p-around_small slds-align_absolute-center">
                                                <span>
                                                    <a class="slds-button slds-button_neutral" style="width:350px;pointer-events:none;" disabled="true" id="completeTrialEnrollmentLink" onclick="$('#trialBookingClickModal').addClass('slds-hide');">
                                                        Complete Enrolment and Send Payment Link
                                                    </a>
                                                </span>
                                            </div>
                                        </div>
                                        <!-- tab 4 start -->
                                        <div id="tab-default-4" class="slds-tabs--default__content slds-hide" role="tabpanel" aria-labelledby="tab-default-4__item">
                                            <div class="slds-form-element__control">
                                                <div class="slds-grid slds-gutters">
                                                    <div class="slds-col slds-size_5-of-12">
                                                        <span class="slds-form-element__label slds-text-align_right"><b>Package Process Type:</b></span>
                                                        <span id="processTypeEdit"></span>
                                                    </div>
                                                    <div class="slds-col slds-size_7-of-12">
                                                        <span class="slds-form-element__label slds-text-align_right"><b>New Package(If any):</b></span>
                                                        <span><a id="newPackageEdit" target="_blank" href="#"></a></span>
                                                    </div>
                                                </div>                                                        
                                                <div class="slds-grid slds-gutters">
                                                    <div class="slds-col slds-size_5-of-12">
                                                        <span class="slds-form-element__label slds-text-align_right"><b>Request Date:</b></span>
                                                        <span id="requestDateEdit"></span>
                                                    </div>
                                                    <div class="slds-col slds-size_7-of-12">
                                                        <span class="slds-form-element__label slds-text-align_right"><b>Effective Date:</b></span>
                                                        <span id="effectiveDateEdit"></span>
                                                    </div>
                                                </div>
                                                <div class="slds-grid slds-gutters">
                                                    <div class="slds-col slds-size_5-of-12">
                                                        <span class="slds-form-element__label slds-text-align_right"><b>Notice Period Start:</b></span>
                                                        <span id="noticeStartEdit"></span>
                                                    </div>
                                                    <div class="slds-col slds-size_7-of-12">
                                                        <span class="slds-form-element__label slds-text-align_right"><b>Notice Period End:</b></span>
                                                        <span id="noticeEndEdit"></span>
                                                    </div>
                                                </div>
                                                <div class="slds-grid slds-gutters">
                                                    <div class="slds-col slds-size_5-of-12">
                                                        <span class="slds-form-element__label slds-text-align_right"><b>Created By:</b></span>
                                                        <span id="advanceActionRequestedBy"></span>
                                                    </div>
                                                    <div class="slds-col slds-size_7-of-12">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Added By Ravi on 8 july 2020 .. for Online leesson Tab-->
                                        <div id="tab-default-6" class="slds-tabs--default__content slds-hide" role="tabpanel" aria-labelledby="tab-default-2__item">
                                            <div class="slds-grid slds-wrap slds-p-around_xxx-small">
                                                <div class="slds-col slds-size_1-of-1">
                                                        <div class="slds-grid slds-gutters">
                                                            <!-- div class="slds-col slds-size_5-of-12">
                                                                <span class="slds-form-element__label slds-text-align_right"><b>Lesson PassCode:</b></span>
                                                                
                                                                <span><a id="lessonPassCode"  href="javascript:void(0);"></a></span>
                                                            </div -->
                                                            <div class="slds-col slds-size_7-of-12" style="text-align: -webkit-center;margin-left: 17%;padding: 0%;">
                                                                <!-- span id="lessonURL"></span -->
                                                                <!-- span class="slds-form-element__label slds-text-align_right"><b>Lesson URL:</b></span -->
                                                                <apex:inputtextarea ID="holdtext" STYLE="display:none;"></apex:inputtextarea>
                                                                <div class="input-group mb-3" style="margin-bottom: 1rem!important;width: max-content;">
                                                                    <input type="text" class="form-control" readonly="true" id="lessonURL"/>
                                                                    <div class="input-group-append" style="margin-left: -1px;float:right;">
                                                                        <button class="btn btn-outline-secondary" type="button" onclick="ClipBoard('{!$Component.lessonURL}', '{!$Component.holdtext}');" style="height: 31px;background-color: white;border-color: white;">Copy Link</button>
                                                                    </div>
                                                                </div> 
                                                                <div class="input-group mb-3" style="padding-top: 1%;">
                                                                <span class="slds-form-element__label slds-text-align_right" style="font-size: 16px;font-weight: bold;"><b>Meeting PassCode:</b></span>
                                                                <span id="lessonPassCode" style="font-size: 16px;font-weight: bold;"></span>
                                                                </div>
                                                                
                                                                
                                                                
                                                            </div>
                                                        </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- End Added By Ravi on 8 july 2020 .. for Online leesson Tab-->
                                        
											
                                    </div>
                                    <!-- tab 4 ends && tab 5 starts -->
                                    
                                    <!-- tab 5 ends-->
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                
                
                <div class="editCustomerDetails slds-hide">
                    <section aria-describedby="dialog-body-id-3" aria-labelledby="dialog-heading-id-3"  role="dialog">
                        <button class="slds-button slds-button_icon slds-button_icon-small slds-float_right slds-popover__close" title="Close dialog" onclick="$('.editCustomerDetails').addClass('slds-hide'); return false;">
                            <svg class="slds-button__icon" aria-hidden="true">
                                <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#close" />
                            </svg>
                            <span class="slds-assistive-text">Close dialog</span>
                        </button>
                        <header class="slds-popover__header" style="background: #F8B52F; color: #fff">
                            <h2 class="slds-text-heading_small"><b>Editing</b> <span id="popoverTitle"></span></h2>
                        </header>
                        <div class="slds-popover__body slds-form-element slds-form-element_compound" id="dialog-body-id-3">
                            <div class="slds-form-element__control">
                                <div class="slds-form-element__row">
                                    <div class="slds-size_1-of-2">
                                        <div class="slds-form-element customPadding">
                                            <div class="slds-form-element__control">
                                                <input type="text" id="fname" class="slds-input" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-size_1-of-2">
                                        <div class="slds-form-element">
                                            <div class="slds-form-element__control">
                                                <input type="text" id="lname" class="slds-input" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form-element__row slds-m-top_large">
                                    <div class="slds-size_1-of-2">
                                        <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left">
                                            <svg class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default" aria-hidden="true">
                                                <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#call"></use>
                                            </svg>
                                            <input id="telephone" class="slds-input" type="text" value="" />
                                        </div>
                                    </div>
                                    <div class="slds-size_1-of-2">
                                        <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left">
                                            <svg class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default" aria-hidden="true">
                                                <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#search"></use>
                                            </svg>
                                            <input id="parentsms" class="slds-input customInput" type="text" value="" />
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form-element__row slds-m-top_large">
                                    <div class="slds-size_1-of-1">
                                        <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon_left">
                                            <svg class="slds-icon slds-input__icon slds-input__icon_left slds-icon-text-default" aria-hidden="true">
                                                <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#email"></use>
                                            </svg>
                                            <input id="parentEmail" class="slds-input" type="text" value="" />
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form-element__row slds-m-top_large">
                                    <div class="slds-form-element__row">
                                        <div class="slds-size_1-of-2">
                                            <div class="slds-form-element customPadding">
                                                <div class="slds-form-element__control">
                                                    <input type="text" id="parentfname" class="slds-input" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="slds-size_1-of-2">
                                            <div class="slds-form-element">
                                                <div class="slds-form-element__control">
                                                    <input type="text" id="parentlname" class="slds-input" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form-element__row slds-m-top_large">
                                    <div class="slds-size_1-of-1">
                                        <div class="slds-form-element__control">
                                            <select class="slds-select">
                                                <option>New Customer</option>
                                                <option>Returning Customer</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="slds-form-element__row slds-m-top_large">
                                    <div class="slds-size_1-of-2">
                                        <div class="slds-form-element__control">
                                            <a class="slds-button slds-button_neutral" style="width: 97%; margin-right: 10px" href="javascript:void(0);" onclick="$('.editCustomerDetails').addClass('slds-hide'); return false;">Cancel</a>
                                        </div>
                                    </div>
                                    <div class="slds-size_1-of-2">
                                        <div class="slds-form-element__control">
                                            <a class="slds-button slds-button_brand" style="width: 97%; margin-left: 10px" href="javascript:void(0);" onclick="updateCustomer();return false;">Update</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
                
                <div class="cancellationReasonPopup slds-hide">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="width: 35%;">
                            <div class="slds-modal__content" id="modal-content-id-1">
                                <div style="background:#303a42;  color:white;">
                                    <div class="slds-grid slds-wrap">
                                        <div class="slds-col slds-size_11-of-12 slds-large-size_11-of-12">
                                            <h2 id="reasonPopupText" class="slds-text-heading_medium slds-hyphenate slds-p-around_medium">Cancel appointment</h2>
                                        </div>
                                        <div class="slds-col slds-size_1-of-12 slds-large-size_1-of-12 slds-p-top_medium">
                                            <span class="pointerForClick" onclick="$('.cancellationReasonPopup').addClass('slds-hide'); return false;">
                                                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                    <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#close"></use>
                                                </svg>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="popupBody">
                                    <div class="slds-p-around_small notMakeupHoursShow">
                                        <b>The following services will be cancelled:</b>
                                        <ul style="padding-left:25px;list-style:disc">
                                            <li><span id="lessonOnCancel"></span> with <span id="teacherOnCancel"></span> on <span id="dateAndTimeOnCancel"></span></li>
                                        </ul>
                                    </div>
                                    <div class="slds-p-around_small slds-hide makeupTitle">
                                        <b>You are cancelling this event within 24 hours. Do you want to give make up credit for this booking:</b>
                                        <div class="slds-p-around_small">
                                            <button class="slds-button slds-button_neutral" id="no-makeup"> 
                                                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                    <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#close"></use>
                                                </svg>
                                                No
                                            </button>
                                            <button class="slds-button slds-button_brand" id="yes-makeup"> 
                                                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                    <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#check"></use>
                                                </svg>
                                                Yes
                                            </button>
                                        </div>
                                    </div>
                                    <div class="slds-p-around_small reasonSection">
                                        <b class="reasonText">Reason for Cancellation</b>
                                        <select class="slds-select" id="cancelReason" onchange="showMessageForCancellation();return false;">
                                            
                                        </select>
                                        <p id="errorMsgReason" style="color:red;"></p>
                                    </div>
                                    
                                    <div class="slds-p-around_small slds-hide makeupCredit">
                                        <b>Remark for Make-up credit</b>
                                        <textarea id="remarkForCancellation" placeholder="Please Enter Reason for Make-up Credit" class="slds-textarea"></textarea>
                                        <p id="errorMsgRemark" style="color:red;"></p>
                                    </div>
                                    
                                    
                                </div>
                            </div>
                            <footer class="slds-modal__footer">
                                <button class="slds-button slds-button_neutral close-popup" onclick="$('.cancellationReasonPopup').addClass('slds-hide'); return false;">
                                    <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                        <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#close"></use>
                                    </svg>
                                    Close
                                </button>
                                
                                <button class="slds-button slds-button_neutral slds-button_destructive" href="javascript:void(0);" id="cancelBookingWithReason">
                                    <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                        <use xlink:href="/_slds/icons/utility-sprite/svg/symbols.svg#delete"></use>
                                    </svg>
                                    Cancel Appointment
                                </button>
                                <button class="slds-button slds-button_neutral slds-hide" href="javascript:void(0);" id="cancelBookingWithMakeupBtn">
                                    Give Makeup Credit Hours
                                </button>
                            </footer>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                <div class="confirmModal slds-hide" id="confirmModal">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="width: 35%;">
                            <header class="slds-modal__header" style="background: #303a42; color: white;">
                                <h2 id="confirmHeader" class="slds-text-heading_medium slds-hyphenate"></h2>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium" id="confirmBody"></div>
                            <footer class="slds-modal__footer">
                                <button class="slds-button slds-button_neutral revert" id="confirmModalNo" onclick="$('.confirmModal').addClass('slds-hide'); return false;">No</button>
                                <button class="slds-button slds-button_brand yesClass" id="confirmModalYes">Yes</button>
                            </footer>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                
                <!--New Booking Click Modal-->
                <div class="slds-hide" id="newBookingModal">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="width: 30%;">
                            <header class="slds-modal__header" style="background: #303a42; color: white;">
                                <h2 id="newBookingHeader" class="slds-text-heading_medium slds-hyphenate"></h2>
                                <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#newBookingModal').addClass('slds-hide'); return false;">
                                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </a>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium" id="newBookingBody">
                                <div class="slds-grid slds-wrap">
                                    <div class="slds-col slds-size_1-of-1 slds-align_absolute-center">
                                        <span>
                                            <button class="slds-button slds-button_neutral" style="width:250px" id="addNewBooking" onclick="newAppointmentPopup($(this).attr('data-centerid'), $(this).attr('data-teacherid'), $(this).attr('data-date'));return false;">
                                                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#event')}"></use>
                                                </svg>Add Appointment
                                            </button>
                                        </span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-1 slds-align_absolute-center">
                                        <span>
                                            <button class="slds-button slds-button_neutral" style="width:250px" id="addBusyTime" onclick="addBusyTimeFunc();return false;">
                                                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#error')}"></use>
                                                </svg>Add busy time
                                            </button>
                                        </span>
                                    </div>
                                    <!--  add class button @arpit 14Aug2019 -->
                                    <div class="slds-col slds-size_1-of-1 slds-align_absolute-center">
                                        <span>
                                            <button class="slds-button slds-button_neutral slds-hide" style="width:250px" id="addClass" onclick="openAddClass();return false;">
                                                <svg class="slds-button__icon slds-button__icon_left" aria-hidden="true">
                                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#groups')}"></use>
                                                </svg>Add Class
                                            </button>
                                        </span>
                                    </div>
                                    
                                </div>
                            </div>
                            
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                
                <!--Trial Booking Click Modal-->
                <div class="slds-hide" id="trialBookingClickModal">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="width: 35%;">
                            <header class="slds-modal__header" style="background: #303a42; color: white;">
                                <h2 id="trialBookingClickModalHeader" class="slds-text-heading_medium slds-hyphenate">Trial Booking</h2>
                                <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#trialBookingClickModal').addClass('slds-hide'); return false;">
                                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </a>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium" id="trialBookingClickModalBody">
                                <div class="slds-grid slds-wrap">
                                    <div class="slds-col slds-size_1-of-1 slds-align_absolute-center">
                                        <span>
                                            <button class="slds-button slds-button_neutral" style="width:350px" id="rescheduleTrialBooking" onclick="rescheduleTrialBookingfunc($(this).attr('data-id'), $(this).attr('data-date'));return false;">
                                                Reschedule Trial Appointment
                                            </button>
                                        </span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-1 slds-align_absolute-center">
                                        <span>
                                            <button class="slds-button slds-button_neutral" style="width:350px" id="sendTrialEnrollmentLink" onclick="sendTrialEnrollment($(this).attr('data-id'));return false;">
                                                Send Enrolment Link
                                            </button>
                                        </span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-1 slds-align_absolute-center">
                                        <span>
                                            <button class="slds-button slds-button_neutral" style="width:350px;pointer-events:none;" id="completeTrialEnrollmentLink" disabled="true" onclick="$('#trialBookingClickModal').addClass('slds-hide');">
                                                Complete Enrolment and Send Payment Link!
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                <!--New Booking Note popup-->
                <div class="addNotes slds-hide" style="height: 640px;">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_small">
                        <div class="slds-modal__container" style="width: 50%;">
                            <header class="slds-modal__header" style="background: #303a42;">
                                <a href="javascript:void(0);" class="slds-button slds-button_icon close-btn" title="Close" onclick="$('.addNotes').addClass('slds-hide'); return false;" style="color:#fff;">
                                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </a>
                                <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate" style="text-align: left; color: #fff; font-weight: 600;">Add New Booking Note</h2>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                <div id="addBookingNoteSection">
                                    <div class="slds-box slds-m-top_small">
                                        <div class="slds-form-element">
                                            <label class="slds-form-element__label">Title</label>
                                            <div class="slds-form-element__control">
                                                <input type="text" id="title" class="slds-input" required="true" />
                                            </div>
                                        </div>
                                        <div class="slds-form-element">
                                            <label class="slds-form-element__label">Body</label>
                                            <div class="slds-form-element__control">
                                                <textarea id="note" class="slds-textarea"></textarea>
                                            </div>
                                        </div>
                                        <div class="slds-form-element slds-text-align_right slds-m-top_small">
                                            <a href="javascript:void(0);" class="slds-button slds-button_brand" id="saveBookingNote" onclick="saveBookingNote(); return false;">
                                                Save
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                
                <!-- New Appointment create popup -->
                <div class="slds-hide" id="newBookingDetails">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="padding: 10px;">
                            <header class="slds-modal__header" style="background: #303a42; color: white;">
                                <h2 id="newBookingDetailsHeader" class="slds-text-heading_medium slds-hyphenate">Create Appointment</h2>
                                <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#newBookingDetails').addClass('slds-hide');refreshNewBookingPopup(); return false;">
                                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </a>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium" id="newBookingDetailsBody" style="overflow-y: auto;height:600px">
                                <div class="slds-grid slds-wrap slds-p-around_xxx-small">
                                    
                                    <div class="slds-col slds-size_1-of-1">
                                        <div class="slds-grid slds-gutters">
                                            <div class="slds-col slds-size_1-of-12">
                                                <label class="slds-form-element__label hyphens-none-fix" style="hyphens:none" for="centerNameLabel"><b>Location:</b></label>
                                            </div>
                                            <div class="slds-col slds-size_4-of-12">
                                                <div class="slds-form-element__control" style="top: 3px;padding-left:10px;">
                                                    <label id="centerNameLabel"></label>
                                                </div>
                                            </div>
                                            <div class="slds-col slds-size_1-of-12">
                                                <label class ="slds-form-element__label hyphens-none-fix" for="studentInput"><b>Student:</b></label> 
                                            </div>
                                            <div class="slds-col slds-size_6-of-12" style="padding-left:20px;">
                                                <div class="slds-form-element__control">
                                                    <div class="slds-combobox_container">
                                                        <div class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click " aria-expanded="false" aria-haspopup="listbox" role="combobox" id="studentSelectContainer">
                                                            <div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right" role="none">
                                                                <input class="slds-input slds-combobox__input" id="studentInput" aria-autocomplete="list" aria-controls="listbox-id-1" autocomplete="off" role="textbox" type="text" placeholder="Student Name" value="" />
                                                                
                                                            </div>
                                                            <div id="listbox-id-1" class="slds-dropdown slds-dropdown_length-with-icon-7 slds-dropdown_fluid" role="listbox" style="max-height: 160px;">
                                                                <ul class="slds-listbox slds-listbox_vertical" role="presentation" id="studentSearchList">
                                                                    
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="slds-grid slds-gutters">
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label hyphens-none-fix" for="dateLabel"><b>Date:</b></label>
                                            </div>
                                            <div class="slds-col slds-size_4-of-12" style="padding-top:14px;">
                                                <div class="slds-form-element__control" style="padding-left:10px;">
                                                    <label class="slds-form- element__label" id="dateLabel"></label>
                                                </div>
                                            </div>
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label hyphens-none-fix" for="parentInput"><b>Parent:</b></label>
                                            </div>
                                            <div class="slds-col slds-size_6-of-12" style="padding-top:10px;">
                                                <div class="slds-form-element__control" style="padding-left:9px;">
                                                    <input id="parentInput" placeholder="Parent Name" class="slds-input" type="text" value="" />  
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="slds-grid slds-gutters">
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label" for="timeLabel"><b>Time:</b></label> 
                                            </div>
                                            <div class="slds-col slds-size_4-of-12" style="padding-top:14px;">
                                                <div class="slds-form-element__control" style="padding-left:10px;">
                                                    <label id="timeLabel"></label>
                                                </div>     
                                            </div>
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label" for="phoneInput"><b>Phone:</b></label> 
                                            </div>
                                            <div class="slds-col slds-size_6-of-12" style="padding-top:10px;">
                                                <div class="slds-form-element__control" style="padding-left:9px;">
                                                    <input id="phoneInput" placeholder="Phone" class="slds-input" type="text" value="" /> 
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="slds-grid slds-gutters">
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label" for="makeupHoursLabel"><b>AMM:</b></label> 
                                            </div>
                                            <div class="slds-col slds-size_4-of-12" style="padding-top:14px;">
                                                <div class="slds-form-element__control" style="padding-left:10px;">
                                                    <label id="makeupHoursLabel"></label><br/>
                                                    <label class="" id="makeupHoursErrorMsg" style="color:red;"></label>
                                                </div>     
                                            </div>
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label" for="emailInput"><b>Email:</b></label>  
                                            </div>
                                            <div class="slds-col slds-size_6-of-12" style="padding-top:10px;">
                                                <div class="slds-form-element__control" style="padding-left:9px;">
                                                    <input id="emailInput" placeholder="Email" class="slds-input" type="text" value="" /> 
                                                </div>
                                            </div>
                                            
                                        </div>
                                          <!-- added by nishi: 23-Jul-2020:Start: for ossia student select instrument and teacher Id-->
                                          <div class="slds-grid slds-gutters slds-hide" id="ossiaStudentBlock">
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label hyphens-none-fix" for="teacherInput"><b>Teacher:</b></label>
                                            </div>
                                            <div class="slds-col slds-size_4-of-12" style="padding-top:10px;">
                                                <div class="slds-form-element__control" style="padding-left:9px;">
                                                    <div class="slds-combobox_container">
                                                        <select class="slds-select" id="OssiaTeacherSelect" disabled="true" onchange="handleOssiaTeacher(); return false;">
                                                        </select>
                                                    </div> 
                                                    <label class="" id="OssiaStudentErrorMsg" style="color:red;"></label>
                                                </div>
                                            </div>
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label hyphens-none-fix" for="instrumentLabel"><b>Instrument:</b></label>
                                            </div>
                                            <div class="slds-col slds-size_6-of-12" style="padding-top:10px;">
                                                <div class="slds-form-element__control" style="padding-left:9px;">
                                                    <select class="slds-select" id="OssiaInstrumentSelect" disabled="true" onchange="handleOssiaMakeupMin(); return false;">
                                                    </select>
                                                    <label class="" id="OssiaInstrumentErrorMsg" style="color:red;"></label>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- added by nishi: 23-Jul-2020:Start: for ossia student select instrument and teacher Id-->
                                        
                                        <div class="slds-grid slds-gutters">
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class ="slds-form-element__label hyphens-none-fix" for="durationLabel"><b>Duration:</b></label> 
                                            </div>
                                            <div class="slds-col slds-size_4-of-12" style="padding-top:14px;">
                                                <div class="slds-form-element__control" style="padding-left:10px;">
                                                    <label id="durationLabel"></label>
                                                </div>     
                                            </div>
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label hyphens-none-fix" for="packageSelect"><b>Package:</b></label> 
                                            </div>
                                            <div class="slds-col slds-size_6-of-12" style="padding-top:10px;">
                                                <div class="slds-form-element__control" style="padding-left:9px;">
                                                    <div class="slds-combobox_container">
                                                        <div class="slds-combobox slds-dropdown-trigger slds-dropdown-trigger_click" id="getPackageId" aria-expanded="true" aria-haspopup="listbox" role="combobox">
                                                            <div class="slds-combobox__form-element slds-input-has-icon slds-input-has-icon_right" role="none">
                                                                <input type="text" class="slds-input slds-combobox__input slds-has-focus" id="packageSelect" aria-controls="listbox-id-3" autoComplete="off" role="textbox" placeholder="Select Package" readonly="true" />
                                                                <span class="slds-icon_container slds-icon-utility-down slds-input__icon slds-input__icon_right">
                                                                    <svg class="slds-icon slds-icon slds-icon_x-small slds-icon-text-default" aria-hidden="true">
                                                                        <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#down')}"></use>
                                                                    </svg>
                                                                </span>
                                                            </div>
                                                            <div id="selectPackageListSection" class="slds-dropdown slds-dropdown_fluid slds-dropdown_length-5" role="listbox">
                                                                
                                                            </div>
                                                        </div>
                                                    </div> 
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Added By Ravi 0n 13 july 2020-->
                                        <div class="slds-grid slds-gutters">
                                            <!-- start : nishi 30-Jul-2020 : for manage  resource user can select new resource if lesson type In center then this resource selection is required--> 
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class ="slds-form-element__label hyphens-none-fix" for="ResourceLabel"><b>Studio:</b></label>
                                            </div>
                                            <div class="slds-col slds-size_4-of-12" style="padding-top:14px;">
                                                <div class="slds-form-element__control" style="padding-left:10px;">
                                                    <select class="slds-select" id="selectResourceListSection" style="width: auto;" onchange="changeResource();return false;">
                                                                    
                                                    </select>
                                                    <label class="" id="resourceErrorMsg" style="color:red;"></label>
                                                </div>     
                                            </div>
                                            <!-- end : nishi 30-Jul-2020 : for manage  resource user can select new resource if lesson type In center then this resource selection is required-->
                                            <div class="slds-col slds-size_1-of-12" style="padding-top:10px;">
                                                <label class="slds-form-element__label hyphens-none-fix" for="LessonSelect"><b>Lesson Type:</b></label> 
                                            </div>
                                            <div class="slds-col slds-size_6-of-12" style="padding-top:10px;">
                                                <div class="slds-form-element__control" style="padding-left:9px;">
                                                    <div class="slds-combobox_container"> 
                                                                <select class="slds-select" id="selectLessonListSection" style="width: auto;" onchange="changeResource();return false;">
                                                                    
                                                                </select>
                                                    </div> 
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Added By Ravi on 13 july 2020 -->
                                        
                                      
                                        
                                        <div class="slds-grid slds-gutters">
                                            <div class="slds-col slds-size_1-of-1" style="padding-top:10px;">
                                                <div class="slds-form__row slds-hide" id="recurringSection">
                                                    <div class="slds-form__item" role="listitem" style="padding-left: 5px;">
                                                        <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                                            <table class="slds-table slds-no-row-hover recurrence ">
                                                                <tr>
                                                                    <th>Repeat</th>
                                                                    <td>
                                                                        <select class="slds-select" id="repeatSelect" onchange="repeatSelectFunc($(this).val());return false;">
                                                                            <option value="">None</option>
                                                                            <option value="Weeks">Weekly</option>
                                                                        </select>
                                                                    </td>
                                                                </tr>
                                                                <tr class="repeatSelection slds-hide">
                                                                    <th>Repeat Every</th>
                                                                    <td>
                                                                        <select class="slds-select" id="repeatWeek">
                                                                            
                                                                        </select>
                                                                        <span id="repeatValue">Week</span>
                                                                    </td>
                                                                </tr>
                                                                <tr class="repeatSelection slds-hide">
                                                                    <th>Ends</th>
                                                                    <td>
                                                                        <p>
                                                                            <span>
                                                                                <input name="radio" type="radio" id="afterRadio" checked="true"/>
                                                                            </span>&nbsp;&nbsp; After
                                                                            <select class="slds-select" id="recurrenceOccure">
                                                                                
                                                                            </select>&nbsp;&nbsp;
                                                                            <span>occurrencess</span>
                                                                        </p>
                                                                        <p class="slds-m-top_xxx-small">
                                                                            <span>
                                                                                <input name="radio" type="radio" id="onRadio"/>
                                                                            </span>&nbsp;&nbsp; on 
                                                                            <input class="slds-input" type="text" placeholder="Pick a Date" label="Date Picker Label" id="onSelectedDate"/>
                                                                        </p>
                                                                        
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </div>
                                                    <div class="slds-form__item" role="listitem"> 
                                                        
                                                    </div>
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>   
                            <footer class="slds-modal__footer">
                                <button class="slds-button slds-button_neutral" onclick="$('#newBookingDetails').addClass('slds-hide');refreshNewBookingPopup(); return false;">No</button>
                                <button class="slds-button slds-button_brand" id="saveNewBooking" onclick="createBooking();return false;">Save</button>
                            </footer>  
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                
                 <!-- Added By Ravi on 8 july 2020 for confirmation poup -->
                 <div class="changeLesson slds-hide" id="confirmModalLessonChange">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container" style="width: 35%;">
                            <header class="slds-modal__header" style="background: #303a42; color: white;">
                                <h2 id="confirmModalLessonHeader" class="slds-text-heading_medium slds-hyphenate"> Change Lesson Mode</h2>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium slds-grid slds-wrap">
                                <div id="confirmModalLessonBody" class="slds-col slds-size_12-of-12">
                                </div> 
                                <!-- start: added by nishi: 5-Aug:2020: for change all future Lesson Mode and update Online Url PassCode -->
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-align_absolute-center slds-wrap slds-hide" id="showChangeLesson">
                                    <a href="javascript:void(0);" class="slds-button slds-m-around_small slds-p-horizontal_large" 
                                    style="background: #00b3f0;color: #fff;" id="updateOnlineLesson" onclick="updateOnlineLesson('false'); return false;">
                                            This
                                    </a>
                                    <a href="javascript:void(0);" class="slds-button slds-m-around_small slds-p-horizontal_large" 
                                    style="background: #00b3f0;color: #fff;" id="updateFutureOnlineLesson" onclick="updateOnlineLesson('true'); return false;">
                                        This And Future
                                    </a>
                                </div>
                                <!-- start: added by nishi: 5-Aug:2020: for change all future Lesson Mode and update Online Url PassCode -->
                                
                                <!-- start:added by nishi: 30-Jul-2020: for change Resouce current enrolment -->
                                <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap slds-hide" id="showResources">
                                    <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                        <span><b>Change Studio:</b></span>
                                    </div>
                                    <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                        <span>
                                            <select class="slds-select" id="changeNewResources" style="width: auto;" onchange="selectchangeNewResources();return false;">
                                            </select>
                                        </span>
                                        <p id="changeNewResourcesError" class="slds-hide" style="color:red;">Please Select the Studio...</p>
                                    </div>
                                </div>
                                <!-- end:added by nishi: 30-Jul-2020: for change Resouce current enrolment -->
                            </div>
                            <footer class="slds-modal__footer">
                                <button class="slds-button slds-button_neutral revert" id="LessonModalNo" onclick="$('.changeLesson').addClass('slds-hide'); $('.editDetails').removeClass('slds-hide'); return false;">No</button>
                                <!-- start:added by nishi: 30-Jul-2020: for change Resouce current enrolment -->
                                <a href="javascript:void(0);" class="slds-button slds-button_brand slds-hide" id="updateResource" onclick="updateNewResource(); return false;">
                                        Yes
                                </a>
                                <!-- end:added by nishi: 30-Jul-2020: for change Resouce current enrolment -->
                            </footer>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
                <!--  End Added By Ravi on 8 july 2020 --> 


                <!-- Send Email -->
                <div class="sendEmail slds-hide">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_small">
                        <div class="slds-modal__container" style="width: 50%;">
                            <header class="slds-modal__header" style="background: #303a42; color: white;">
                                <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('.sendEmail').addClass('slds-hide'); return false;">
                                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </a>
                                <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">Send Email</h2>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                <c:sendemailcomp />
                            </div>
                            <footer class="slds-modal__footer">
                                <a href="javascript:void(0);" class="slds-button slds-button_neutral" id="sendEmailNo" onclick="$('.sendEmail').addClass('slds-hide'); return false;">Close</a>
                                <a href="javascript:void(0);" class="slds-button slds-button_brand" id="sendEmailYes" onclick="sendEmail(); $('.confirmModal').addClass('slds-hide'); $('.sendEmail').addClass('slds-hide'); return false">Send E-Mail</a> 
                            </footer>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
            </div>
            
            <!--case container message-->
            <div class="slds-notify_container slds-hide" id="caseContainerMessage">
                <div class="slds-notify slds-notify--alert slds-theme_alt-inverse" role="alert" style="justify-content: right;text-align: left; padding:0px;">
                    <button class="slds-button slds-notify__close slds-button--icon-inverse" id="caseContainerClose" title="Close" onclick="closeCaseContainer();return false;">
                        <svg aria-hidden="true" class="slds-button__icon">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </button>
                    <div class="slds-grid slds-wrap" style="flex-wrap: inherit;">
                        <div class="slds-col slds-size_12-of-12">
                            <span class="slds-form-element__label" style="color: #fff;"><b>Parent Name: </b></span>
                            <span>
                                <a href="#" id="caseParentName" target="_blank"></a>
                            </span>
                        </div>
                        <div class="slds-col slds-size_12-of-12">
                            <span class="slds-form-element__label" style="color: #fff;"><b>Case No: </b></span>
                            <span>
                                <a href="#" id="caseNo" target="_blank"></a>
                            </span>
                        </div>
                        <div class="slds-col slds-size_12-of-12">
                            <span class="slds-form-element__label" style="color: #fff;"><b>Type: </b></span>
                            <span id="caseType">
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <!--case container message end -->
            
            <!-- container message -->
            <div class="slds-notify_container slds-hide" id="containerMessage">
                <div class="slds-notify slds-notify--alert slds-theme_alt-inverse" style="padding:0px;" role="alert">
                    <button class="slds-button slds-notify__close slds-button--icon-inverse" id="rescheduleClose" title="Close" onclick="closeContainerMessage();">
                        <svg aria-hidden="true" class="slds-button__icon">
                            <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                        </svg>
                        <span class="slds-assistive-text">Close</span>
                    </button>
                    <span class="slds-assistive-text">Info</span>
                    <h2>Select Time To Reschedule Appointment</h2>
                </div>
            </div>
            <!-- container message end -->
            <div class="slds-hide" id="newAdhocDetailPopup">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="newAdhocDetailHeader" class="slds-text-heading_medium slds-hyphenate">New Appointment Detail</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#newAdhocDetailPopup').addClass('slds-hide');refreshNewBookingPopup(); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="newAdhocDetailBody">
                            <div class="slds-form__row">
                                <div class="slds-form__item" role="listitem">
                                    <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                        <label class="slds-form-element__label" for="studentNameadhoc"><b>Student Name:</b></label>  
                                        <div class="slds-form-element__control">
                                            <label class="slds-form- element__label" id="studentNameadhoc"></label>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__item" role="listitem">
                                    <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                        <label class="slds-form-element__label" for="centerNameadhoc"><b>Center Name:</b></label> 
                                        <div class="slds-form-element__control">
                                            <label class="slds-form- element__label" id="centerNameadhoc"></label>                                                   
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="slds-form__row">
                                <div class="slds-form__item" role="listitem">
                                    <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                        <label class="slds-form-element__label" for="teacherNameAdhoc"><b>Teacher Name:</b></label>  
                                        <div class="slds-form-element__control">
                                            <label class="slds-form- element__label" id="teacherNameAdhoc"></label>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__item" role="listitem">
                                    <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                        <label class="slds-form-element__label" for="packageDurationadhoc"><b>Package Duration:</b></label> 
                                        <div class="slds-form-element__control">
                                            <label class="slds-form- element__label" id="packageDurationadhoc"></label>                                                   
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Added By Ravi on 14 july 2020 -->
                            <div class="slds-form__row">
                                <div class="slds-form__item" role="listitem">
                                    <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                        <label class="slds-form-element__label" for="LessonModeAdhoc"><b>Lesson Mode:</b></label>  
                                        <div class="slds-form-element__control"><!-- style="padding-left: 138px !important;"-->
                                            <label class="slds-form- element__label" id="LessonModeAdhoc"></label>
                                        </div>
                                    </div>
                                </div>
                                <!-- added by nishi: 1-aug-2020:start: Summary should have studio field too-->
                                <div class="slds-form__item" role="listitem">
                                    <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                        <label class="slds-form-element__label" for="adhocResourceNew"><b>Studio:</b></label>  
                                        <div class="slds-form-element__control"><!-- style="padding-left: 138px !important;"-->
                                            <label class="slds-form- element__label" id="adhocResourceNew"></label>
                                        </div>
                                    </div>
                                </div>
                                 <!-- added by nishi: 1-aug-2020:start: Summary should have studio field too-->
                            </div>
                            <!-- Added By Ravi on 14 july 2020 -->
                            <div class="slds-p-around_medium">
                                <table class="slds-table slds-table_cell-buffer slds-table_bordered">
                                    <thead>
                                        <tr class="slds-line-height_reset">
                                            <th class="" scope="col">
                                                <div class="slds-truncate" title="Sr.No">Sr No</div>
                                            </th>
                                            <th class="" scope="col">
                                                <div class="slds-truncate" title="Package Name">Package Name</div>
                                            </th>
                                            <th class="" scope="col">
                                                <div class="slds-truncate" title="Package Time">Booking Time</div>
                                            </th>
                                            <th class="" scope="col">
                                                <div class="slds-truncate" title="Package Unit Price">Package Unit Price</div>
                                            </th>
                                            
                                        </tr>
                                    </thead>
                                    <tbody id="countOfBookingTableBody">
                                        
                                        
                                    </tbody>
                                </table>
                                
                                
                            </div>
                            
                            
                        </div>   
                        <footer class="slds-modal__footer">
                            <a href="javascript:void(0);" class="slds-button slds-button_brand" id="createAdhocBookingBtn" onclick="createAdhocBookings();return false;">Create booking and generate invoice</a>
                        </footer>  
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            
            <!--Advance Option Button Click Popup-->
            <div class="slds-hide" id="advanceOptionPopup">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width: 60%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="advanceOptionPopupHeader" class="slds-text-heading_medium slds-hyphenate">Advance Options</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#advanceOptionPopup').addClass('slds-hide');refreshAdvancePopup(); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="advanceOptionPopupBody">
                            <div class="slds-col slds-size_1-of-1">
                                <div class="slds-grid slds-gutters">
                                    <div class="slds-col slds-size_1-of-2">
                                        <span class="slds-form-element__label slds-text-align_right"><b>Package Name: </b></span>
                                        <span id="packageNameAdvance"></span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2">
                                        <span class="slds-form-element__label slds-text-align_right"><b>Subscription Start Date: </b></span>
                                        <span id="subscriptionDateAdvance"></span>
                                    </div>
                                </div>
                                <div class="slds-grid slds-gutters">
                                    <div class="slds-col slds-size_1-of-2">
                                        <span class="slds-form-element__label slds-text-align_right"><b>Frequency: </b></span>
                                        <span id="frequencyAdvance"></span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2">
                                        <span class="slds-form-element__label slds-text-align_right"><b>Timeslot: </b></span>
                                        <span id="timeslotAdvance"></span>
                                    </div>
                                </div>
                                
                            </div>
                            <div class="slds-col slds-size_1-of-1 slds-p-around_medium">
                                <div class="slds-button-group slds-grid" role="group">
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width" title="Withdrawal" aria-pressed="false" id="cancelSubscriptionBtn" onclick="cancelSubscription();return false;">Withdrawal
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Withdrawal</span>
                                    </button>
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width" title="Advancement" aria-pressed="false" id="upgradeSubscriptionBtn" onclick="upgradeSubscription();return false;">Advancement
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#arrowup')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Advancement</span>
                                    </button>
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width" title="Downgrade" aria-pressed="false" id="downgradeSubscriptionBtn" onclick="downgradeSubscription();return false;">Downgrade
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Downgrade</span>
                                    </button>
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width" title="Change Enrolment" aria-pressed="false" id="updateEnrolmentBtn" onclick="updateEnrolment();return false;">Change Enrolment
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#edit')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Change Enrolment</span>
                                    </button>
                                    <!-- //@Nishi on 27-Aug-2019 to check An advance invoice is generated Change Or Package_Process_Status__c is Pending
                                    // then we disable Change Centre Button This button should be accessible to only a limited users. -->
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width" title="Change Centre" aria-pressed="false" id="updateCentreEnrolmentBtn" onclick="changeOssiaEnrolment('UpdateEnrolmentCenter');return false;">Change Centre
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#edit')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Change Centre</span>
                                    </button>
                                    <!-- //@Nishi on 27-Aug-2019 to check An advance invoice is generated Change Or Package_Process_Status__c is Pending
                                    // then we disable Change Centre Button This button should be accessible to only a limited users.-->
                                    <!-- 9-Dec-2019 : @@jatin  :for Change Enrollement Enhancement This button should be accessible to only a limited users. -->
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width slds-hide" style="background-color:lightgrey;" title="Change Enrolment Admin" aria-pressed="false" id="updateEnrolmentAdminBtn" onclick="updateEnrolmentAdmin();return false;">Change Enrolment Admin
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#edit')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Change Enrolment Admin</span>
                                    </button>
                                    <!-- 19-Dec-2019 : @@jatin  :for group lesson booking Upgrade group class to individual class   -->
                                    <!--3-jan-2020 : commented by jatin for change requirement Now we work on change enrollment according
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width slds-hide"  title="Upgrade to Individual Class " aria-pressed="false" id="upgradeEnrolmentGroupToIndividualBtn" onclick="upgradeEnrolmentGroupToIndividual();return false;">Upgrade to Individual Class  
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#arrowup')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Upgrade to Individual Class</span>
                                    </button>-->
                                    <!--3-jan-2020 : start  For add Upgrade enrollment buttons in Group class  -->    
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width slds-hide"  title="Upgrade to Group Package " aria-pressed="false" id="upgradeEnrolmentGroupToHigherPackageBtn" onclick="upgradeEnrolmentGroupUpgrade('GroupToHigherPackage');return false;">Upgrade to Group Package  
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#arrowup')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Upgrade to Group Package  </span>
                                    </button>
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width slds-hide"  title="Upgrade to Individual Class " aria-pressed="false" id="upgradeEnrolmentGroupToIndividualBtn" onclick="upgradeEnrolmentGroupUpgrade('GroupToIndividual');return false;">Upgrade to Individual Package  
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#arrowup')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Upgrade to Individual Package</span>
                                    </button>
                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width slds-hide"  title="Change Class " aria-pressed="false" id="upgradeEnrolmentGroupToSameClassBtn" onclick="upgradeEnrolmentGroupUpgrade('GroupToSameClass');return false;">Change Class  
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#edit')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Change Class</span>
                                    </button>
                                    <!--3-jan-2020 : END:  For add Upgrade enrollment buttons in Group class  --> 

                                    <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow slds-button-group-width" title="Pre Payment" aria-pressed="false" onclick="showPrePaymentModal();return false;" id="prePaymentId">Pre Payment
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#moneybag')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Pre Payment</span>
                                    </button>
                                </div>
                            </div>
                        </div>  
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            
            <!--Upgrade Subscriptions-->
            <div class="slds-hide" id="gradeSubscriptionPopup">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width: 30%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="gradeSubscriptionPopupHeader" class="slds-text-heading_medium slds-hyphenate"><b>Upgrade Subscription</b></h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#gradeSubscriptionPopup').addClass('slds-hide'); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="gradeSubscriptionPopupBody">
                            <div class="slds-grid slds-wrap">
                                <div class="slds-col slds-size_6-of-12">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Current Package: </b></span>
                                    <span id="currentPackageName"></span>
                                </div>
                                
                                <div class="slds-col slds-size_6-of-12">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Requested Package: </b></span>
                                    <span>
                                        <select class="slds-select" id="selectRequestedPackage" style="width: 177px;" onchange="availTimeSlots('upgrade');return false;">
                                        </select>
                                    </span>
                                    <label style="color:red;padding-left: 122px;" id="upgradePackageSelectError"></label>
                                </div>
                                <div class="slds-col slds-size_6-of-12">
                                    <div class="slds-grid slds-gutters">
                                        <div class="slds-col slds-size_4-of-12" style="padding-right: 0px;">
                                            <span class="slds-form-element__label slds-text-align_right"><b>Effective Date: </b></span>
                                        </div>
                                        <div class="slds-col slds-size_8-of-12" style="margin-left: -15px;">
                                            <span><!--<input class="slds-input" type="text" placeholder="Pick a Date" label="Date Picker Label" id="effectiveDateInput" onchange="availTimeSlots('upgrade');return false;"/>-->
                                                <select class="slds-select" id="effectiveDateInput" style="width: auto;" onchange="availTimeSlots('upgrade');return false;">
                                                </select>
                                            </span>
                                            <label style="color:red;padding-left: 3px;" id="effectiveDateError"></label>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-col slds-size_6-of-12">
                                    <div class="slds-grid slds-gutters">
                                        <div class="slds-col slds-size_4-of-12" style="padding-right: 0px;">
                                            <span class="slds-form-element__label slds-text-align_right"><b>Available Slots: </b></span>
                                        </div>
                                        <div class="slds-col slds-size_8-of-12">
                                            <select class="slds-select" id="availableTimeSlots" style="width: auto;" disabled="true">
                                                <option>Select Time Slot</option>  
                                            </select>
                                            <label style="color:red;padding-left: 3px;" id="availableTimeSlotsError"></label>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-col slds-size_4-of-12">
                                    <!--<button class="slds-button button-shadow" title="Summary Request" onclick="upgradeSummary('upgrade');return false;" aria-pressed="false">Summary
<svg class="slds-button__icon" aria-hidden="true">
<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#summary')}" />
</svg>
<span class="slds-assistive-text">Summary</span>
</button>-->
                                </div>
                               
                            </div>
                        </div>
                        <footer class="slds-modal__footer">
                            <button class="slds-button button-shadow slds-button_neutral" title="Cancel" aria-pressed="false" id="cancelUpgradeRequest" onclick="$('#gradeSubscriptionPopup').addClass('slds-hide'); return false;">Cancel
                                <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                </svg>
                                <span class="slds-assistive-text">Cancel</span>
                            </button>
                            <button class="slds-button button-shadow slds-button_brand" title="Next" aria-pressed="false" id="submitUpgradeRequest" onclick="showUpgradeDowngradeSummary('upgrade');return false;">Next
                                    <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                    </svg>
                                    <span class="slds-assistive-text">Next</span>
                                </button>
                        </footer>
                        
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            
            <!--Cancel subscription Modal-->
            <div class="slds-hide" id="canelSubscriptionPopup">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width: 30%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="canelSubscriptionPopupHeader" class="slds-text-heading_medium slds-hyphenate"><b>Cancel Subscription</b></h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#canelSubscriptionPopup').addClass('slds-hide'); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="canelSubscriptionPopupBody">
                            <div class="slds-grid slds-wrap">
                                <!--Row 1 -->
                                <!--<div class="slds-col slds-size_3-of-12 slds-p-vertical_x-small">
</div>
<div class="slds-col slds-size_5-of-12 slds-p-vertical_x-small">
<span class="slds-radio">
<input type="radio" id="cancelByRequestDate" name="cancelByOptions" onchange="cancelBy();return false;"/>
<label class="slds-radio__label" for="cancelByRequestDate">
<span class="slds-radio_faux"></span>
<span class="slds-form-element__label">By Cancellation Request Date</span>
</label>
</span>
</div>
<div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
<span class="slds-radio">
<input type="radio" id="cancelByLessonEndDate" name="cancelByOptions" onchange="cancelBy();return false;"/>
<label class="slds-radio__label" for="cancelByLessonEndDate">
<span class="slds-radio_faux"></span>
<span class="slds-form-element__label">By Lesson End Date</span>
</label>
</span>
</div>-->
                                <!--Row 2 -->
                                <div class="slds-col slds-size_1-of-12 slds-p-vertical_x-small">
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Notice Period End Date</b></span>
                                    <span>
                                        <input class="slds-input" id="cancelRequestEndDate" style="width:130px;" onchange="getCancelRequestDateFunc();return false;"/>
                                    </span>
                                </div>
                                <div class="slds-col slds-size_5-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Last Lesson Date</b></span>
                                    <span>
                                        <span id="lastLessonDate"></span>
                                        <!--<input class="slds-input" id="lastLessonDate" style="width:130px;" onchange="getLastLessonDateFunc();return false;"/>-->
                                    </span>
                                </div>
                                <!--Row 3 -->
                                <!--<div class="slds-col slds-size_2-of-12 slds-p-vertical_x-small">
</div>
<div class="slds-col slds-size_5-of-12 slds-p-vertical_x-small">
<span class="slds-form-element__label slds-text-align_right"><b>Notice Period Start: </b></span>
<span id="noticePeriodStart"></span>
</div>
<div class="slds-col slds-size_5-of-12 slds-p-vertical_x-small">
<span class="slds-form-element__label slds-text-align_right"><b>Notice Period End: </b></span>
<span id="noticePeriodEnd"></span>
</div>-->
                                <!--Row 4-->
                                <div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
                                    <!--<button class="slds-button button-shadow" title="Summary Request" onclick="withdrawSummary();return false;" aria-pressed="false">Summary
<svg class="slds-button__icon" aria-hidden="true">
<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#summary')}" />
</svg>
<span class="slds-assistive-text">Summary</span>
</button>-->
                                </div>
                                <!--<div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
                                    <button class="slds-button button-shadow" title="Confirm Withdrawal" aria-pressed="false" id="submitCancelRequest" onclick="getWithdrawSummary();return false;">Next
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Next</span>
                                    </button>
                                </div>
                                <div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
                                    <button class="slds-button button-shadow" title="Cancel" aria-pressed="false" id="cancelUpgradeRequest" onclick="$('#canelSubscriptionPopup').addClass('slds-hide');return false;">Cancel
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Cancel</span>
                                    </button>
                                </div>-->
                            </div>
                            
                        </div>

                        <footer class="slds-modal__footer">
                            <button class="slds-button button-shadow slds-button_neutral" title="Cancel" aria-pressed="false" id="cancelUpgradeRequest" onclick="$('#canelSubscriptionPopup').addClass('slds-hide');return false;">Cancel
                                <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                </svg>
                                <span class="slds-assistive-text">Cancel</span>
                            </button>
                            <button class="slds-button button-shadow slds-button_brand" title="Confirm Withdrawal" aria-pressed="false" id="submitCancelRequest" onclick="getWithdrawSummary();return false;">Next
                                <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                </svg>
                                <span class="slds-assistive-text">Next</span>
                            </button>
                        </footer>

                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            <!-- Cancel subscription popup closed -->
            <!-- Summary for withdrawl popup start-->
            <div class="slds-hide" id="summaryPopForAdvanceAction">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width: 30%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="summaryPopForAdvanceActionHeader" class="slds-text-heading_medium slds-hyphenate"><b>Summary</b></h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#summaryPopForAdvanceAction').addClass('slds-hide');$('#canelSubscriptionPopup').removeClass('slds-hide'); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="summaryPopForAdvanceActionBody">
                            <div class="slds-grid slds-wrap">
                                <!--Row 1 -->
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Request Date: </b></span>
                                    <span id="summaryRequestDate"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Last Lesson Date: </b></span>
                                    <span id="summaryLastLessonDate"></span>
                                </div>
                                <!--Row 2 -->
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Notice Period Start Date: </b></span>
                                    <span id="summaryNoticeStartDate"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Notice Period End Date: </b></span>
                                    <span id="summaryNoticeEndDate"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Lesson To Be Adjusted Against Deposit Fee: </b></span>
                                    <span id="summaryNoOfLessonFromDeposit"></span>
                                </div>
                                <!--Row 3 -->
                                <!--Row 4-->
                            </div>
                        </div>
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            
            <!-- Summary for withdrawl popup end-->
            
            <!-- Summary for downgrade/upgrade popup start-->
            <div class="slds-hide" id="summaryPopForUpDown">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width: 30%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="summaryPopForUpDownHeader" class="slds-text-heading_medium slds-hyphenate"><b>Summary</b></h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" id="updownsummaryclose" title="Close" onclick="closeUpDownSummary();return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="summaryPopForUpDownBody">
                            <div class="slds-grid slds-wrap slds-hide" id="downgradeDetailsSection">
                                <!--row1-->
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Request Date: </b></span>
                                    <span id="summaryRequestDate1"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Effective Date: </b></span>
                                    <span id="summaryEffectiveLessonDate"></span>
                                </div>
                                <!--Row 2 -->
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Notice Period Start Date: </b></span>
                                    <span id="summaryNoticeStartDate1"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Notice Period End Date: </b></span>
                                    <span id="summaryNoticeEndDate1"></span>
                                </div>
                            </div>
                            <div class="slds-grid slds-wrap">
                                
                                <!--Row 3 -->
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Old Pakcage </b></span>
                                    <span id="oldPackageName"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>New Package</b></span>
                                    <span id="newPackageName"></span>
                                </div>
                                <!--Row 4-->
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>No Of Lesson With Old Package: </b></span>
                                    <span id="lessonWithOldPackage"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>No Of Lesson With new Package:</b></span>
                                    <span id="lessonWithNewPackage"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            <!-- Summary for downgrade/upgrade popup end-->
            
            <!--Busy Time Creation Modal-->
            <div class="slds-hide" id="busyBookingCreateModal">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                    <div class="slds-modal__container" style="padding:10px;"> <!-- width: 35%;-->
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="busyBookingCreateModalHeader" class="slds-text-heading_medium slds-hyphenate">Busy Booking</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#busyBookingCreateModal').addClass('slds-hide'); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a> 
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="busyBookingCreateModalBody">
                            <div class="slds-grid slds-wrap">
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Location</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:10px;">
                                    <span><label id="centerNameBusyCreate">Aureus Northpoint</label></span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Time</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:10px;">
                                    <span><label id="timeSlotBusyCreate">Mon, 18 March 2019 at 10:00 AM</label></span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:5px;">
                                    <span><b id="staffResourceBusyCreate">Staff</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                    <span><label id="staffBusyCreate"></label></span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Duration</b></span>
                                </div>
                                
                                <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                    <span>
                                        <select class="slds-select" id="durationSelectBusyCreate" style="width: auto;" onchange="$('#durationSelectBusyCreateError').addClass('slds-hide');">
                                            
                                        </select>
                                        <div id="durationSelectBusyCreateError" class="slds-hide" style="color:red;">
                                            Busy Booking cannot be created beyond {!$Label.Centre_Close_Time}!
                                        </div>
                                    </span>
                                </div>
                                
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Category</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                    <span>
                                        <select class="slds-select" id="categorySelectBusyCreate" style="width: auto;">
                                            
                                        </select>
                                    </span>
                                    <p id="categorySelectBusyCreateError" style="color:red;"></p>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Description</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                    <textarea type="text" id="descriptionBusyCreate" placeholder="Enter Description" class="slds-textarea" />
                                    <p id="descriptionErrorBusyCreate" style="color:red;"></p>
                                </div>
                            </div>
                            
                            <div class="slds-grid slds-gutters">
                                <div class="slds-col slds-size_1-of-1" style="padding-top:10px;">
                                    <div class="slds-form__row" style="padding-left:20px;padding-top:5px;">
                                        <div class="slds-form__item" role="listitem" style="padding-left: 5px;">
                                            <div class="slds-form-element slds-form-element_horizontal slds-is-editing">
                                                <table class="slds-table slds-no-row-hover recurrence ">
                                                    <tr>
                                                        <th>Repeat</th>
                                                        <td>
                                                            <select class="slds-select" id="repeatSelectBusy" onchange="repeatSelectFunc($(this).val());return false;">
                                                                <option value="">None</option>
                                                                <option value="Weeks">Weekly</option>
                                                            </select>
                                                        </td>
                                                    </tr>
                                                    <tr class="repeatSelection slds-hide">
                                                        <th>Repeat Every</th>
                                                        <td>
                                                            <select class="slds-select" id="repeatWeekBusy">
                                                                
                                                            </select>
                                                            <span id="repeatValue">Week</span>
                                                        </td>
                                                    </tr>
                                                    <tr class="repeatSelection slds-hide">
                                                        <th>Ends</th>
                                                        <td>
                                                            <p>
                                                                <span>
                                                                    <input name="radio" type="radio" id="afterRadioBusy" checked="true"/>
                                                                </span>&nbsp;&nbsp; After
                                                                <select class="slds-select" id="recurrenceOccureBusy">
                                                                    
                                                                </select>&nbsp;&nbsp;
                                                                <span>occurrencess</span>
                                                            </p>
                                                            <p class="slds-m-top_xxx-small">
                                                                <span>
                                                                    <input name="radio" type="radio" id="onRadioBusy"/>
                                                                </span>&nbsp;&nbsp; on 
                                                                <input class="slds-input" type="text" placeholder="Pick a Date" label="Date Picker Label" id="onSelectedDateBusy"/>
                                                            </p>
                                                            
                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="slds-form__item" role="listitem"> 
                                            
                                        </div>
                                    </div>
                                    
                                </div>
                            </div>
                        </div>
                        <footer class="slds-modal__footer">
                            <div class="slds-button-group slds-grid" role="group">
                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Cancel" aria-pressed="false" id="cancelBusyBookingCreate" onclick="$('#busyBookingCreateModal').addClass('slds-hide'); return false;">Cancel&nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                    </svg>
                                    <span class="slds-assistive-text">Cancel</span>
                                </button>
                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Save" aria-pressed="false" id="saveBusyBookingCreate" onclick="saveBusyBookingFunc();return false;">Save&nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#save')}" />
                                    </svg>
                                    <span class="slds-assistive-text">Save</span>
                                </button>
                            </div>
                            
                        </footer> 
                    </div> 
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            <!--Downgrade Subscriptions-->
            <div class="slds-hide" id="downgradePopup">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width: 30%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="downgradePopupHeader" class="slds-text-heading_medium slds-hyphenate"><b>Downgrade Subscription</b></h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#downgradePopup').addClass('slds-hide'); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="downgradeSubscriptionPopupBody">
                            <div class="slds-grid slds-wrap">
                                <div class="slds-col slds-size_6-of-12">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Current Package: </b></span>
                                    <span id="currentPackageNameDowngrade"></span>
                                </div>
                                <div class="slds-col slds-size_6-of-12">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Requested Package: </b></span>
                                    <span>
                                        <select class="slds-select" id="selectRequestedPackageDowngrade" style="width: 177px;" onchange="availTimeSlots('downgrade');return false;">
                                        </select>
                                    </span>
                                    <label style="color:red;padding-left: 122px;" id="downgradePackageSelectError"></label>
                                </div>
                                <div class="slds-col slds-size_6-of-12">
                                    <div class="slds-grid slds-gutters">
                                        <div class="slds-col slds-size_4-of-12" style="padding-right: 0px;">
                                            <span class="slds-form-element__label slds-text-align_right"><b>Effective Date: </b></span>
                                        </div>
                                        <div class="slds-col slds-size_8-of-12" style="margin-left: -15px;">
                                            <span><!--<input class="slds-input" type="text" placeholder="Pick a Date" label="Date Picker Label" id="effectiveDateInputDowngrade" onchange="availTimeSlots('downgrade');return false;"/>-->
                                                <select class="slds-select" id="effectiveDateInputDowngrade" style="width: 177px;" onchange="availTimeSlots('downgrade');return false;">
                                                </select>
                                            </span>
                                            <label style="color:red;padding-left: 3px;" id="effectiveDateErrorDowngrade"></label>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-col slds-size_6-of-12">
                                    <div class="slds-grid slds-gutters">
                                        <div class="slds-col slds-size_4-of-12" style="padding-right: 0px;">
                                            <span class="slds-form-element__label slds-text-align_right"><b>Available Slots: </b></span>
                                        </div>
                                        <div class="slds-col slds-size_8-of-12">
                                            <select class="slds-select" disabled="disabled" id="availableTimeSlotsDowngrade" style="width: auto;"><option>Select Time Slot</option></select><br/>
                                            <label id="availableTimeSlotsDowngradeError" style="color:red;padding-left: 3px;"></label>
                                        </div>
                                    </div>
                                </div>
                                <!--Row 3 
<div class="slds-col slds-size_6-of-12 slds-p-bottom_x-small">
<span class="slds-form-element__label slds-text-align_right"><b>Notice Period Start: </b></span>
<span id="noticePeriodDowngradeStart"></span>
</div>
<div class="slds-col slds-size_6-of-12 slds-p-bottom_x-small">
<span class="slds-form-element__label slds-text-align_right"><b>Notice Period End: </b></span>
<span id="noticePeriodDowngradeEnd"></span>
</div>-->
                                <div class="slds-col slds-size_4-of-12">
                                    <!--<button class="slds-button button-shadow" title="Summary Request" onclick="upgradeSummary('downgrade');return false;" aria-pressed="false">Summary
<svg class="slds-button__icon" aria-hidden="true">
<use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#summary')}" />
</svg>
<span class="slds-assistive-text">Summary</span>
</button>-->
                                </div>
                                <!--<div class="slds-col slds-size_4-of-12">
                                    <button class="slds-button button-shadow"  title="Next" aria-pressed="false" id="submitDowngradeRequest" onclick="showUpgradeDowngradeSummary('downgrade');return false;">Next
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Next</span>
                                    </button>
                                    
                                </div>
                                <div class="slds-col slds-size_4-of-12">
                                    <button class="slds-button button-shadow" title="Cancel" aria-pressed="false" onclick="$('#downgradePopup').addClass('slds-hide');return false;">Cancel
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Cancel</span>
                                    </button>
                                </div>-->
                            </div>
                        </div>
                        <footer class="slds-modal__footer">
                            <button class="slds-button button-shadow slds-button_neutral" title="Cancel" aria-pressed="false" onclick="$('#downgradePopup').addClass('slds-hide');return false;">Cancel
                                <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                </svg>
                                <span class="slds-assistive-text">Cancel</span>
                            </button>
                            <button class="slds-button button-shadow slds-button_brand"  title="Next" aria-pressed="false" id="submitDowngradeRequest" onclick="showUpgradeDowngradeSummary('downgrade');return false;">Next
                                    <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                </svg>
                                <span class="slds-assistive-text">Next</span>
                            </button>
                        </footer>
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            <!--Busy Bookings View-->
            <div class="slds-hide" id="busyBookingViewModal">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                    <div class="slds-modal__container" style="width: 50%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="busyBookingViewModalHeader" class="slds-text-heading_medium slds-hyphenate">Busy Booking</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#busyBookingViewModal').addClass('slds-hide'); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="busyBookingViewModalBody">
                            <div class="slds-grid slds-wrap">
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Location</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:10px;">
                                    <span><label id="centerNameBusyView"></label></span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Time</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:10px;">
                                    <span><label id="timeSlotBusyView"></label></span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Duration</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                    <span>
                                        <label id="durationBusyView"></label>
                                    </span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:5px;">
                                    <span><b id="staffResourceBusyView">Staff</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                    <span><label id="staffBusyView"></label></span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Category</b></span>
                                </div>
                                <div class="slds-col slds-size_9-of-12" style="padding-top:10px;">
                                    <span><label id="categoryBusyView"></label></span>
                                </div>
                                <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                    <span><b>Description</b></span>
                                </div>
                                
                                <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                    <textarea type="text" id="descriptionBusyView" placeholder="Busy Time Description" class="slds-textarea" readonly="true" style="cursor: default;"/>
                                </div>
                            </div>
                        </div>
                        <footer  id="busyBookingFooter" class="slds-modal__footer" >
                            <div class="slds-button-group slds-grid" role="group" id="busyBookingButtonGroup">
                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow addNewBookingFromBusy" aria-pressed="false" id="addNewBooking" onclick="newAppointmentPopup($(this).attr('data-centerid'), $(this).attr('data-teacherid'), $(this).attr('data-date'));return false;">Add Appointment&nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#event')}" />
                                    </svg>
                                    <span class="slds-assistive-text">Add Appointment</span>
                                </button>
                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow editBooking" title="Reschedule" aria-pressed="false" id="rescheduleBusyBookingView" onclick="$('#busyBookingViewModal').addClass('slds-hide'); return false;">Reschedule&nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#edit')}" />
                                    </svg>
                                    <span class="slds-assistive-text">Reschedule</span>
                                </button>
                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Edit Booking" aria-pressed="false" id="editBusyBookingView" onclick="editBusyBooking();return false;">Edit Booking&nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#edit')}" />
                                    </svg>
                                    <span class="slds-assistive-text">Edit Booking</span>
                                </button>
                                
                                <button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Cancel" aria-pressed="false" id="cancelBusyBookingView" onclick="cancelBusyAppointment();return false;">Cancel&nbsp;
                                    <svg class="slds-button__icon" aria-hidden="true">
                                        <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clear')}" />
                                    </svg>
                                    <span class="slds-assistive-text">Cancel</span>
                                </button>
                            </div>
                            
                        </footer> 
                    </div> 
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            <!--Enrolment Process Modal-->      
            <div class="slds-hide" id="enrolProcessModal">      
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">     
                    <div class="slds-modal__container" style="width: 30%;">     
                        <header class="slds-modal__header" style="background: #303a42; color: white;">      
                            <h2 id="        
                                    Header" class="slds-text-heading_medium slds-hyphenate">New Enrolment</h2>      
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#enrolProcessModal').addClass('slds-hide'); return false;">     
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">      
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>        
                                </svg>      
                                <span class="slds-assistive-text">Close</span>      
                            </a>        
                        </header>       
                        <div class="slds-modal__content slds-p-around_medium" id="enrolProcessModalBody">       
                            <div class="slds-col  slds-size_1-of-1 slds-grid slds-wrap">        
                                
                                <div class="slds-form-element slds-size_1-of-1 slds-medium-size_6-of-12 slds-p-horizontal_medium">      
                                    <div class="slds-form-element">     
                                        <label class="slds-form-element__label f-title">Center/Location <abbr class="slds-required" title="required">* </abbr></label>      
                                        <div class="slds-form-element__control">        
                                            <div class="slds-select_container">     
                                                <select class="slds-select" id="enrollNowCenterSelect" onchange="getAllTeachersAccordingToCenter('', $(this).val());return false;">     
                                                </select>       
                                            </div>      
                                            <div class="slds-form-element__help slds-hide errortxt" id="centerEnrolError">This field is required</div>      
                                        </div>      
                                    </div>      
                                </div>      
                                <div class="slds-form-element slds-size_1-of-1 slds-medium-size_6-of-12 slds-p-horizontal_medium">      
                                    <div class="slds-form-element">      
                                        <label class="slds-form-element__label f-title">Teacher <abbr class="slds-required" title="required">* </abbr></label>      
                                        <div class="slds-form-element__control">        
                                            <div class="slds-select_container">     
                                                <select class="slds-select" id="enrollNowTeacherSelect" onchange="getAllPlansAccordingToTeachers('', $('#enrollNowCenterSelect').val(), $(this).val());return false;">      
                                                </select>       
                                            </div>      
                                            <div class="slds-form-element__help slds-hide errortxt" id="teacherEnrolError">This field is required</div>     
                                        </div>      
                                    </div>      
                                </div>      
                                <div class="slds-form-element slds-size_1-of-1 slds-medium-size_6-of-12 slds-p-horizontal_medium">      
                                    <div class="slds-form-element">     
                                        <label class="slds-form-element__label f-title">Lesson Plan <abbr class="slds-required" title="required">* </abbr></label>      
                                        <div class="slds-form-element__control">        
                                            <div class="slds-select_container">     
                                                <select class="slds-select" id="enrollNowLessonSelect">      
                                                </select>       
                                            </div>      
                                            <div class="slds-form-element__help slds-hide errortxt" id="planEnrolError">This field is required</div>        
                                        </div>      
                                    </div>      
                                </div>          
                                
                            </div>      
                            <div class="custom-calendar slds-col slds-size_1-of-1 slds-grid slds-wrap">     
                                <label class="slds-form-element__label slds-size_1-of-1 field-title slds-p-horizontal_medium" for="form-element-help-01">Time Available</label>     
                                <div class="slds-form-element slds-dropdown-trigger slds-dropdown-trigger_click slds-is-open  slds-size_1-of-1 slds-medium-size_6-of-12 slds-p-horizontal_medium" id="enrollDatePickerSection">     
                                    <div id="datepicker" class=""></div>        
                                </div>      
                                
                                
                                <div class="slds-grid slds-wrap slds-p-horizontal_medium  slds-size_1-of-1 slds-medium-size_6-of-12">       
                                    <apex:outputPanel id="refreshSlotPanel" style="width:100%;">       
                                        <div class="calc slds-grid slds-wrap date-list">        
                                            <div class="slds-col slds-size_1-of-1 slds-medium-size_6-of-12">        
                                                <fieldset class="slds-form-element">        
                                                    <label class="slds-form-element__label field-title time-title" for="form-element-help-01">Morning</label>     
                                                    <div class="slds-form-element__control">      
                                                        <div class="time-list morning">     
                                                            <!--All Morning Slots-->       
                                                        </div>      
                                                    </div>        
                                                </fieldset>     
                                            </div>      
                                            <div class="slds-col slds-size_1-of-1 slds-medium-size_6-of-12">        
                                                <fieldset class="slds-form-element">        
                                                    
                                                    <div class="slds-form-element__control">      
                                                        <label class="slds-form-element__label field-title time-title" for="form-element-help-01">Afternoon</label>     
                                                        <div class="time-list afternoon">       
                                                            <!--All Afternoon Slots-->     
                                                        </div>      
                                                    </div>        
                                                </fieldset>     
                                            </div>      
                                            
                                        </div>      
                                        <div class="slds-form-element__help slds-hide errortxt" id="slotEnrolError">This field is required</div>        
                                    </apex:outputPanel>        
                                </div>     
                            </div>         
                        </div>       
                        <footer class="slds-modal__footer">      
                            <button class="slds-button slds-button_neutral" onclick="$('#enrolProcessModal').addClass('slds-hide');">Cancel</button>        
                            <button class="slds-button slds-button_brand" onclick="sendEnrolToIpad();return false;">Send to IPAD</button>       
                        </footer>     
                    </div>      
                </section>      
                <div class="slds-backdrop slds-backdrop_open"></div>        
            </div>
            <div class="slds-hide" id="withdrawEnrolSummaryModal">
                
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
                    <div class="slds-modal__container" style="width: 50%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="withdrawEnrolSummaryModalHeader" class="slds-text-heading_medium slds-hyphenate">Withdrawal Summary</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#withdrawEnrolSummaryModal').addClass('slds-hide'); return false;">     
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">      
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>        
                                </svg>      
                                <span class="slds-assistive-text">Close</span>      
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="withdrawEnrolSummaryModalBody">
                            <div class="slds-form-element">
                                <div style="font-size: 1.2em;">Enrolment Details</div>
                                <div class="slds-form__row">
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                            <label class="slds-form-element__label" for="stacked-form-element-id-01">Student Name</label>
                                            <div class="slds-form-element__control">
                                                <label id="withdrawSummaryStudentName"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                            <label class="slds-form-element__label" for="stacked-form-element-id-01">Package</label>
                                            <div class="slds-form-element__control">
                                                <label id="withdrawSummaryPackage"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__row">
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                            <label class="slds-form-element__label" for="stacked-form-element-id-01">Centre</label>
                                            <div class="slds-form-element__control">
                                                <label id="withdrawSummaryCentre"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                            <label class="slds-form-element__label" for="stacked-form-element-id-01">Lesson Day &amp; Time</label>
                                            <div class="slds-form-element__control">
                                                <label id="withdrawSummaryLessonDay"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr style="margin: 0px;"/>
                            <div class="slds-form-element" style="margin-top: 15px;">
                                <div style="font-size: 1.2em;">Withdrawal Summary</div>
                                <div class="slds-form__row">
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                            <label class="slds-form-element__label" for="stacked-form-element-id-01">Notice Date</label>
                                            <div class="slds-form-element__control">
                                                <label id="withdrawSummaryNoticeDate"></label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_stacked slds-is-editing">
                                            <label class="slds-form-element__label" for="stacked-form-element-id-01">Final Lesson Date</label>
                                            <div class="slds-form-element__control">
                                                <label id="withdrawSummaryFinalDate"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr style="margin: 0px;"/>
                            <div class="slds-form-element" style="margin-top: 15px;">
                                <div style="font-size: 1.2em;">Final 4 Lessons</div>
                                <div>
                                    <table id="finalLessonsTbl" class="slds-table slds-table_cell-buffer slds-table_bordered">
                                        <thead>
                                            <tr class="slds-line-height_reset">
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Lesson">Lesson</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Date">Date</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Time">Time</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Duration">Duration</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Status">Status</div>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="finalLessonsTblBody">
                                            
                                        </tbody>
                                    </table> 
                                </div>
                            </div>
                            <hr style="margin: 0px;"/>
                            <div class="slds-form-element" id="makeupSectionSummary" style="margin-top: 15px;">
                                <div style="font-size: 1.2em;">Make-Up Lessons</div>
                                <div>
                                    <table id="makeupLessonsTbl" class="slds-table slds-table_cell-buffer slds-table_bordered">
                                        <thead>
                                            <tr class="slds-line-height_reset">
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Student">Student</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Booking Date">Booking Date</div>
                                                </th>
                                                
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Duration">Duration</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Expiry Date">Expiry Date</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="New Expiry Date">New Expiry Date</div>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="makeupLessonsTblBody">
                                            
                                        </tbody>
                                    </table> 
                                </div>
                            </div>
                            <hr style="margin: 0px;"/>
                            
                            <div class="slds-form-element" style="margin-top: 15px;">
                                <div style="font-size: 1.2em;">Deposit Balance (Final Month)</div>
                                <div>
                                    <table id="depositBalanceTbl" class="slds-table slds-table_cell-buffer slds-table_bordered">
                                        <thead>
                                            <tr class="slds-line-height_reset">
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Package Name">Package Name</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Student">Student</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Qty">Qty</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Rate">Rate</div>
                                                </th>
                                                <th class="" scope="col">
                                                    <div class="slds-truncate" title="Total">Total</div>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="depositBalanceTblBody">
                                            
                                        </tbody>
                                    </table> 
                                </div>
                                <div style="font-size: 1.0em;padding: 5px;">Note: 
                                    Your final invoice will be generated on the 1st of your final lesson month. 
                                    The deposit will be applied, and if a balance is applicable, a refund will be processed thereafter.
                                    In the event you have multiple students or multiple enrolments, and refund balance presented in the 
                                    summary will be applied as a payment towards your next invoice.
                                </div>
                            </div>
                            <hr style="margin: 0px;"/>
                            <div class="slds-form-element slds-align_absolute-center" style="margin-top: 15px;">
                                <button class="slds-button slds-button_brand" id="confirmWithdrawal" onclick="submitCancelPackageRequest();return false;">CONFIRM WITHDRAWAL</button>
                            </div>
                        </div>
                        
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            

            <!--4-Dec-2019 Change enrollment Summary Popup-->
            <div class="slds-hide" id="ChangeEnrollmentSummaryModal">
                
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
                    <div class="slds-modal__container" style="width: 35%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="ChangeEnrollmentSummaryHeader" class="slds-text-heading_medium slds-hyphenate">Change Enrolment Summary</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#ChangeEnrollmentSummaryModal').addClass('slds-hide'); return false;">     
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">      
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>        
                                </svg>      
                                <span class="slds-assistive-text">Close</span>      
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="ChangeEnrollmentSummaryBody">
                             <div class="slds-form" role="list">
                                <div class="slds-form__row">
                                    <!--Student Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Student Name:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentStudentName">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!-- parent name -->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Parent Name:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentParentName">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--start: added by nishi: 28-Aug-2020: for show Changed Center details-->
                                <div class="slds-form__row slds-hide" id="changeEnrolmentCenterBlock">
                                    <!--Previous Teacher Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Centre:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentOldCenterName">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Current Teacher Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Centre:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentNewCenterName">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--end: added by nishi: 28-Aug-2020: for show Changed Center details-->
                                <div class="slds-form__row">
                                    <!--Previous Teacher Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Teacher:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentOldTeacherName">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Current Teacher Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Teacher:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentNewTeacherName">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__row">
                                    <!--Previous Package Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Package:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentOldPackageNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Current Package Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Package:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentNewPackageNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__row">
                                    <!--Previous Lesson Day & Time-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Lesson Day &amp; Time:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentPreviousLessonDTSummary">
                                               
                                            </div>
                                        </div>
                                    </div>
                                    <!--New Lesson Day & Time-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Lesson Day &amp; Time:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentNewLessonDTSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                               
                                <!--<div class="slds-form__row">
                                    <!--Previous Package Fee-->
                                    <!--<div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Package Fee:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentCurrentDepositSummary">
                                                
                                            </div>
                                        </div>
                                    </div>-->
                                    <!--New  Package Fee-->
                                    <!--<div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New  Package Fee:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentNewPackageDepositSummmary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>-->
                                
                                
                                <div class="slds-form__row">
                                    <!--Current Effective Date-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Current Effective Date:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentInvoiceEffectiveDate">
                                                
                                            </div>
                                        </div>
                                    </div>
                                   
                                     <!--New  Effective Date-->
                                     <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Effective Date:</span>
                                            <div class="slds-form-element__control" id="ChangeEnrollmentNewEffectiveDate">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!--Confirm Enrol Button-->
                                <div class="slds-form-element slds-grid slds-grid_align-end" style="margin-top: 15px;" >
                                    <button class="slds-button slds-button_neutral  slds-hide" id="updateEnrolmentonClickNo"  onclick="$('#ChangeEnrollmentSummaryModal').addClass('slds-hide'); $('#enrolmentUpdatePopup').removeClass('slds-hide'); return false;">BACK</button>
                                   <button class="slds-button slds-button_brand " id="confirmChangeEnrolment" onclick="submitChangeEnrollemntPackageRequest();return false;">CONFIRM UPDATE ENROLMENT</button>
                                    
                                    <!-- @@added by jatin:20-dec-for Upgrade group class To Individual-->
                                    <button class="slds-button slds-button_neutral slds-hide" id="UpgradeToIndividualEnrolNo" onclick="$('#ChangeEnrollmentSummaryModal').addClass('slds-hide');$('#UpgradeToIndividualEnrolPopup').removeClass('slds-hide');">BACK</button>        
                                    <button class="slds-button slds-button_brand " id="confirmUpgradeToIndividualEnrol" onclick="submitConfirmUpgradeToIndividualEnrolRequest();return false;">CONFIRM UPGRADE TO INDIVIDUAL CLASS</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
                <!--4-Dec-2019 Change enrollment Summary Popup end -->

            <!--Upgrade Downgrade Summary Popup-->
            <div class="slds-hide" id="upgradeDowngradeSummaryModal">
                
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_large">
                    <div class="slds-modal__container" style="width: 35%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="upgradeDowngradeSummaryHeader" class="slds-text-heading_medium slds-hyphenate"></h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#upgradeDowngradeSummaryModal').addClass('slds-hide'); return false;">     
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">      
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>        
                                </svg>      
                                <span class="slds-assistive-text">Close</span>      
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="upgradeDowngradeSummaryBody">
                            <!--<div class="slds-align_absolute-center">
<apex:image url="{!$Resource.Aureus_logo}" width="150"/>
</div>-->
                            <div class="slds-form" role="list">
                                <!-- added by Nishi- 11- Aug-2020: for manage Ossia Organization Upgrade downGrade process-->
                                <div class="slds-form__row slds-hide" id="ossiaBookingTeacher">
                                    <!--Previous teacher Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Teacher:</span>
                                            <div class="slds-form-element__control" id="oldOssiaTeacherNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Current teacher Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Teacher:</span>
                                            <div class="slds-form-element__control" id="newOssiaTeacherNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- added by Nishi- 11- Aug-2020: for manage Ossia Organization Upgrade downGrade process-->
                                <div class="slds-form__row">
                                    <!--Previous Package Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Package:</span>
                                            <div class="slds-form-element__control" id="oldPackageNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Current Package Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Package:</span>
                                            <div class="slds-form-element__control" id="newPackageNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__row">
                                    <!--Previous Lesson Day & Time-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Lesson Day &amp; Time:</span>
                                            <div class="slds-form-element__control" id="previousLessonDTSummary">
                                               
                                            </div>
                                        </div>
                                    </div>
                                    <!--New Lesson Day & Time-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Lesson Day &amp; Time:</span>
                                            <div class="slds-form-element__control" id="newLessonDTSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__row slds-hide" id="upgradeBookingclass">
                                    <!--Previous Class Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Previous Class:</span>
                                            <div class="slds-form-element__control" id="oldClassNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Current Class Name-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Class:</span>
                                            <div class="slds-form-element__control" id="newClassNameSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="slds-form__row">
                                    <!--Current Deposit on File-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Current Deposit on File:</span>
                                            <div class="slds-form-element__control" id="currentDepositFileSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--New Package Deposit-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">New Package Deposit:</span>
                                            <div class="slds-form-element__control" id="newPackageDepositSummmary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="slds-form__row">
                                    <!--Invoice for Current Month-->
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Invoice for Current Month:</span>
                                            <div class="slds-form-element__control" id="invoiceForCurrentMonthSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Invoice Top-Up-->
                                    <div class="slds-form__item invoiceTopupItem slds-hide" role="listitem" id="invoiceTopupItem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Total Invoice Top-Up:</span>
                                            <div class="slds-form-element__control" id="invoiceTopUpSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--Next Invoice-->
                                    <div class="slds-form__item slds-hide" role="listitem" id="nextInvoiceItem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Next Payment Due for Enrolment:</span>
                                            <div class="slds-form-element__control" id="nextInvoiceItemSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--Invoice Topup summary-->
                                <div class="slds-form__row">
                                    <div class="slds-form__item invoiceTopupItem" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Deposit Adjustment:</span>
                                            <div class="slds-form-element__control" id="invoiceDepositTopupSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--New Package Deposit-->
                                    <div class="slds-form__item invoiceTopupItem" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Effective Month's Invoice:</span>
                                            <div class="slds-form-element__control" id="invoiceLessonDepositTopupSummary">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="slds-form__row">
                                    <div class="slds-form__item" role="listitem">
                                        <div class="slds-form-element slds-form-element_edit slds-form-element_readonly slds-form-element_stacked slds-hint-parent">
                                            <span class="slds-form-element__label">Effective Date:</span>
                                            <div class="slds-form-element__control" id="invoiceEffectiveDate">
                                                
                                            </div>
                                        </div>
                                    </div>
                                    <!--New Package Deposit-->
                                    <div class="slds-form__item invoiceTopupItem" role="listitem">
                                    </div>
                                </div>
                                <!--Confirm Enrol Button-->
                                <div class="slds-form-element" style="margin-top: 15px;margin-left: 55%;">
                                    <button class="slds-button slds-button_neutral" id="confirmUpgradeEnrolmentCancel" onclick="$('#upgradeDowngradeSummaryModal').addClass('slds-hide'); return false;">BACK</button>
                                    <button class="slds-button slds-button_brand slds-hide" id="confirmUpgradeEnrolment" onclick="submitUpgradePackageRequest();return false;">CONFIRM UPGRADE</button>
                                    <button class="slds-button slds-button_brand slds-hide" id="confirmDowngradeEnrolment" onclick="submitDowngradePackageRequest();return false;">CONFIRM DOWNGRADE</button>
                                    <!-- added by Nishi- 11- Aug-2020: for manage Ossia Organization Upgrade downGrade process-->
                                    <button class="slds-button slds-button_neutral slds-hide" id="confirmOssiaUpgradeEnrolmentCancel" onclick="$('#upgradeDowngradeSummaryModal').addClass('slds-hide');$('#enrolmentOssiaUpdatePopup').removeClass('slds-hide'); return false;">BACK</button>
                                    <button class="slds-button slds-button_brand slds-hide" id="confirmUpgradeOssiaEnrolment" onclick="submitUpgradeOssiaPackageRequest();return false;">CONFIRM UPGRADE</button>
                                    <button class="slds-button slds-button_brand slds-hide" id="confirmDowngradeOssiaEnrolment" onclick="submitUpgradeOssiaPackageRequest();return false;">CONFIRM DOWNGRADE</button>
                                <!-- added by Nishi- 11- Aug-2020: for manage Ossia Organization Upgrade downGrade process-->
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            
            <!--Update Enrolment Button Click Popup-->
            <div class="slds-hide" id="enrolmentUpdatePopup">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width:55%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="enrolmentUpdatePopupHeader" class="slds-text-heading_medium slds-hyphenate">Update Enrolment</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#enrolmentUpdatePopup').addClass('slds-hide');">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="enrolmentUpdatePopupBody">
                            <div class="slds-col slds-size_1-of-1">
                                <div class="slds-grid slds-gutters">
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Current Teacher:</b></span>
                                        <span id="currentTeacherEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Current Date And Time:</b></span>
                                        <span id="currentDateTimeEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                    </div>
                                </div>
                                <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Current Package: </b></span>
                                        <span id="currentPackageEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select Teacher: </b></span>
                                        <select class="slds-select slds-col slds-size_1-of-2" id="selectTeacherEnrolUpdate" onchange="getPackageByTeacher();availTimeSlots('update');createNewEffectiveDates();return false;">      
                                        </select>
                                    </div>
                                </div>
                                <div class="slds-grid slds-gutters">
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                        <label id="teacherSelectErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                                    </div>
                                </div>
                                  <!-- added by nishi: 19-aug-2020: for if user select package then we show related details like: duration,monthly fee, grade,Facility fee -->
                                  
                                    <div class="slds-grid slds-gutters margin-top5px slds-hide currentOssiaEnrolUpdate" style="margin-top: 20px;">
                                        <div class="slds-col slds-size_1-of-2 slds-grid">
                                            <span class="slds-form-element__label slds-col slds-size_1-of-2 ">
                                                <b>Current Package Duration: </b>
                                            </span>
                                            <span id="currentPackageDurationOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                        </div>
                                        <div class="slds-col slds-size_1-of-2 slds-grid">
                                            <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                                <b>Current Package Monthly Fee: </b>
                                            </span>
                                            <span id="currentPackageMonthlyFeeOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                        </div>
                                    </div>
                                    <div class="slds-grid slds-gutters margin-top5px slds-hide currentOssiaEnrolUpdate" style="margin-top: 20px;">

                                        <div class="slds-col slds-size_1-of-2 slds-grid">
                                            <span class="slds-form-element__label slds-col slds-size_1-of-2 ">
                                                <b>Current Package Grade: </b>
                                            </span>
                                            <span id="currentPackageGradeOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                        </div>
                                        <!-- <div class="slds-col slds-size_1-of-2 slds-grid">
                                            <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                                <b>Current Package Facility Fee:</b>
                                            </span>
                                            <span id="currentPackageFacilityFeeOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                        </div>  -->
                                    </div>
                                
                            
                            <!-- added by nishi: 19-aug-2020: for if user select package then we show related details like: duration,monthly fee, grade,Facility fee -->

                               

                                <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                                    <div class="slds-col slds-size_1-of-2  slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select Package: </b></span>
                                        <select class="slds-select slds-col slds-size_1-of-2" id="selectPackageEnrolUpdate"  disabled="true" onclick="availTimeSlots('update');showSelectedOssiaPackageDetails(); return false;">      
                                        </select>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select Current Effective Date: </b></span>
                                        <!--<input class="slds-input" id="selectEffectiveDateEnrolUpdate" onchange="availTimeSlots('update');return false;" style="width: 174px;"/>-->
                                        <select class="slds-select slds-col slds-size_1-of-2" id="selectEffectiveDateEnrolUpdate" onchange="createNewEffectiveDates();return false;">      
                                        </select>
                                    </div>
                                </div>
                                <div class="slds-grid slds-gutters ">
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                        <label id="packageSelectErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                        <label id="effectiveDateErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                                    </div>
                                </div>
                                  <!-- added by nishi: 19-aug-2020: for if user select package then we show related details like: duration,monthly fee, grade,Facility fee -->
                                
                                  <div class="slds-grid slds-gutters margin-top5px slds-hide newossiaEnrolUpdate" style="margin-top: 20px;">
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2 ">
                                            <b>New Package Duration: </b>
                                        </span>
                                        <span id="newPackageDurationOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                            <b>New Package Monthly Fee: </b>
                                        </span>
                                        <span id="newPackageMonthlyFeeOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                    </div>
                                </div>
                                <div class="slds-grid slds-gutters margin-top5px slds-hide newossiaEnrolUpdate" style="margin-top: 20px;">

                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2 ">
                                            <b>New Package Grade: </b>
                                        </span>
                                        <span id="newPackageGradeOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                    </div>
                                    <!-- <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2">
                                            <b>New Package Facility Fee:</b>
                                        </span>
                                        <span id="newPackageFacilityFeeOssiaEnrolUpdate" class="slds-col slds-size_1-of-2"></span>
                                    </div>  -->
                                </div>
                            
                            <!-- added by nishi: 19-aug-2020: for if user select package then we show related details like: duration,monthly fee, grade,Facility fee -->

                                <div class="slds-grid slds-gutters margin-top5px" style="margin-top: 20px;">
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2 "><b>Select New Effective Date: </b></span>
                                        <!--<input class="slds-input" id="selectEffectiveDateEnrolUpdate" onchange="availTimeSlots('update');return false;" style="width: 174px;"/>-->
                                        <select class="slds-select slds-col slds-size_1-of-2 " id="selectNewEffectiveDateEnrolUpdate"  onchange="availTimeSlots('update');return false;">      
                                        </select>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <span class="slds-form-element__label slds-col slds-size_1-of-2"><b>Select TimeSlot: </b></span>
                                        <select class="slds-select slds-col slds-size_1-of-2" id="availableTimeSlotsUpdateEnrolment" disabled="true">      
                                        </select>
                                    </div>
                                </div>
                                <div class="slds-grid slds-gutters ">
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                        <label id="newEffectiveDateErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                                    </div>
                                    <div class="slds-col slds-size_1-of-2 slds-grid">
                                        <label  class="slds-col slds-size_1-of-3" style="color:red;"></label>
                                        <label id="timeSlotErrorMsg" class="slds-col slds-size_2-of-3" style="color:red;margin-left: 35px;"></label>
                                    </div>
                                </div>
                            </div>
                            
                        </div>  
                        <footer class="slds-modal__footer">      
                            <button class="slds-button slds-button_neutral" onclick="$('#enrolmentUpdatePopup').addClass('slds-hide');">Cancel</button>        
                            <button class="slds-button slds-button_brand" id="updateEnrolmentonClick" onclick="updateEnrolmentClick();return false;">Next</button>       
                        </footer>  
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            <!--Pre Payment Modal-->
            <div class="slds-hide" id="prePaymentPopup">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open slds-modal_medium">
                    <div class="slds-modal__container" style="width: 30%;">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="prePaymentPopupHeader" class="slds-text-heading_medium slds-hyphenate"><b>Pre Payment</b></h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#prePaymentPopup').addClass('slds-hide'); return false;">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="prePaymentPopupBody">
                            <div class="slds-grid slds-wrap">
                                
                                <div class="slds-col slds-size_1-of-12 slds-p-vertical_x-small">
                                </div>
                                <div class="slds-col slds-size_6-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Pre Payment Package</b></span>
                                    <span>
                                        <select id="prePaymentPackages" size="1" class="slds-select" style="width: 168px;">
                                        </select>  
                                    </span>
                                </div>
                                <div class="slds-col slds-size_5-of-12 slds-p-vertical_x-small">
                                    <span class="slds-form-element__label slds-text-align_right"><b>Effective Date</b></span>
                                    <span>
                                        <span id="prePaymentEffectiveDate"></span>
                                        <!--<input class="slds-input" id="lastLessonDate" style="width:130px;" onchange="getLastLessonDateFunc();return false;"/>-->
                                    </span>
                                </div>
                                
                                <div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
                                    
                                </div>
                                <!--<div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
                                    <button class="slds-button button-shadow"  title="Confirm Withdrawal" aria-pressed="false" id="prePaymentBtn" target="_blank" onclick="prePaymentFunc();return false;">Next
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Next</span>
                                    </button>
                                </div>
                                <div class="slds-col slds-size_4-of-12 slds-p-vertical_x-small">
                                    <button class="slds-button button-shadow" title="Cancel" aria-pressed="false" onclick="$('#prePaymentPopup').addClass('slds-hide');return false;">Cancel
                                        <svg class="slds-button__icon" aria-hidden="true">
                                            <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                        </svg>
                                        <span class="slds-assistive-text">Cancel</span>
                                    </button> 
                                </div>-->
                            </div>
                            
                        </div>

                        <footer class="slds-modal__footer">
                            <button class="slds-button button-shadow slds-button_neutral" title="Cancel" aria-pressed="false" onclick="$('#prePaymentPopup').addClass('slds-hide');return false;">Cancel
                                <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" />
                                </svg>
                                <span class="slds-assistive-text">Cancel</span>
                            </button> 
                            <button class="slds-button button-shadow slds-button_brand"  title="Confirm Withdrawal" aria-pressed="false" id="prePaymentBtn" target="_blank" onclick="prePaymentFunc();return false;">Next
                                <svg class="slds-button__icon slds-button__icon_right" aria-hidden="true">
                                    <use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" />
                                </svg>
                                <span class="slds-assistive-text">Next</span>
                            </button>
                        </footer>
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
            <!-- group class popup start -->
            <div class="slds-hide" id="newGroupClassModal">
                <!--  -->
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                    <div class="slds-modal__container">
                        <header class="slds-modal__header" style="background: #303a42; color: white;">
                            <h2 id="newBookingDetailsHeader" class="slds-text-heading_medium slds-hyphenate">Add Class</h2>
                            <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#newGroupClassModal').addClass('slds-hide');">
                                <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                    <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                </svg>
                                <span class="slds-assistive-text">Close</span>
                            </a>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="newGroupClassModalBody" style="overflow-y: auto;height:400px">
                            <div class="slds-grid slds-wrap">
                                <!-- center or teacher-->
                                <div class="slds-col slds-size_12-of-12 slds-grid  slds-wrap  slds-m-top_small">
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small slds-wrap  slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Location :</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12">
                                            <span><label id="LocationNameClass"></label></span>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Teacher :</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12">
                                            <span><label id="TeacherNameClass"></label></span>
                                        </div>
                                    </div>
                                
                               

                                <!-- time or class type-->
                               
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small slds-wrap slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Time :</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12">
                                            <span><label id="ClassTimeLabel"></label></span>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-wrap slds-p-around_xxx-small slds-m-top_small">
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                                <span><b>Class Type :</b></span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <select class="slds-select" id="ClassTypeSelect">
                                                </select>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_12-of-12  slds-grid slds-wrap ">
                                            <div class="slds-col slds-size_12-of-12 slds-grid ">
                                                <div class="slds-col slds-size_5-of-12">
                                                
                                                </div>
                                                <div class="slds-col slds-size_7-of-12">
                                                    <p id="ClassTypeSelectError" class="slds-hide" style="color:red;">Please Select the Class Type...</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                
                                  

                                <!-- Minimum or Maximum Age-->
                              
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small slds-wrap  slds-m-top_small">
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                                <span><b>Minimum Age :</b></span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <input type="number" id="ClassMinimumAgeInput" class="slds-input" />
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                        
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <p id="ClassMinimumAgeInputError" class="slds-hide" style="color:red;">Please Enter Minimum Age...</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small slds-wrap slds-m-top_small">
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                                <span><b>Maximum Age :</b></span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <input type="number" id="ClassMaximumAgeInput" class="slds-input" />
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                        
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <p id="ClassMaximumAgeInputError" class="slds-hide" style="color:red;">Please Enter Maximum Age ...</p>
                                            </div>
                                        </div>
                                    </div>
                                

                                
                                 <!-- Class Capacity or Package -->
                               
                                    <div class="slds-col slds-size_6-of-12 slds-p-around_xxx-small slds-grid slds-wrap  slds-m-top_small">
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                                <span><b>Class Capacity :</b></span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <input type="number" id="ClassCapacityInput" class="slds-input" />
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                        
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <p id="ClassCapacityInputError" class="slds-hide" style="color:red;">Please Enter Class Capacity...</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_6-of-12 slds-p-around_xxx-small slds-grid slds-wrap aureusAddGroupClass slds-m-top_small">
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                                <span><b>Package :</b></span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <span>
                                                    <select class="slds-select" id="ClassPackageSelect" data-toggle="tooltip" data-placement="top" title="" onchange="groupPackageSelect();return false;">
                                                    </select>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                        
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <p id="ClassPackageSelectError" class="slds-hide" style="color:red;">Please Enter Package...</p>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- added by nishi: 1-Sep-2020: for manage new Ossia group  class requirement we not select one package we select multiple grade then 
                                        user can select package according to selected grades-->
                                    <div class="slds-col slds-size_6-of-12 slds-p-around_xxx-small slds-grid slds-wrap  slds-hide ossiaAddGroupClass slds-m-top_small">
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                                <span><b>Class Duration :</b></span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <span>
                                                    <select class="slds-select" id="ClassDurationSelect"  data-toggle="tooltip" data-placement="top" title="">
                                                    </select>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                        
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <p id="ClassDurationSelectError" class="slds-hide" style="color:red;">Please Select Duration...</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_6-of-12 slds-p-around_xxx-small slds-grid slds-wrap  slds-hide ossiaAddGroupClass slds-m-top_small">
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                                <span><b>Grade :</b></span>
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <span>
                                                    <select class="slds-select" id="ClassGradeSelect" size="3" multiple="multiple"  data-toggle="tooltip" data-placement="top" title="" onchange="groupGradeSelect();return false;">
                                                    </select>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="slds-col slds-size_12-of-12 slds-grid slds-wrap">
                                            <div class="slds-col slds-size_5-of-12">
                                        
                                            </div>
                                            <div class="slds-col slds-size_7-of-12">
                                                <p id="ClassGradeSelectError" class="slds-hide" style="color:red;">Please Select Grade...</p>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- added by nishi: 1-Sep-2020: for manage new Ossia group  class requirement we not select one package we select multiple grade then 
                                        user can select package according to selected grades-->
                                
                                <!-- duration or instrument-->
                                
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small aureusAddGroupClass slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Duration :</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12">
                                            <span><label id="ClassDurationLabel"></label></span>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small aureusAddGroupClass slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Class Instrument :</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12">
                                            <span><label id="ClassInstrumentLabel"></label></span>
                                        </div>
                                    </div>
                                
                                

                                <!-- Price or Class Capacity-->
                                
                                    <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small aureusAddGroupClass slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Price :</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12">
                                            <span><label id="ClassPriceLabel"></label></span>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_6-of-12 slds-p-around_xxx-small slds-grid  slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span> <b>Is Makeup Class :</b></span>
                                        </div>
                                        <span class="slds-col slds-size_7-of-12 slds-p-left_medium">
                                            <input name="onmakupAvailablegroup" type="checkbox" id="onmakupAvailablegroup" onchange="makupAvailablegroupFunc();return false;"/>
                                        </span>
                                    </div>
                                </div>

                                 <!--start: added by nishi: 9-sep-2020: for we added recurring group class -->
                                <div class="slds-col slds-size_12-of-12 slds-grid  slds-wrap slds-hide slds-m-top_small" id="recurringgroupSection">
                                    
                                     <div class="slds-col slds-size_6-of-12 slds-grid slds-p-around_xxx-small  slds-wrap   slds-m-top_small">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Repeat:</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12">
                                            <select class="slds-select" id="repeatgroupSelect" onchange="repeatSelectGroupFunc($(this).val());return false;">
                                                <option value="">None</option>
                                                <option value="Weeks">Weekly</option>
                                            </select>
                                        </div>
                                    </div>
                                  
                                    <div class="slds-col slds-size_6-of-12 slds-grid  slds-wrap slds-p-around_xxx-small  slds-m-top_small repeatgroupSelection slds-hide">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Repeat Every:</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12 slds-grid  slds-wrap">
                                            <select class="slds-select slds-col slds-size_8-of-12" id="repeatgroupWeek">
                                            </select>
                                            <span id="repeatgroupValue" class="slds-col slds-size_4-of-12 slds-p-left_medium">Week</span>
                                        </div>
                                    </div>
                                    <div class="slds-col slds-size_8-of-12 slds-grid slds-p-around_xxx-small slds-wrap  slds-m-top_small repeatgroupSelection slds-hide">
                                        <div class="slds-col slds-size_5-of-12">
                                            <span><b>Ends:</b></span>
                                        </div>
                                        <div class="slds-col slds-size_7-of-12 slds-grid  slds-wrap ">
                                            <div class="slds-col slds-size_12-of-12 slds-grid  slds-wrap ">
                                                <div class="slds-col slds-size_4-of-12  slds-grid  slds-wrap">
                                                    <span class="slds-col slds-size_4-of-12">
                                                        <input name="radio" type="radio" id="aftergroupRadio" checked="true"/>
                                                    </span>
                                                    <span class="slds-col slds-size_8-of-12 slds-p-left_medium">After</span>
                                                </div>
                                                <div class="slds-col slds-size_8-of-12  slds-grid  slds-wrap">
                                                    <select class="slds-select slds-col slds-size_8-of-12 " id="recurrencegroupOccure">
                                                    </select>
                                                    <span  class="slds-col slds-size_4-of-12 slds-p-left_medium">Occurrencess</span>
                                                </div>
                                            </div>
                                            <div class="slds-col slds-size_12-of-12 slds-grid  slds-wrap slds-m-top_small">
                                                <div class="slds-col slds-size_4-of-12 slds-grid  slds-wrap">
                                                    <span  class="slds-col slds-size_4-of-12">
                                                        <input name="radio" type="radio" id="ongroupRadio"/>
                                                    </span>
                                                    <span class="slds-col slds-size_8-of-12 slds-p-left_medium">On</span>
                                                </div>
                                                <div class="slds-col slds-size_8-of-12">
                                                    <input class="slds-input" type="text" placeholder="Pick a Date" label="Date Picker Label" id="onSelectedgroupDate"/>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--end: added by nishi: 9-sep-2020: for we added recurring group class -->
                            </div>    
                        </div>
                        <footer class="slds-modal__footer" style ="margin-bottom: -20px;">
                            <button class="slds-button slds-button_neutral" onclick="$('#newGroupClassModal').addClass('slds-hide');">Cancel</button>
                            <button class="slds-button slds-button_brand" id="saveNewClass" onclick="saveNewClassFunc();return false;">Add New Class</button>
                        </footer>  
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
        <!-- group class popup end -->

        <!-- group class popup start -->
        <div class="slds-hide" id="BlockBookingSection">
            
            <!--  -->
            <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                <div class="slds-modal__container">
                    <header class="slds-modal__header" style="background: #303a42; color: white;">
                        <h2 id="newBookingDetailsHeader" class="slds-text-heading_medium slds-hyphenate">Release Booking</h2>
                        <a href="javascript:void(0);" class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" title="Close" onclick="$('#BlockBookingSection').addClass('slds-hide');">
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </a>
                    </header>
                    <div class="slds-modal__content slds-p-around_medium" id="BlockBookingSectionBody" style="overflow-y: auto;">
                        <div class="slds-grid slds-wrap">
                            <div class="slds-col slds-size_3-of-12" style="padding-left:20px;padding-top:10px;">
                                <span><b>Reason of Release:</b></span>
                            </div>
                            <div class="slds-col slds-size_9-of-12" style="padding-top:5px;">
                                <span>
                                    <select class="slds-select" id="releaseBookingReason" style="width: auto;">
                                    </select>
                                </span>
                                <p id="releaseBookingReasonError" class="slds-hide" style="color:red;">Please Select the Reason...</p>
                            </div>
                        </div>
                    </div>   
                    <footer class="slds-modal__footer">
                        <button class="slds-button slds-button_neutral" onclick="$('#BlockBookingSection').addClass('slds-hide');">No</button>
                        <button class="slds-button slds-button_brand" id="releaseBookingConfirm" onclick="confirmReleaseBooking();return false;">Save</button>
                    </footer>  
                </div>
            </section>
            <div class="slds-backdrop slds-backdrop_open"></div>
        </div>
    </apex:form>
    <div id="blank" style="display:none"></div>
    <script>
    //Global Variable for Filter
    var filter = {};
    filter.center = '';
    filter.teacher = '';
    filter.resource = '';
    filter.instrument = '';
    // jatin: 22-jan-2020 :for manage employee current selected Id
    filter.employee = '';

    var bookingReschedule = {};
    bookingReschedule.Id = '';
    bookingReschedule.Type = '';
    bookingReschedule.resource = '';
    bookingReschedule.date = '';
    bookingReschedule.Individual = '';
    bookingReschedule.isRecurrence = '';
    bookingReschedule.scheduleType = '';
    
    var eventsOfCalendar = {};
    var createBookingResult = {};
    var isRecursive = true;
    var teacher;
    var center;
    var teacherWorkingHours = {};
    var instruments = '';
    var eventId = '';
    var originalTime;
    var today = new Date();
    var dd = today.getDate();
    var mm = today.getMonth() + 1; //January is 0!
    var yyyy = today.getFullYear();
    var isReschedule = false;
    var caseId = '';
    var userDetail = '';
    
    
    var bookingData = {};
    //var j$ = jQuery.noConflict();
    //Assigning SLDS Static Resource Path To A Variable To Use It With ALJS Initialization
    var assetsLoc = '';
    
    //ALJS Initialization   
    
    $.aljsInit({
        assetsLocation: assetsLoc, //SLDS Static Resource Path
        scoped: true
    });
    
    
    $( document ).on( 'keydown', function ( e ) {
        if ( e.keyCode === 27 ) { // ESC
            closeContainerMessage();
        }
    });
    
    // 'agendaTwoDay'
    
    $(document).ready(function(){
        /*cometd = $.cometd;      
            cometd.websocketEnabled = false;*/
        caseId = '{!$currentpage.parameters.caseId}';
        getCaseDetails(caseId);
        
        var profileId = '{!$Profile.Id}';
        
        var currentUser = '{!$User.Id}';        
        var fromIpad = '{!$Label.From_Ipad}';
        
        if(bookingIdToHighlight && (bookingTeacherToHighlight || bookingResourceToHighlight) && bookingCentreToHighlight && bookingDateToHighlight){
            
            var datesArray = [];
            var beginOfWeek = bookingDateToHighlight.startOf('week');
            var start = beginOfWeek.format('YYYY-MM-DD');
            
            var endOfWeek = bookingDateToHighlight.endOf('week');
            var end = endOfWeek.format('YYYY-MM-DD');
            
            datesArray.push(start);
            datesArray.push(end);
            
            if(bookingTeacherToHighlight){
                filter.center = bookingCentreToHighlight;
                filter.teacher = bookingTeacherToHighlight;
                center = bookingCentreToHighlight;
                teacher = bookingTeacherToHighlight;
                $('.teachers').val(filter.teacher);
                $('.centerList').val(filter.center);
                filter.resource = '';
                
                initResources(filter.center, filter.teacher, filter.resource, datesArray, 'agendaTwoDay', filter.instrument);
                
            }else if(bookingResourceToHighlight){
                filter.center = bookingCentreToHighlight;
                center = bookingCentreToHighlight;
                teacher = '';
                filter.teacher = '';
                filter.resource = bookingResourceToHighlight;
                $('[id$=centers]').val(filter.center);
                
                initResources(filter.center, filter.teacher, filter.resource, datesArray, 'agendaTwoDay', filter.instrument);
                
                setTimeout(function(){
                    teacher = '';
                    filter.teacher = '';
                    filter.resource = bookingResourceToHighlight;
                    $('[id$=centers]').trigger('change');
                }, 3000);
                
                setTimeout(function(){ 
                    teacher = '';
                    filter.teacher = '';
                    filter.resource = bookingResourceToHighlight;
                    $('[id$=resources]').val(filter.resource);
                    $('[id$=resources]').trigger('change');
                    
                }, 12000);
                
            }
        }else{
            if(dd < 10){
                dd = '0' + dd;
            }
            var availableSlotsWorking = {};        
            var timeSlotsOfTeacher = new Set();
            $('[id$=teachers]').val('AllRosteredStaff');
            
            filter.center =  $('[id$=centers]').val();
            filter.teacher = $('[id$=teachers]').val();
            teacher= $('[id$=teachers]').val();
            if(mm < 10){
                mm = '0' + mm;
            }
            today = [yyyy + '-' + mm + '-' + dd];
            
            var calView = $('#calendar').fullCalendar('getView').name;
            //alert(calView);
            if ( calView == '' || calView === 'undefined' || calView === 'month' || calView === undefined){
                calView = 'agendaDay';
            }
            teacher = '{!teacherName}';
            center = '{!centerName}';
            getUserDetails();
            var datesArray = new Array();
            var dt = moment();
            var bookDate = dt.format('YYYY-MM-DD');
            
            datesArray.push(bookDate);
            
            var calendarDates = datesArray;
            initResources(center, teacher, filter.resource, calendarDates , 'agendaDay', filter.instrument);
        }
        
        /*$('#selectEffectiveDateEnrolUpdate').datepicker({
                initDate: moment(), //Today Date
                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                onChange: function(datepicker) {
                $('#SelectedDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
               }
            });*/
        
        $('#onSelectedDate').datepicker({
            initDate: moment(), //Today Date
            format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
            onChange: function(datepicker) {
                $('#SelectedDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
            }
        });
        $('#onSelectedgroupDate').datepicker({
            initDate: moment(), //Today Date
            format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
            onChange: function(datepicker) {
                $('#SelectedDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
            }
        });
        $('#onSelectedDateBusy').datepicker({
            initDate: moment(), //Today Date
            format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
        });
        var today = new Date();
        /*$('#effectiveDateInput').datepicker({
                initDate: moment(), //Today Date
                format: 'YYYY-MM-DD',
                minDate: today, //Date Format Of Datepicker Input Field
                onChange: function(datepicker) {
                $('#effectiveDateInput').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
               }
            });*/
        
        /*$('#lastLessonDate').datepicker({
                initDate: moment(), //Today Date
                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                onChange: function(datepicker) {
                $('#lastLessonDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
               }
            });*/
        var downgradeRequestDate = new Date();
        downgradeRequestDate.setDate(downgradeRequestDate.getDate() + 30 );
        $('#effectiveDateInputDowngrade').datepicker({
            initDate: moment(), //Today Date
            format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
            minDate: downgradeRequestDate,
            onChange: function(datepicker) {
                $('#selectRequestedPackageDowngrade').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
            }
        }); 
        
        initChange();
        $('#repeatValue').html($('#repeats').val());
        $('.whenPencilled').hide();
        $('.whenConfirmed').hide();
        $('#autoExpireDateTime').hide();
        $('#confirm').click();
        
        // Tabs
        $('.slds-tabs--default__link,.slds-tabs--scoped__link').click(function(){
            $(this).parent().parent().find('.slds-tabs--default__link,.slds-tabs--scoped__link').attr('aria-selected','false');
            $(this).attr('aria-selected','true');
            $(this).parent().parent().find('.slds-tabs--default__link,.slds-tabs--scoped__link').attr('tabindex','-1');
            $(this).attr('tabindex','0');
            $(this).parent().addClass('slds-active').siblings().removeClass('slds-active');
            $(this).parent().parent().parent().find('.'+$(this).parent().parent().parent().find('.slds-tabs--default__content,.slds-tabs--scoped__content')[0].classList[0]).removeClass('slds-show').addClass('slds-hide');
            $(this).parent().parent().parent().find('#'+$(this).attr('aria-controls')).removeClass('slds-hide').addClass('slds-show');
        });
        // End Tabs
        /*cometd.configure({      
               url: window.location.protocol+'//'+window.location.hostname+ (null != window.location.port ? (':'+window.location.port) : '') +'/cometd/42.0/',      
               requestHeaders: { Authorization: 'OAuth {!$Api.Session_ID}'}     
        });     
        cometd.handshake();     
        $.cometd.subscribe('/event/iPad_Process_Event__e', function(message){       
            if(message){        
                if(message.data.payload.UserId__c == currentUser && message.data.payload.Direction__c == fromIpad && message.data.payload.Process_Type__c == 'Cancel'){     
                    $('#enrolProcessLoader').addClass('slds-hide');     
                }       
            }       
        });*/  
    });
    
    
    $('#repeats').change(function(){
        $('#repeatValue').html($('#repeats').val());
    });
    
    $('#pencilled').click(function(){
        $('.whenConfirmed').hide();
        $('.whenPencilled').show();
    });
    
    $('#confirm').click(function(){
        $('.whenPencilled').hide();
        $('.whenConfirmed').show();
    });
    
    $("#autoExire").click(function () {
        if ($(this).is(":checked")) {
            $("#autoExpireDateTime").show();
        } else {
            $("#autoExpireDateTime").hide();
        }
    });
    
    function repeatSelectFunc(val){
        $('#recurrenceOccure').empty();
        $('#recurrenceOccureBusy').empty();
        $('#repeatWeek').empty();
        $('#repeatWeekBusy').empty();
        if(val == 'None'){
            $('.repeatSelection').addClass('slds-hide');
        }else{
            var optionRecursion = '';
            for(let i = 1;i <= {!$Label.Recurring_occurrence};i++){
                optionRecursion += '<option value="'+i+'">'+i+'</option>';
            }
            $('#recurrenceOccure').append(optionRecursion);
            $('#recurrenceOccureBusy').append(optionRecursion);
            optionRecursion = '';
            
            for(let j = 1; j<=1; j++){
                optionRecursion += '<option value="'+j+'">'+j+'</option>';
            }
            $('#repeatWeek').append(optionRecursion);
            $('#repeatWeekBusy').append(optionRecursion);
            $('.repeatSelection').removeClass('slds-hide');
        }
    }
   
    //added by nishi: 9-Sep-2020: for user can select makup group class schaduling
    function repeatSelectGroupFunc(val){
        $('#recurrencegroupOccure').empty();
        $('#repeatgroupWeek').empty();
        if(val == 'None'){
            $('.repeatgroupSelection').addClass('slds-hide');
        }else{
            var optionRecursion = '';
            for(let i = 1;i <= {!$Label.Recurring_occurrence};i++){
                optionRecursion += '<option value="'+i+'">'+i+'</option>';
            }
            $('#recurrencegroupOccure').append(optionRecursion);
            optionRecursion = '';
            
            for(let j = 1; j<=1; j++){
                optionRecursion += '<option value="'+j+'">'+j+'</option>';
            }
            $('#repeatgroupWeek').append(optionRecursion);
            $('.repeatgroupSelection').removeClass('slds-hide');
        }
    }

    $('#packageSelect').focusin(function() {
        $('#getPackageId').addClass('slds-is-open');
    });
        // Added By Ravi on 13 july 2020
        $('#lessonSelect').focusin(function() {
            $('#getLessonId').addClass('slds-is-open');
        });
        // Added By Ravi on 13 july 2020
    
    //Cancel Booking event 
    $('#cancelBooking').click(function(){
       //console.log('isOssian --',$(this).attr('data-isOssian'));
        var timeDeff;
         var isOssia = $('#cancelBooking').attr('data-isOssia');
        $('.editDetails').addClass('slds-hide');
        var bookingId = $(this).attr("data-id");
        var bookingDateTime = $(this).attr("data-date");
        var bookingType = $(this).attr("data-type");
        $('#remarkForCancellation').val('');
        $('#cancelReason').val('');
        $('#newGroupClassCMP').addClass('slds-hide');
        $('#confirmModalYes').removeAttr('cancelReason');
        $('#confirmModalYes').removeAttr('makeupReason');
        $('#confirmModalYes').removeAttr('makeupRemark');
        $('#confirmModalYes').removeAttr('data-future');

        $('#confirmModalNo').removeAttr('cancelReason');
        $('#confirmModalNo').removeAttr('makeupReason');
        $('#confirmModalNo').removeAttr('makeupRemark');
        $('#confirmModalNo').removeAttr('data-future');
         // added by Arpit:Start 16-jul-2020: of only Ossia students 
        //a. For Ossia there is no limit on the hours for cancellation notice. It can be 5 minutes before, 5 minutes after the lesson
       //console.log('bookingType',bookingType);
       //console.log('isOssia --',isOssia);
       //console.log('isOssia --',typeof (isOssia));
        if(isOssia && isOssia === 'true'){
            if(bookingType != 'Busy'){
                cancelStudentBookingWithCancelReason(bookingId,bookingDateTime,bookingType,true);
            }else{
                $('#confirmBody').html('Do you want cancel busy appointment?');
                $('#confirmHeader').html('Cancel Booking');
                $('#confirmModalYes').attr('data-id', bookingId);
                $('#confirmModalYes').attr('data-time', timeDeff);
                $('#confirmModalYes').attr('data-type', bookingType);
                $('#confirmModalYes').attr('data-origin','cancelOssia');
                $('#confirmModalNo').removeAttr('data-origin');
                $('.confirmModal').removeClass('slds-hide');
            }
            
        }else{
            // jatin: 22-jan-2020 : manage If booking cancel and booking type is 'Piano Viewing' then 
            //show confirm modal otherwise normal cancel booking worked 
            /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
          
            var employeeId = $('[id$=employee]').val();
           //console.log('employeeId',employeeId);
            if(employeeId || employeeId== undefined){
                $('.confirmModal').removeClass('slds-hide');
                $('.confirmModalYes').removeClass('slds-hide');
                $('#confirmBody').html('Do you want to send an email?');
                $('#confirmHeader').html('Email Confirmation');
                $('#confirmModalYes').attr('data-origin','cancel');
                $('#confirmModalNo').attr('data-origin','cancel');
                $('#confirmModalYes').attr('data-id', bookingId);
                $('#confirmModalNo').attr('data-id', bookingId);
                $('#confirmModalYes').attr('cancelReason', '');
                $('#confirmModalNo').attr('cancelReason', '');
            }else{
                // cancel booking then if booking is less then 24 hours then open makup reason 
                if(bookingId && bookingDateTime && bookingType && bookingType != 'Busy'){
                    //Commenting this code for temporary basis need to uncomment it later.
                    //if(isDateTimeInFuture(bookingDateTime)){
                    timeDeff = isDateBetween24Hours(bookingDateTime);
                    if((timeDeff > 24 || bookingType == 'Trial') && isDateTimeInFuture(bookingDateTime)){
                         cancelStudentBookingWithCancelReason(bookingId,bookingDateTime,bookingType,false);
                    }else{
                        // if cancel booking is greater then 24 then open cancel appoinment cancelBookingWithReason
                        cancelStudentBookingWithMakupReason(bookingId,false);
                    }
                    //Commenting this code for temporary basis need to uncomment it later.
                    /*}else{
                            $('#toastMsg').html('Cannot cancel past Bookings');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            
                            toastLaunch();
                        }*/
                }else{
                    $('#confirmBody').html('Do you want cancel busy appointment?');
                    $('#confirmHeader').html('Cancel Booking');
                    $('#confirmModalYes').attr('data-id', bookingId);
                    $('#confirmModalYes').attr('data-time', timeDeff);
                    $('#confirmModalYes').attr('data-type', bookingType);
                    $('#confirmModalYes').attr('data-origin','cancel');
                    $('#confirmModalNo').removeAttr('data-origin');
                    $('.confirmModal').removeClass('slds-hide');
                }
            }
         }
    });
     function cancelStudentBookingWithMakupReason(bookingId){
        $('.cancellationReasonPopup').addClass('slds-hide');
        $('#cancelBookingWithMakeupBtn').attr({'data-id':bookingId, 'data-reason':'' });
        $('#no-makeup').attr({'data-id':bookingId, 'data-reason':'' });
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.getPickListValues}',
            'Booking__c', 'Makeup_Reason__c', 
            function(result, event){
                if(result){
                    $('#cancelReason').empty();
                    
                    var cancelReason = '<option value="">Select Make Up Credit Reason</option>';
                    $(result).each(function(index, value){
                        cancelReason += '<option value="'+value+'">'+value+'</option>'
                    }); 
                    $('#cancelReason').append(cancelReason); 
                    $('.reasonSection').addClass('slds-hide'); 
                    $('#reasonPopupText').html('Make Up Credit for Booking');
                    $('.notMakeupHoursShow').addClass('slds-hide');
                    $('.reasonText').html('Reason For Make up Credit:');
                    $('#cancelBookingWithReason').addClass('slds-hide');
                    $('.makeupTitle').removeClass('slds-hide');
                    $('.close-popup').addClass('slds-hide');
                    $('.cancellationReasonPopup').removeClass('slds-hide');
                }
            }, 
            {escape: true}
        );
    }
 
 // added by Nishi :Start: 21-Jul-2020: for ossia organization user want to cancel and we shown a makeup reason picklist 
    function cancelOssiaStudentBookingWithMakupReason(bookingId){
        $('.cancellationReasonPopup').addClass('slds-hide');
        $('#cancelBookingWithMakeupBtn').attr({'data-id':bookingId, 'data-reason':'' });
        $('#no-makeup').attr({'data-id':bookingId, 'data-reason':'' });
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.getPickListValues}',
            'Booking__c', 'Makeup_Reason__c', 
            function(result, event){
                if(result){
                    $('#cancelReason').empty();
                    
                    var cancelReason = '<option value="">Select Make Up Credit Reason</option>';
                    $(result).each(function(index, value){
                        cancelReason += '<option value="'+value+'">'+value+'</option>'
                    }); 
                    $('#OssiaStudentCancelList').addClass('slds-hide');
                    $('#cancelReason').append(cancelReason); 
                    $('.reasonSection').addClass('slds-hide'); 
                    $('#reasonPopupText').html('Make Up Credit for Booking');
                    $('.notMakeupHoursShow').addClass('slds-hide');
                    $('.reasonText').html('Reason For Make up Credit:');
                    $('#cancelBookingWithReason').addClass('slds-hide');
                    $('.makeupTitle').removeClass('slds-hide');
                    $('.close-popup').addClass('slds-hide');
                    $('.cancellationReasonPopup').removeClass('slds-hide');
                    $('.makeupTitle').addClass('slds-hide');
                    $('.reasonSection').removeClass('slds-hide');
                    $('.makeupCredit').removeClass('slds-hide');
                    $('#cancelBookingWithMakeupBtn').removeClass('slds-hide');
                }
            }, 
            {escape: true}
        );
    }
     // added by Nishi :End: 21-Jul-2020: for ossia organization user want to cancel and we shown a makeup reason picklist 
    // Added by nishi : 20-Jul-2020:start: for manage ossia student and booking type is Ossia
    function cancelStudentBookingWithCancelReason(bookingId,bookingDateTime,bookingType,isOssia){
       //console.log('isOssia',isOssia);
        if(bookingId && bookingDateTime && bookingType){
            var timeDeff = isDateBetween24Hours(bookingDateTime);
           //console.log('timeDeff'+timeDeff);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                'Booking__c', 'Cancellation_Reason__c', 
                function(result, event){
                    if(result){
                        if(isOssia){
                            $('#cancelOssiaBookingWithoutMakeup').removeAttr('data-id');
                            $('#cancelOssiaBookingWithoutMakeup').removeAttr('data-reason');
                            $('#cancelOssiaBookingWithoutMakeup').removeAttr('data-caseid');
                            $('#cancelOssiaBookingWithoutMakeup').removeAttr('data-isfuture');
                            $('#cancelOssiaBookingWithoutMakeup').removeAttr('data-redirect');
                            $('#cancelOssiaBookingWithMakeup').removeAttr('data-id');
                            $('#cancelOssiaBookingWithMakeup').removeAttr('data-reason');
                            $('#cancelOssiaBookingWithMakeup').removeAttr('data-caseid');
                            $('#cancelOssiaBookingWithMakeup').removeAttr('data-isfuture');
                            $('#cancelOssiaBookingWithMakeup').removeAttr('data-redirect');
                        }
                        $('#cancelBookingWithReason').attr('data-id', bookingId);
                        $('#cancelBookingWithReason').attr('data-time', timeDeff);
                        $('#cancelBookingWithReason').attr('data-type', bookingType);
                        $('#cancelBookingWithReason').attr('data-isOssia', isOssia);
                        $('#cancelReason').empty();
                        var cancelReason = '<option value="">Select Cancellation Reason</option>';
                        $(result).each(function(index, value){
                            cancelReason += '<option value="'+value+'">'+value+'</option>'
                        }); 
                        $('#cancelReason').append(cancelReason);
                        $('.cancellationReasonPopup').removeClass('slds-hide');
                    }
                }, 
                {escape: true}
            );
        } 
    }
    // Added by nishi : 20-Jul-2020:End: for manage ossia student and booking type is Ossia
    
    $('.editBooking').click(function(){
        $('.editDetails').addClass('slds-hide');
        $('#containerMessage').removeClass('slds-hide');
        bookingReschedule.Id = $(this).attr('data-id');
        bookingReschedule.Type = $(this).attr('data-type');
        bookingReschedule.Individual = $(this).attr('data-individual');
        if(bookingReschedule.Type == 'Regular'){
            isReschedule = true;
        }
        
    });
    function toJSDate( dateTime ) {
        //2019-02-09T16:15:00
        var dateTime = dateTime.split("T");//dateTime[0] = date, dateTime[1] = time
        
        var date = dateTime[0].split("-");
        var time = dateTime[1].split(":");
        
        return new Date(date[0], (date[1]-1), date[2], time[0], time[1], 0, 0);
        
    }
    function closeContainerMessage(){
        isReschedule = false;
        bookingReschedule.Id = '';
        $('#containerMessage').addClass('slds-hide');
    }
    function isDateTimeInFuture(bookingDateTime){
        var now = new Date();
        var originalDate =  toJSDate(bookingDateTime); //toJSDate(originalTime);
        isDateBetween24Hours(bookingDateTime);
        
        return (Date.parse(now) < Date.parse(originalDate ));
    }
    function isDateBetween24Hours(bookingDateTime){
        var bookingDate = toJSDate(bookingDateTime);
        var now = new Date();
        var timeDiff = Math.abs(bookingDate.getTime() - now.getTime());
        timeDiff = timeDiff/ (1000 * 3600);
        // days difference
        return timeDiff;
    }
    $('#cancelBookingWithReason').click(function(){
        
        var bookingId = $(this).attr("data-id");
        
        var bookingCancelTime = $(this).attr("data-time");
        var cancelReasonValue = $('#cancelReason').val();
        var bookingType = $(this).attr("data-type");
        var isOssia =  $('#cancelBooking').attr('data-isOssia');
        $('#newGroupClassCMP').addClass('slds-hide');
        if(bookingId && bookingCancelTime && bookingType){
            // added by Nishi: 20-jul-2020:Start: for is Student is Ossia organization and booking type is Makeup then	
            // we show cancellation table for user can manage selected student given makeup mins or not 	
            if(isOssia && isOssia === 'true'){	
                $('#cancelOssiaBookingWithoutMakeup').attr({'data-id':bookingId, 'data-reason':cancelReasonValue });	
                $('#cancelOssiaBookingWithMakeup').attr({'data-id':bookingId, 'data-reason':cancelReasonValue });	
                OssiaStudentCancelBooking(bookingId);	
            }	
            // added by Nishi: 20-jul-2020: End:for is Student is Ossia organization and booking type is Makeup then	
            // we show cancellation table for user can manage selected student given makeup mins or not 	
            else{
                if(bookingCancelTime < 24 && (bookingType == 'Regular' || bookingType == 'Make-up') && cancelReasonValue){
                    $('.cancellationReasonPopup').addClass('slds-hide');
                    $('#cancelBookingWithMakeupBtn').attr({'data-id':bookingId, 'data-reason':cancelReasonValue });
                    $('#no-makeup').attr({'data-id':bookingId, 'data-reason':cancelReasonValue });
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                        'Booking__c', 'Makeup_Reason__c', 
                        function(result, event){
                            if(result){
                                $('#cancelReason').empty();
                                
                                var cancelReason = '<option value="">Select Make Up Credit Reason</option>';
                                $(result).each(function(index, value){
                                    cancelReason += '<option value="'+value+'">'+value+'</option>'
                                });  
                                $('#cancelReason').append(cancelReason); 
                                $('.reasonSection').addClass('slds-hide'); 
                                $('#reasonPopupText').html('Make Up Credit for Booking');
                                $('.notMakeupHoursShow').addClass('slds-hide');
                                $('.reasonText').html('Reason For Make up Credit:');
                                $('#cancelBookingWithReason').addClass('slds-hide');
                                
                                $('.makeupTitle').removeClass('slds-hide');
                                $('.close-popup').addClass('slds-hide');
                                
                                $('.cancellationReasonPopup').removeClass('slds-hide');
                                
                            }
                        }, 
                        {escape: true}
                    );
                }else if(cancelReasonValue){
                    
                    $('.cancellationReasonPopup').addClass('slds-hide');
                    $('.confirmModal').removeClass('slds-hide');
                    $('.confirmModalYes').removeClass('slds-hide');
                    $('#confirmBody').html('Do you want to send an email?');
                    $('#confirmHeader').html('Email Confirmation');
                    $('#confirmModalYes').attr('data-origin','cancel');
                    $('#confirmModalNo').attr('data-origin','cancel');
                    $('#confirmModalYes').attr('data-id', bookingId);
                    $('#confirmModalNo').attr('data-id', bookingId);
                    $('#confirmModalYes').attr('cancelReason', $('#cancelReason').val());
                    $('#confirmModalNo').attr('cancelReason', $('#cancelReason').val());
                }else{
                    $('#errorMsgReason').html('Please select the reason');
                }
             }   
        }
        
    });
    
    function studentFocusOut(){
        $('#studentSelectContainer').removeClass('slds-is-open');
        $('#studentSelectContainer').attr('aria-expanded', 'false');
        $('#studentSearchList').empty();
    }
    
    $('#cancelBookingWithMakeupBtn').click(function(){
        var bookingId = $(this).attr('data-id');
        var cancelReasonValue = $(this).attr('data-reason');
        var makeupReason = $('#cancelReason').val();
        var makeupCreditRemark = $('#remarkForCancellation').val();
         var isOssia =  $('#cancelBooking').attr('data-isOssia');
        if(bookingId){ //&& cancelReasonValue
            // added by Nishi: 20-jul-2020:Start: for is Student is Ossia organization and booking type is Makeup then	
            // we show cancellation table for user can manage selected student given makeup mins or not 	
            if(isOssia && isOssia === 'true'){	
                if(makeupReason && (makeupReason == 'Other' || makeupReason == 'Admin/CM Exception')){	
                    if(makeupCreditRemark){	
                        $('.cancellationReasonPopup').addClass('slds-hide');	
                        $('#confirmBody').html('Do you want to send an email?');	
                        $('#confirmHeader').html('Email Confirmation');	
                        $('#confirmModal').removeClass('slds-hide');	
                        $('#confirmModalNo').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'makeupRemark': makeupCreditRemark, 'redirectCase': 'true','data-openEmail':'false'});	
                        $('#confirmModalYes').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'makeupRemark': makeupCreditRemark, 'redirectCase': 'false','data-openEmail':'false'});	
                        $('#confirmModalYes').attr('data-origin','cancelOssia');	
                        $('#confirmModalNo').attr('data-origin','cancelOssia');	
                        OssiaStudentCancelBooking(bookingId); 	
                    }else{	
                        $('#errorMsgRemark').html('Makeup Remark cannot be empty for '+makeupReason);	
                    }	
                }else if(makeupReason){	
                    $('.cancellationReasonPopup').addClass('slds-hide');	
                    $('#confirmBody').html('Do you want to send an email?');	
                    $('#confirmHeader').html('Email Confirmation');	
                    $('#confirmModal').removeClass('slds-hide');	
                    $('#confirmModalYes').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'redirectCase': 'true','data-openEmail':'true'});	
                    $('#confirmModalNo').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'redirectCase': 'false','data-openEmail':'true'});	
                    $('#confirmModalYes').attr('data-origin','cancelOssia');	
                    $('#confirmModalNo').attr('data-origin','cancelOssia');	
                    OssiaStudentCancelBooking(bookingId);	
                }else{	
                    $('#errorMsgReason').html('Please select the reason');	
                }	
               // $('#confirmModalYes').attr({'data-id':bookingId, 'data-reason':cancelReasonValue });	
              //  $('#confirmModalNo').attr({'data-id':bookingId, 'data-reason':cancelReasonValue });	
              //  OssiaStudentCancelBooking(bookingId);	
            }	
            // added by Nishi: 20-jul-2020: End:for is Student is Ossia organization and booking type is Makeup then	
            // we show cancellation table for user can manage selected student given makeup mins or not 	
            else{
                if(makeupReason && (makeupReason == 'Other' || makeupReason == 'Admin/CM Exception')){
                    if(makeupCreditRemark){
                        
                        $('.cancellationReasonPopup').addClass('slds-hide');
                        $('#confirmModal').removeClass('slds-hide');
                        $('#confirmModalYes').attr('data-origin','cancel');
                        $('#confirmModalNo').attr('data-origin','cancel');
                        $('#confirmModalYes').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'makeupRemark': makeupCreditRemark, 'redirectCase': 'true'});
                        $('#confirmModalNo').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'makeupRemark': makeupCreditRemark, 'redirectCase': 'false'});
                        
                    }else{
                        $('#errorMsgRemark').html('Makeup Remark cannot be empty for '+makeupReason);
                    }
                }else if(makeupReason){
                    $('.cancellationReasonPopup').addClass('slds-hide');
                    $('#confirmBody').html('Do you want to send an email?');
                    $('#confirmHeader').html('Email Confirmation');
                    $('#confirmModal').removeClass('slds-hide');
                    $('#confirmModalYes').attr('data-origin','cancel');
                    $('#confirmModalNo').attr('data-origin','cancel');
                    $('#confirmModalYes').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'redirectCase': 'true'});
                    $('#confirmModalNo').attr({'data-id': bookingId, 'cancelReason': '', 'makeupReason': makeupReason, 'redirectCase': 'false'});
                    
                }else{
                    $('#errorMsgReason').html('Please select the reason');
                }
            }
        }
    });
    
    
    $('#no-makeup').click(function(){
        var bookingId = $(this).attr('data-id');
        
        var cancelReasonValue = $(this).attr('data-reason');
        if(bookingId){ //&& cancelReasonValue
            $('.cancellationReasonPopup').addClass('slds-hide');
            $('#confirmBody').html('Do you want to send an email?');
            $('#confirmHeader').html('Email Confirmation');
            $('#confirmModal').removeClass('slds-hide');
            $('#confirmModalYes').attr('data-origin','cancel');
            $('#confirmModalNo').attr('data-origin','cancel');
            $('#confirmModalYes').attr({'data-id': bookingId, 'cancelReason': cancelReasonValue, 'makeupReason': 'NoMakeUpForToday', 'redirectCase': 'true'});
            $('#confirmModalNo').attr({'data-id': bookingId, 'cancelReason': cancelReasonValue, 'makeupReason': 'NoMakeUpForToday', 'redirectCase': 'false'});
            
        }
    });
    
    function rescheduleTrialBookingfunc(bookingId, dateOfBooking){
        $('#confirmBody').html('Do you want to send an email?');
        $('#confirmHeader').html('Email Confirmation');
        $('#confirmModal').removeClass('slds-hide');
        $('#rescheduleTrialBooking').removeAttr('data-id');
        $('#rescheduleTrialBooking').removeAttr('data-date');
        $('#trialBookingClickModal').addClass('slds-hide');
        if(bookingId && dateOfBooking){
            initEvents(bookingId , dateOfBooking);
        }
    }
    
    $('#yes-makeup').click(function(){
        
        $('.makeupTitle').addClass('slds-hide');
        $('.reasonSection').removeClass('slds-hide');
        $('.makeupCredit').removeClass('slds-hide');
        $('#cancelBookingWithMakeupBtn').removeClass('slds-hide');
    });
    
    $('#confirmModalYes').click(function(){
        var origin = $(this).attr('data-origin');
        // added by Ravi.. on 16 july 2020
        let lessonModes=$('#selectLessonListSection').val();
        $('#statusOnPage').show();
        // added by Ravi.. on 16 july 2020
       //console.log('confirmModalYes'+origin);
        var bookingId = $(this).attr('data-bookingid');
        if(origin == 'email'){
            $('.sendEmail').attr('data-bookingId', bookingId);
            $('.confirmModal').addClass('slds-hide');
            $('.sendEmail').removeClass('slds-hide');
            var b = $('#calendar').fullCalendar('getDate');
            var bookDate = [b.format('YYYY-MM-DD')];
            teacher = $(".teachers").val();
            var calView = $('#calendar').fullCalendar('getView').name;
            
            var calendarDates = isWeekDay();
            if(calView == 'agendaTwoDay'){
                initResources(center, teacher, filter.resource, calendarDates, calView, filter.instrument);
            }else{
                initResources(center, teacher, filter.resource, bookDate, calView, filter.instrument);
            }
        }else if(origin == 'eventdrop'){
            $('.confirmModal').addClass('slds-hide');
            
            updateBooking($(this).attr('data-bookingid'), $(this).attr('data-starttime'), $(this).attr('data-endtime'), $(this).attr('data-resourceid'), $(this).attr('data-isplaceholder'));
        }else if(origin == 'bookingComplete' || origin == 'bookingNoShow'){
            completedOrNoShow($(this).attr('data-id'), $(this).attr('data-type'), $(this).attr('data-status'));
            
        }else if(origin == 'createBooking'){
            var bookingDataStr = JSON.stringify(bookingData);
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.createBooking}',
                bookingDataStr, 'true', caseId,lessonModes,
                function(result, event){
                    //console.log(result);
                    if (event.status) {
                        if(result.caseId){
                            $('.confirmModal').addClass('slds-hide');
                            redirectToCaseRecord(result.caseId);  
                            refreshNewBookingPopup();
                        }else if(result.msg == 'false'){
                            $('#newBookingDetails').addClass('slds-hide');
                            refreshNewBookingPopup();
                            refreshCalendar();
                            $('.confirmModal').addClass('slds-hide');
                            /*$('.confirmModal').removeClass('slds-hide');
                                $('#confirmBody').html('Do you want to send an email?');
                                $('#confirmHeader').html('Email Confirmation');
                                $('#confirmModalYes').attr('data-origin','email');
                                $('#confirmModalNo').attr('data-origin','email');*/
                        }else if(result.msg == 'duration'){
                            $('#saveNewBooking').css('pointer-events','');
                            $('#makeupHoursErrorMsg').text('Insufficient Makup minutes');
                        }else if(result.msg == 'existing'){
                            $('#newBookingDetails').addClass('slds-hide');
                            refreshNewBookingPopup();
                            $('#toastMsg').html('Cannot create Booking Please Remove Existing Bookings..');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                        }else if(result.msg == 'error'){
                            $('#newBookingDetails').addClass('slds-hide');
                            refreshNewBookingPopup();
                            $('#toastMsg').html('Booking cannot be created...');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                            refreshCalendar();                           
                        }
                    }
                    
                }
            );
        }// @@jatin: 19-dec-2019 for create makeup group lessson type booking 
        else if(origin == 'createGroupBooking'){
            createGroupbooking('true');
        } else if(origin == 'cancel'){
            bookingId = $('#confirmModalYes').attr('data-id');
            $('.confirmModal').addClass('slds-hide');
            
            /*$('.sendEmail').attr('data-bookingId', bookingId);
                $('.confirmModal').addClass('slds-hide');
                $('.sendEmail').removeClass('slds-hide');
                $('#sendEmailYes').attr({'data-origin': 'cancel', 'bookId': bookingId, 'redirectCase': 'true'});*/
            
            var cancelReason = '';
            if($('#confirmModalYes').attr('cancelReason')){
                cancelReason  = $('#confirmModalYes').attr('cancelReason');
            }
            //console.log('cancelReason'+cancelReason);
            var makeupReason = '';
            if($('#confirmModalYes').attr('makeupReason')){
                makeupReason = $('#confirmModalYes').attr('makeupReason');
            }
            //console.log('makeupReason'+makeupReason);
            var makeupRemark = '';
            if($('#confirmModalYes').attr('makeupRemark')){
                makeupRemark = $('#confirmModalYes').attr('makeupRemark');
            }
            //console.log('makeupRemark'+makeupRemark);
            var isfuture = '';
            if($('#confirmModalYes').attr('data-future')){
                isfuture = $('#confirmModalYes').attr('data-future');
            }
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.cancelBooking}',
                bookingId, cancelReason, makeupReason, makeupRemark, 'true', caseId, isfuture, 
                function(result, event){
                    if(result.caseId){
                        $('.confirmModal').addClass('slds-hide');
                        redirectToCaseRecord(result.caseId);
                        refreshCalendar();
                    }else{
                        refreshCalendar();
                    }
                    //@jatin:1Jan-2020: for refresh calendar then show class booking popup if exist group-class popop
                    var bookingid= $('#newGroupClassCMP').attr('data-groupclassid');
                    var newdate =$('#cancelBooking').attr('data-date');
                    var bookingStatus = $('#cancelBooking').attr('data-bookingtype');
                    if(bookingStatus =='Group Lesson'){
                        $('#newGroupClassCMP').addClass('slds-hide');
                        editClassAppointments(bookingid,newdate);
                        $('#CustomersTabitem').trigger('click');
                    }
                    
                }, 
                {escape: true}
            );
        } // added by Nishi jain:start: 21-Jul-2020: for manage ossia student want to cancel booking	
        else if(origin == 'cancelOssia'){	
            bookingId = $('#confirmModalYes').attr('data-id');	
            $('.confirmModal').addClass('slds-hide');	
           //console.log('origin',origin);	
            /*$('.sendEmail').attr('data-bookingId', bookingId);	
                $('.confirmModal').addClass('slds-hide');	
                $('.sendEmail').removeClass('slds-hide');	
                $('#sendEmailYes').attr({'data-origin': 'cancel', 'bookId': bookingId, 'redirectCase': 'true'});*/	
            	
            var cancelReason = '';	
            if($('#confirmModalYes').attr('cancelReason')){	
                cancelReason  = $('#confirmModalYes').attr('cancelReason');	
            }	
            //console.log('cancelReason'+cancelReason);	
            var makeupReason = '';	
            if($('#confirmModalYes').attr('makeupReason')){	
                makeupReason = $('#confirmModalYes').attr('makeupReason');	
            }	
            //console.log('makeupReason'+makeupReason);	
            var makeupRemark = '';	
            if($('#confirmModalYes').attr('makeupRemark')){	
                makeupRemark = $('#confirmModalYes').attr('makeupRemark');	
            }	
            //console.log('makeupRemark'+makeupRemark);	
            var isfuture = '';	
            if($('#confirmModalYes').attr('data-future')){	
                isfuture = $('#confirmModalYes').attr('data-future');	
            }	
            var isNoMakeup = '';	
            if($('#confirmModalYes').attr('data-isNoMakeup')){	
                isNoMakeup = $('#confirmModalYes').attr('data-isNoMakeup');	
            }	
           // $('#cancelOssiaBookingWithoutMakeup').attr({'data-id':bookingId, 'data-reason':cancelReason,'data-caseid':caseId,'data-isfuture':isfuture,'data-redirect':'true' });	
           // $('#cancelOssiaBookingWithMakeup').attr({'data-id':bookingId, 'data-reason':cancelReason,'data-caseid':caseId,'data-isfuture':isfuture,'data-redirect':'true' });	
            cancelOssiaStudentBooking(bookingId,cancelReason,caseId,isfuture,isNoMakeup,'true',makeupReason,makeupRemark);	
			   	
        }	
         // added by Nishi jain:End: 21-Jul-2020: for manage ossia student want to cancel booking
            else if(origin == 'update'){
            bookingId = '';
            let start = '';
            let end = '';
            let teacherId = '';
            let isplaceholder = '';
            let isFuture = '';
            if($('#confirmModalYes').attr('data-id')){
                bookingId = $('#confirmModalYes').attr('data-id');
            }
            if($('#confirmModalYes').attr('start')){
                start = $('#confirmModalYes').attr('start');
            }
            if($('#confirmModalYes').attr('end')){
                end = $('#confirmModalYes').attr('end')
            }
            if($('#confirmModalYes').attr('teacherId')){
                teacherId = $('#confirmModalYes').attr('teacherId')
            }
            if($('#confirmModalYes').attr('isplaceholder')){
                isplaceholder = $('#confirmModalYes').attr('isplaceholder')
            }
            if($('#confirmModalYes').attr('isFuture')){
                isFuture = $('#confirmModalYes').attr('isFuture')
            }
            
            if(bookingId && start){
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.AureusCalendarController.updateBooking}',
                    bookingId, start, end, teacherId, isplaceholder, isFuture, 'true', caseId,'false', 
                    function(result, event){
                        var msg = '';
                        if (event.status) {
                            $('.editDetails').addClass('slds-hide');
                            isReschedule = false;
                            $('#confirmModalNo').html('No');
                            $('#confirmHeader').parent().removeClass('slds-text-align_left');
                            $('#confirmBody').removeClass('slds-text-align_center');
                            $('#confirmModalYes').removeClass('slds-hide');
                            $("#rescheduleClose").trigger("click");
                            if(bookingReschedule.scheduleType == 'commitEmail'){
                                $('#confirmModalYes').attr('data-origin', 'email');
                                $('#confirmModalYes').trigger('click');
                            }else if(bookingReschedule.scheduleType == 'commit'){
                                $('.confirmModal').addClass('slds-hide');
                                if(result.caseId){
                                    redirectToCaseRecord(result.caseId); 
                                    refreshCalendar()
                                }else{
                                    refreshCalendar();
                                }
                            }
                            bookingReschedule.Id = '';
                            bookingReschedule.Type = '';
                            bookingReschedule.resource = '';
                            bookingReschedule.date = '';
                            bookingReschedule.Individual = '';
                            bookingReschedule.isRecurrence = '';
                            bookingReschedule.scheduleType = '';
                            
                            $('#toastMsg').html('Appointment Reschedule successfully');
                            toastLaunch();
                        }
                    },
                    {buffer: false, escape: true}
                );
            }
            
        }//start:added by nishi: 10-sep-2020: for reschadule group class bookings
        else if(origin =='updategroupClass'){
            let bookingId = '';
            let start = '';
            let end = '';
            let teacherId = '';
            let isplaceholder = '';
            let isFuture = '';
            $('#statusOnPage').hide();
            $('#newGroupClassCMP').addClass('slds-hide');
            if($('#confirmModalYes').attr('data-id')){
                bookingId = $('#confirmModalYes').attr('data-id');
            }
            if($('#confirmModalYes').attr('start')){
                start = $('#confirmModalYes').attr('start');
            }
            if($('#confirmModalYes').attr('end')){
                end = $('#confirmModalYes').attr('end')
            }
            if($('#confirmModalYes').attr('teacherId')){
                teacherId = $('#confirmModalYes').attr('teacherId')
            }
            if($('#confirmModalYes').attr('isplaceholder')){
                isplaceholder = $('#confirmModalYes').attr('isplaceholder')
            }
            if($('#confirmModalYes').attr('isFuture')){
                isFuture = $('#confirmModalYes').attr('isFuture')
            }
            console.log('updategroupClass bookingId',bookingId);
            console.log('updategroupClass start',start);
            console.log('updategroupClass end',end);
            console.log('updategroupClass teacherId',teacherId);
            console.log('updategroupClass isplaceholder',isplaceholder);
            console.log('updategroupClass isFuture',isFuture);
            console.log('updategroupClass caseId',caseId);
            // let isResourceId ='false';
            // if(filter.resource && filter.resource != 'Select Resource'){
            //     isResourceId = 'true';
            // }
            updategroupClass(bookingId, start, end, teacherId, isplaceholder, isFuture /*,'true', caseId, isResourceId*/);
        }//end: added by nishi: 10-sep-2020: for reschadule group class bookings
        else if(origin == 'withdrawal'){
            
            bookingId = $('#confirmModalYes').attr('data-id');
            var endDateStr = $('#confirmModalYes').attr('data-endDate');
            var lastLessonDate = $('#confirmModalYes').attr('data-lastLessonDate');
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.cancelSubscriptionRequest}',
                bookingId, /*endDateStr*/lastLessonDate, lastLessonDate, caseId, 'true',
                function(result, event){
                    $('#confirmModal').addClass('slds-hide');
                    if(result){
                        if(result == 'error'){
                            $('#toastMsg').html('Request failure!');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                        }else{
                            redirectToCaseRecord(result);
                            refreshCalendar();
                        }
                        
                    }else if(!result){
                        refreshCalendar();
                    }
                    
                }
            );
        }// @jatin:26-dec-2019: for withdrawal group class bookings
        else if(origin == 'withdrawal-groupLesson'){
            bookingId = $('#confirmModalYes').attr('data-id');
            var endDateStr = $('#confirmModalYes').attr('data-endDate');
            var lastLessonDate = $('#confirmModalYes').attr('data-lastLessonDate');
            cancelGroupLessonSubscriptionRequest( bookingId, lastLessonDate, lastLessonDate, caseId, 'true');
            
        }else if(origin == 'change'){
            var enrolmentId, newTeacher, newPackage, effectiveDate, newTime,oldTeacher,oldPackage, oldTime, oldPackageName, newPackageName;
            enrolmentId = $('#confirmModalYes').attr('data-enrol');
            newTeacher = $('#confirmModalYes').attr('data-teacher');
            newPackage = $('#confirmModalYes').attr('data-package');
            currentEffectiveDate = $('#confirmModalYes').attr('data-currentEffectiveDate');
            newEffectiveDate = $('#confirmModalYes').attr('data-newEffectiveDate');
            newTime = $('#confirmModalYes').attr('data-time');
            oldTeacher =  $('#confirmModalYes').attr('data-oldteacher');
            oldPackage = $('#confirmModalYes').attr('data-oldpackage');
            oldTime = $('#confirmModalYes').attr('data-oldTime');
            oldPackageName = $('#confirmModalYes').attr('data-oldPackageName'); 
            newPackageName = $('#confirmModalYes').attr('data-newPackageName'); 
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.updateEnrolment}',
                enrolmentId, newTeacher, newPackage, currentEffectiveDate, newEffectiveDate, newTime, caseId, 'true', oldTime, oldPackageName, newPackageName, 
                function(result, event){
                   ////console.log('@@@@@@@result',result);
                    refreshCalendar();
                    if(result && result != 'error'){
                        //$('.confirmModal').addClass('slds-hide');
                        $('#ChangeEnrollmentSummaryModal').addClass('slds-hide');
                        $('#toastMsg').html('Enrolment Update Successfully');
                        $('.toastclass').removeClass('slds-theme_error');
                        $('.toastclass').addClass('slds-theme_success');
                        toastLaunch();
                        redirectToCaseRecord(result);
                    }else if(!result){
                        $('#ChangeEnrollmentSummaryModal').addClass('slds-hide');
                        //$('#enrolmentUpdatePopup').addClass('slds-hide');
                        $('#toastMsg').html('Enrolment Update Successfully');
                        $('.toastclass').removeClass('slds-theme_error');
                        $('.toastclass').addClass('slds-theme_success');
                        toastLaunch();
                    }else if(result.msg == 'error'){
                        $('#ChangeEnrollmentSummaryModal').addClass('slds-hide');
                        //$('#enrolmentUpdatePopup').addClass('slds-hide');
                        $('#toastMsg').html('');
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                   
                }
            );
        }else if(origin == 'upgrade'){
            
            $('#confirmModalYes').css('pointer-events','none');
            $('#confirmModalYes').attr('disabled');
            $('#confirmModalNo').css('pointer-events','none');
            $('#confirmModalNo').attr('disabled');
            var bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, casevalues = {};
            bookingId = $('#confirmModalYes').attr('data-id');
            effectiveDate = $('#confirmModalYes').attr('data-date');
            newPackageId = $('#confirmModalYes').attr('data-newPackage');
            oldPackageId = $('#confirmModalYes').attr('data-oldPackage');
            timeSlot = $('#confirmModalYes').attr('data-timeslot');
            
            casevalues.previousPackage = $('#confirmModalYes').attr('data-previousPackage');
            casevalues.newPackage = $('#confirmModalYes').attr('data-newPackageName');
            casevalues.previousLessonDayTime = $('#confirmModalYes').attr('data-previousLessonDayTime');
            casevalues.newLessonDayTime = $('#confirmModalYes').attr('data-newLessonDayTime');
            casevalues.currentDepositonFile = $('#confirmModalYes').attr('data-currentDepositonFile');
            casevalues.newPackageDeposit = $('#confirmModalYes').attr('data-newPackageDeposit');
            casevalues.invoiceForCurrentMonth = $('#confirmModalYes').attr('data-invoiceForCurrentMonth');
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.updatePackageOfCustomer}',
                bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, caseId, 'true', casevalues, 
                function(result, event){
                    
                    $('#confirmModalYes').css('pointer-events','auto');
                    $('#confirmModalYes').removeAttr('disabled');
                    $('#confirmModalNo').css('pointer-events','auto');
                    $('#confirmModalNo').removeAttr('disabled');
                   //console.log('result'+result);
                    if(result && result!='error'){                       
                        $('#confirmModal').addClass('slds-hide');
                        redirectToCaseRecord(result);  
                    }else{
                        $('#upgradeDowngradeSummaryModal').addClass('slds-hide');
                        $('#toastMsg').html('Request failure!<br/>Please try again....');
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }
                    refreshCalendar();
                }
            );
        }// added by nishi:start 11-Aug-2020:for upgrade,Downgrade Ossia Organisation Enrolment
        else if(origin == 'UpgradeEnrolment'){
            upgradeEnrolmentProcess(caseId);
        }else if(origin == 'DowngradeEnrolment'){
            downGradeEnrolmentProcess(caseId);
        }// added by nishi:end: 11-Aug-2020:for upgrade Ossia Organisation Enrolment
        // added by nishi:start 28-Aug-2020:for change Center Enrolment
        else if(origin == 'changeCenter'){
            changeCenterEnrolmentProcess(caseId);
        }// added by nishi:start 28-Aug-2020:for change CenterEnrolment
        //@jatin:04-Jan-2019 : for manage upgrade group class bookings 
        else if(origin == 'upgradeGroupToHigherPackage'){
            //console.log('comfirmyes found');
            $('#confirmModalYes').css('pointer-events','none');
            $('#confirmModalYes').attr('disabled');
            $('#confirmModalNo').css('pointer-events','none');
            $('#confirmModalNo').attr('disabled');
            var bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot,oldTeacher,newTeacher, casevalues = {};
            bookingId = $('#confirmModalYes').attr('data-id');
            effectiveDate = $('#confirmModalYes').attr('data-date');
            newPackageId = $('#confirmModalYes').attr('data-newPackage');
            oldPackageId = $('#confirmModalYes').attr('data-oldPackage');
            timeSlot = $('#confirmModalYes').attr('data-timeslot');
            oldClass = $('#confirmModalYes').attr('data-oldClass');
            newClass = $('#confirmModalYes').attr('data-newclass');
            oldTeacher = $('#confirmModalYes').attr('data-oldTeacherId');
            newTeacher = $('#confirmModalYes').attr('data-newTeacherId');
            casevalues.previousPackage = $('#confirmModalYes').attr('data-previousPackage');
            casevalues.newPackage = $('#confirmModalYes').attr('data-newPackageName');
            casevalues.previousLessonDayTime = $('#confirmModalYes').attr('data-previousLessonDayTime');
            casevalues.newLessonDayTime = $('#confirmModalYes').attr('data-newLessonDayTime');
            casevalues.currentDepositonFile = $('#confirmModalYes').attr('data-currentDepositonFile');
            casevalues.newPackageDeposit = $('#confirmModalYes').attr('data-newPackageDeposit');
            casevalues.invoiceForCurrentMonth = $('#confirmModalYes').attr('data-invoiceForCurrentMonth');
            //console.log('comfirmyes found');
            upgradePackageClassOfCustomer(bookingId, effectiveDate, newPackageId, oldPackageId,newTeacher,oldTeacher, timeSlot, caseId, 'true', casevalues, oldClass,newClass);
        }//@jatin:04-Jan-2019 : for manage update group class to same other class bookings 
        else if(origin == 'GroupToSameClass'){
            //console.log('comfirmyes found');
            $('#confirmModalYes').css('pointer-events','none');
            $('#confirmModalYes').attr('disabled');
            $('#confirmModalNo').css('pointer-events','none');
            $('#confirmModalNo').attr('disabled');
            var bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot,oldTeacher,newTeacher, casevalues = {};
            bookingId = $('#confirmModalYes').attr('data-id');
            effectiveDate = $('#confirmModalYes').attr('data-date');
            newPackageId = $('#confirmModalYes').attr('data-newPackage');
            oldPackageId = $('#confirmModalYes').attr('data-oldPackage');
            timeSlot = $('#confirmModalYes').attr('data-timeslot');
            oldClass = $('#confirmModalYes').attr('data-oldClass');
            newClass = $('#confirmModalYes').attr('data-newclass');
            oldTeacher = $('#confirmModalYes').attr('data-oldTeacherId');
            newTeacher = $('#confirmModalYes').attr('data-newTeacherId');
           
            //console.log('comfirmyes found');
            updateGroupClassToSamePackageOfCustomer(bookingId, effectiveDate, newPackageId, oldPackageId,newTeacher,oldTeacher, timeSlot, caseId, 'true',  oldClass,newClass);
        }
        ////////@jatin:24-Dec-2019 : for manage upgrade class to individual class 
        else if(origin == 'upgradeToIndividualClass'){
            //console.log('comfirmyes found');
            $('#confirmModalYes').css('pointer-events','none');
            $('#confirmModalYes').attr('disabled');
            $('#confirmModalNo').css('pointer-events','none');
            $('#confirmModalNo').attr('disabled');
            var bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, casevalues = {};
            bookingId = $('#confirmModalYes').attr('data-id');
            effectiveDate = $('#confirmModalYes').attr('data-date');
            newPackageId = $('#confirmModalYes').attr('data-newPackage');
            oldPackageId = $('#confirmModalYes').attr('data-oldPackage');
            timeSlot = $('#confirmModalYes').attr('data-timeslot');
            oldTeacher = $('#confirmModalYes').attr('data-oldTeacherId');
            newTeacher = $('#confirmModalYes').attr('data-newTeacherId');

            casevalues.previousPackage = $('#confirmModalYes').attr('data-previousPackage');
            casevalues.newPackage = $('#confirmModalYes').attr('data-newPackageName');
            casevalues.previousLessonDayTime = $('#confirmModalYes').attr('data-previousLessonDayTime');
            casevalues.newLessonDayTime = $('#confirmModalYes').attr('data-newLessonDayTime');
            casevalues.currentDepositonFile = $('#confirmModalYes').attr('data-currentDepositonFile');
            casevalues.newPackageDeposit = $('#confirmModalYes').attr('data-newPackageDeposit');
            casevalues.invoiceForCurrentMonth = $('#confirmModalYes').attr('data-invoiceForCurrentMonth');
           //console.log('comfirmyes found');
            upgradeToIndividualClassOfCustomer(bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot, caseId, 'true', casevalues, oldTeacher,newTeacher);
        
        }
        else if(origin == 'downgrade'){
            var bookingId, requestDate, newPackageId, oldPackageId, timeslot, amount, depositAmount, lessonFeeAmount, casevalues = {};
            bookingId = $('#confirmModalYes').attr('data-id');
            requestDate = $('#confirmModalYes').attr('data-date');
            newPackageId = $('#confirmModalYes').attr('data-newPackage');
            oldPackageId = $('#confirmModalYes').attr('data-oldPackage');
            timeslot = $('#confirmModalYes').attr('data-timeslot');
            amount = $('#confirmModalYes').attr('data-amount');
            depositAmount = $('#confirmModalYes').attr('data-deposit');
            lessonFeeAmount = Math.abs(parseFloat($('#confirmModalYes').attr('data-lessonCharge')));
            
            casevalues.previousPackage = $('#confirmModalYes').attr('data-previousPackage');
            //start: added by nishi: 17-Aug-2020: for next month invoice is differce and differce is greater then 0 then we manage Invoice
            casevalues.lessonNextLessonCharge = Math.abs(parseFloat($('#confirmModalYes').attr('data-lessonNextLessonCharge'))); 
             casevalues.positiveNextMonthInvoiceAmount = $('#confirmModalYes').attr('data-positiveNextMonthInvoiceAmount'); 
             casevalues.negativeNextMonthInvoiceAmount = $('#confirmModalYes').attr('data-negativeNextMonthInvoiceAmount'); 
            //start: added by nishi: 17-Aug-2020: for next month invoice is differce and differce is greater then 0 then we manage Invoice
            casevalues.newPackage = $('#confirmModalYes').attr('data-newPackageName');
            casevalues.previousLessonDayTime = $('#confirmModalYes').attr('data-previousLessonDayTime');
            casevalues.newLessonDayTime = $('#confirmModalYes').attr('data-newLessonDayTime');
            casevalues.currentDepositonFile = $('#confirmModalYes').attr('data-currentDepositonFile');
            casevalues.newPackageDeposit = $('#confirmModalYes').attr('data-newPackageDeposit');
            casevalues.invoiceForCurrentMonth = $('#confirmModalYes').attr('data-invoiceForCurrentMonth');
            casevalues.positiveInvoiceAmount = $('#confirmModalYes').attr('data-positiveInvoiceAmount');
            casevalues.negativeInvoiceAmount = $('#confirmModalYes').attr('data-negativeInvoiceAmount');
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.downgradeSubscriptionRequest}',
                bookingId, requestDate, newPackageId, oldPackageId, timeslot, caseId, 'true', amount, depositAmount, lessonFeeAmount, casevalues, 
                function(result, event){
                    $('#downgradePopup').addClass('slds-hide');
                    $('#confirmDowngradeEnrolment').css('pointer-events','auto');
                    $('#confirmDowngradeEnrolment').removeAttr('disabled');
                    $('.confirmModal').addClass('slds-hide');
                    if(result == 'error'){
                        $('#toastMsg').html('Request failure!<br/>Please try again....');
                        $('.toastclass').removeClass('slds-theme_success');
                        $('.toastclass').addClass('slds-theme_error');
                        toastLaunch();
                    }else if(!result){
                        $('#upgradeDowngradeSummaryModal').addClass('slds-hide');
                        $('#toastMsg').html('Request logged successfully');
                        $('.toastclass').removeClass('slds-theme_error');
                        $('.toastclass').addClass('slds-theme_success');
                        toastLaunch();
                    }else if(result && result != 'error'){
                        redirectToCaseRecord(result); 
                    }
                    refreshCalendar();
                }
            );
        }
    });
    $('#confirmModalNo').click(function(){
        //added By Ravi..on 16 july 2020
        let lessonModes=$('#selectLessonListSection').val();
        //added By Ravi..on 16 july 2020
        var origin = $(this).attr('data-origin');
       //console.log('origin',origin);
       $('#statusOnPage').show();
        if(origin == 'email'){
            $('.confirmModal').addClass('slds-hide');
            refreshCalendar();
        }else if(origin == 'reschedule'){
            bookingReschedule.Id = '';
            bookingReschedule.Type = '';
            bookingReschedule.resource = '';
            bookingReschedule.date = '';
            isReschedule = false;
            $('#containerMessage').addClass('slds-hide');
        }else if(origin == 'createBooking'){
            var bookingDataStr = JSON.stringify(bookingData);
            
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.createBooking}',
                bookingDataStr, 'false', caseId,lessonModes,
                function(result, event){
                    
                    //console.log(result);
                    if (event.status) {
                        if(result.caseId){
                            redirectToCaseRecord(result.caseId);  
                            refreshCalendar();
                        }else if(result.msg == 'false'){
                            $('#newBookingDetails').addClass('slds-hide');
                            refreshNewBookingPopup();
                            refreshCalendar();
                            /*$('.confirmModal').removeClass('slds-hide');
                                $('#confirmBody').html('Do you want to send an email?');
                                $('#confirmHeader').html('Email Confirmation');
                                $('#confirmModalYes').attr('data-origin','email');
                                $('#confirmModalNo').attr('data-origin','email');*/
                        }else if(result.msg == 'duration'){
                            $('#saveNewBooking').css('pointer-events','');
                            $('#makeupHoursErrorMsg').text('Insufficient Makup minutes');
                        }else if(result.msg == 'existing'){
                            $('#newBookingDetails').addClass('slds-hide');
                            refreshNewBookingPopup();
                            $('#toastMsg').html('Cannot create Booking Please Remove Existing Bookings..');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                        }else if(result.msg == 'error'){
                            $('#enrolmentUpdatePopup').addClass('slds-hide');
                            $('#toastMsg').html('Booking cannot be created');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                            refreshCalendar();
                        }
                    }
                    
                }
            );
        }// added by jatin: 19:dec:2019: for manage group booking
        else if(origin == 'createGroupBooking'){
            createGroupbooking('false');
        }//start:added by nishi: 10-sep-2020: for reschadule group class bookings
        else if(origin =='updategroupClass'){
            let bookingId = '';
            let start = '';
            let end = '';
            let teacherId = '';
            let isplaceholder = '';
            let isFuture = '';
            $('#statusOnPage').hide();
            $('#newGroupClassCMP').addClass('slds-hide');
            if($('#confirmModalNo').attr('data-id')){
                bookingId = $('#confirmModalNo').attr('data-id');
            }
            if($('#confirmModalNo').attr('start')){
                start = $('#confirmModalNo').attr('start');
            }
            if($('#confirmModalNo').attr('end')){
                end = $('#confirmModalNo').attr('end')
            }
            if($('#confirmModalNo').attr('teacherId')){
                teacherId = $('#confirmModalNo').attr('teacherId')
            }
            if($('#confirmModalNo').attr('isplaceholder')){
                isplaceholder = $('#confirmModalNo').attr('isplaceholder')
            }
            if($('#confirmModalNo').attr('isFuture')){
                isFuture = $('#confirmModalNo').attr('isFuture')
            }
            console.log('updategroupClass bookingId',bookingId);
            console.log('updategroupClass start',start);
            console.log('updategroupClass end',end);
            console.log('updategroupClass teacherId',teacherId);
            console.log('updategroupClass isplaceholder',isplaceholder);
            console.log('updategroupClass isFuture',isFuture);
            console.log('updategroupClass caseId',caseId);
            // let isResourceId ='false';
            // if(filter.resource && filter.resource != 'Select Resource'){
            //     isResourceId = 'true';
            // }
            updategroupClass(bookingId, start, end, teacherId, isplaceholder, isFuture/*, 'false', caseId, isResourceId*/);
        }//end: added by nishi: 10-sep-2020: for reschadule group class bookings
        else if(origin == 'cancel'){
            $('.confirmModal').addClass('slds-hide');
            bookingId = $('#confirmModalNo').attr('data-id');
            
            var cancelReason = '';
            if($('#confirmModalNo').attr('cancelReason')){
                cancelReason  = $('#confirmModalNo').attr('cancelReason');
            }
            //console.log('@@cancelReason'+cancelReason);
            var makeupReason = '';
            if($('#confirmModalNo').attr('makeupReason')){
                makeupReason = $('#confirmModalNo').attr('makeupReason');
            }
            //console.log('@@makeupReason'+makeupReason);
            var makeupRemark = '';
            if($('#confirmModalNo').attr('makeupRemark')){
                makeupRemark = $('#confirmModalNo').attr('makeupRemark');
            }
            //console.log('@@makeupRemark'+makeupRemark);
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.AureusCalendarController.cancelBooking}',
                bookingId, cancelReason, makeupReason, makeupRemark, 'false', caseId, '',
                function(result, event){
                    if(result.caseId){
                        redirectToCaseRecord(result.caseId);
                    }else{
                        refreshCalendar();
                         //@jatin:1Jan-2020: for refresh calendar then show class booking popup if exist group-class popop
                        var bookingid= $('#newGroupClassCMP').attr('data-groupclassid');
                        var newdate =$('#cancelBooking').attr('data-date');
                        var bookingStatus = $('#cancelBooking').attr('data-type');
                        if(bookingStatus =='Group Lesson'){
                            $('#newGroupClassCMP').addClass('slds-hide');
                            editClassAppointments(bookingid,newdate);
                            $('#CustomersTabitem').trigger('click');
                        }
                    }
                }, 
                {escape: true}
            );
        }// added by Nishi jain:start: 21-Jul-2020: for manage ossia student want to cancel booking	
        else if(origin == 'cancelOssia'){	
            $('.confirmModal').addClass('slds-hide');	
            bookingId = $('#confirmModalNo').attr('data-id');	
           //console.log('origin',origin);	
            var cancelReason = '';	
            if($('#confirmModalNo').attr('cancelReason')){	
                cancelReason  = $('#confirmModalNo').attr('cancelReason');	
            }	
            //console.log('@@cancelReason'+cancelReason);	
            var makeupReason = '';	
            if($('#confirmModalNo').attr('makeupReason')){	
                makeupReason = $('#confirmModalNo').attr('makeupReason');	
            }	
            //console.log('@@makeupReason'+makeupReason);	
            var makeupRemark = '';	
            if($('#confirmModalNo').attr('makeupRemark')){	
                makeupRemark = $('#confirmModalNo').attr('makeupRemark');	
            }	
            var isNoMakeup = '';	
            if($('#confirmModalNo').attr('data-isNoMakeup')){	
                isNoMakeup = $('#confirmModalNo').attr('data-isNoMakeup');	
            }	
            var isfuture = '';	
            if($('#confirmModalYes').attr('data-future')){	
                isfuture = $('#confirmModalYes').attr('data-future');	
            }	
           // $('#cancelOssiaBookingWithoutMakeup').attr({'data-id':bookingId, 'data-reason':cancelReason,'data-caseid':caseId,'data-isfuture':'','data-redirect':'false' });	
           // $('#cancelOssiaBookingWithMakeup').attr({'data-id':bookingId, 'data-reason':cancelReason,'data-caseid':caseId,'data-isfuture':'','data-redirect':'false' });	
           cancelOssiaStudentBooking(bookingId,cancelReason,caseId,isfuture,isNoMakeup,'false',makeupReason,makeupRemark);	
        }	
         // added by Nishi jain:End: 21-Jul-2020: for manage ossia student want to cancel booking
            else if(origin == 'update'){
            let bookingId = '';
            let start = '';
            let end = '';
            let teacherId = '';
            let isplaceholder = '';
            let isFuture = '';
            if($('#confirmModalNo').attr('data-id')){
                bookingId = $('#confirmModalNo').attr('data-id');
            }
            if($('#confirmModalNo').attr('start')){
                start = $('#confirmModalNo').attr('start');
            }
            if($('#confirmModalNo').attr('end')){
                end = $('#confirmModalNo').attr('end')
            }
            if($('#confirmModalNo').attr('teacherId')){
                teacherId = $('#confirmModalNo').attr('teacherId')
            }
            if($('#confirmModalNo').attr('isplaceholder')){
                isplaceholder = $('#confirmModalNo').attr('isplaceholder')
            }
            if($('#confirmModalNo').attr('isFuture')){
                isFuture = $('#confirmModalNo').attr('isFuture')
            }
          //console.log('bookingId',bookingId);
          //console.log('start',start);
          //console.log('end',end);
          //console.log('teacherId',teacherId);
          //console.log('isplaceholder',isplaceholder);
          //console.log('isFuture',isFuture);
          //console.log('caseId',caseId);
            let isResourceId ='false';
            if(filter.resource && filter.resource != 'Select Resource'){
                isResourceId = 'true';
            }
            if(bookingId && start){
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.AureusCalendarController.updateBooking}',
                    bookingId, start, end, teacherId, isplaceholder, isFuture, 'false', caseId, isResourceId,
                    function(result, event){
                       //console.log('result',result);
                        var msg = '';
                        if (event.status) {
                            $('.editDetails').addClass('slds-hide');
                            isReschedule = false;
                            
                            $('#confirmModalNo').html('No');
                            $('#confirmHeader').parent().removeClass('slds-text-align_left');
                            $('#confirmBody').removeClass('slds-text-align_center');
                            $('#confirmModalYes').removeClass('slds-hide');
                            $("#rescheduleClose").trigger("click");
                            if(bookingReschedule.scheduleType == 'commitEmail'){
                                $('#confirmModalYes').attr('data-origin', 'email');
                                $('#confirmModalYes').trigger('click');
                            }else if(bookingReschedule.scheduleType == 'commit'){
                                if(result.caseId){
                                    redirectToCaseRecord(result.caseId); 
                                }else{
                                    refreshCalendar();
                                }
                            }/*else{
                                    $('.confirmModal').removeClass('slds-hide');
                                    $('#confirmBody').html('Do you want to send an email?');
                                    $('#confirmHeader').html('Email Confirmation');
                                    $('#confirmModalYes').attr('data-origin','email');
                                    $('#confirmModalNo').attr('data-origin','email');
                                    $('#confirmModalYes').removeAttr('data-starttime');
                                    $('#confirmModalYes').removeAttr('data-resourceid'); 
                                    $('#confirmModalYes').removeAttr('data-endtime');
                                }*/
                        bookingReschedule.Id = '';
                        bookingReschedule.Type = '';
                        bookingReschedule.resource = '';
                        bookingReschedule.date = '';
                        bookingReschedule.Individual = '';
                        bookingReschedule.isRecurrence = '';
                        bookingReschedule.scheduleType = '';
                        
                        $('#toastMsg').html('Appointment Reschedule successfully');
                        toastLaunch();
                        refreshCalendar();
                    }
                },
                {buffer: false, escape: true}
            );
        }
        
    }else if(origin == 'withdrawal'){
        
        bookingId = $('#confirmModalNo').attr('data-id');
        var endDateStr = $('#confirmModalNo').attr('data-endDate');
        var lastLessonDate = $('#confirmModalNo').attr('data-lastLessonDate');
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.cancelSubscriptionRequest}',
            bookingId, endDateStr, lastLessonDate, caseId, 'false',
            function(result, event){
                $('#confirmModal').addClass('slds-hide');
                if(result == 'error'){
                    $('#toastMsg').html('Request failure!');
                    $('.toastclass').removeClass('slds-theme_success');
                    $('.toastclass').addClass('slds-theme_error');
                    toastLaunch();
                }else{
                    refreshCalendar();
                }
                
            }
        );
    }else if(origin == 'change'){
        var enrolmentId, newTeacher, newPackage, effectiveDate, newTime;
        enrolmentId = $('#confirmModalNo').attr('data-enrol');
        newTeacher = $('#confirmModalNo').attr('data-teacher');
        newPackage = $('#confirmModalNo').attr('data-package');
        effectiveDate = $('#confirmModalNo').attr('data-date');
        newTime = $('#confirmModalNo').attr('data-time');
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.updateEnrolment}',
            enrolmentId, newTeacher, newPackage, effectiveDate, newTime, caseId, 'false', 
            function(result, event){
                if(!result){
                    $('#enrolmentUpdatePopup').addClass('slds-hide');
                    $('#toastMsg').html('Enrolment Update Successfully');
                    $('.toastclass').removeClass('slds-theme_error');
                    $('.toastclass').addClass('slds-theme_success');
                    toastLaunch();
                    refreshCalendar();
                }else if(result == 'error'){
                    $('#enrolmentUpdatePopup').addClass('slds-hide');
                    $('#toastMsg').html('Some Error Occurred...');
                    $('.toastclass').removeClass('slds-theme_success');
                    $('.toastclass').addClass('slds-theme_error');
                    toastLaunch();
                    refreshCalendar();
                }
            }
        );
    }else if(origin == 'upgrade'){
        var bookingId, effectiveDate, newPackageId, oldPackageId, timeSlot;
        bookingId = $('#confirmModalNo').attr('data-id');
        effectiveDate = $('#confirmModalNo').attr('data-date');
        newPackageId = $('#confirmModalNo').attr('data-newPackage');
        oldPackageId = $('#confirmModalNo').attr('data-oldPackage');
        timeSlot = $('#confirmModalNo').attr('data-timeslot');
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.updatePackageOfCustomer}',
            bookingId, effectiveDate, newPackageId, oldPackageId,timeSlot, caseId, 'false',
            function(result, event){
                $('#confirmModalYes').css('pointer-events','auto');
                $('#confirmModalYes').removeAttr('disabled');
                $('#confirmModalNo').css('pointer-events','auto');
                $('#confirmModalNo').removeAttr('disabled');
                
                if(result == 'error'){                       
                    $('#upgradeDowngradeSummaryModal').addClass('slds-hide');
                    $('#toastMsg').html('Request failure!<br/>Please try again....');
                    $('.toastclass').removeClass('slds-theme_success');
                    $('.toastclass').addClass('slds-theme_error');
                    toastLaunch();
                }else if(!result){
                    $('#toastMsg').html('Request Logged Successfully...');
                    $('.toastclass').removeClass('slds-theme_error');
                    $('.toastclass').addClass('slds-theme_success');
                    toastLaunch();
                }else if(result && result != 'error'){
                    $('#confirmModal').addClass('slds-hide');
                    redirectToCaseRecord(result);  
                }
                refreshCalendar();
            }
        );
    }else if(origin == 'downgrade'){
        var bookingId, requestDate, newPackageId, oldPackageId, timeslot;
        bookingId = $('#confirmModalNo').attr('data-id');
        requestDate = $('#confirmModalNo').attr('data-date');
        newPackageId = $('#confirmModalNo').attr('data-newPackage');
        oldPackageId = $('#confirmModalNo').attr('data-oldPackage');
        timeslot = $('#confirmModalNo').attr('data-timeslot');
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.downgradeSubscriptionRequest}',
            bookingId, requestDate, newPackageId, oldPackageId, timeslot, caseId, 'false', 
            function(result, event){
                $('#downgradePopup').addClass('slds-hide');
                $('#confirmDowngradeEnrolment').css('pointer-events','auto');
                $('#confirmDowngradeEnrolment').removeAttr('disabled');
                if(result == 'error'){
                    $('#toastMsg').html('Request failure!<br/>Please try again....');
                    $('.toastclass').removeClass('slds-theme_success');
                    $('.toastclass').addClass('slds-theme_error');
                    toastLaunch();
                }else if(!result){
                    $('#upgradeDowngradeSummaryModal').addClass('slds-hide');
                    $('#toastMsg').html('Request logged successfully');
                    $('.toastclass').removeClass('slds-theme_error');
                    $('.toastclass').addClass('slds-theme_success');
                    toastLaunch();
                }else if(result && result != 'error'){
                    redirectToCaseRecord(result); 
                }
                refreshCalendar();
            }
        );
    }    
    });
    function initResources(centerId, teacherId, resourceId, dateOfAppointment, view, instrument){
      //console.log('centerId -->>>>>> ',centerId);
      //console.log('teacherId -->>>>>> ',teacherId);
      //console.log('resourceId -->>>>>> ',resourceId);
      //console.log('dateOfAppointment -->>>>>> ',dateOfAppointment);
      //console.log('view -->>>>>> ',view);
      //console.log('instrument -->>>>>> ',instrument);
      //console.log('centerId -->>>>>> ',centerId);

        $('#statusOnPage').show();
        var listOfResource = [];
        var listOfEvents = [];
        var minTime;
        var maxTime;
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.getCalendarData}',
            centerId, teacherId, resourceId, dateOfAppointment, instrument,
            function(result, event){
                var msg = '';
                if (event.status) {
                    if(result != '' && result != null && result != 'undefined'){
                        
                        var calendarResult = JSON.parse(result.replace(/(&quot\;)/g,"\""));
                      //console.log('@@@@calendarResult', calendarResult);
                        listOfResource = calendarResult.listOfResources;
                        listOfEvents = calendarResult.listOfEvents;
                        teacherWorkingHours = calendarResult.teachersWorkingHours;
                        /*//console.log('teacherWorkingHours.....',teacherWorkingHours);
                      //console.log('@@@workingHours', calendarResult);
                      //console.log('@@@filter.resource', filter.resource);
                      //console.log('@@@calendarResult.listOfTeachersFilters',calendarResult.listOfTeachersFilters);*/
                        eventsOfCalendar = calendarResult.listOfEvents;
                        if(!filter.resource){
                            getInstruments(calendarResult.listOfTeachersFilters);
                        }else{
                            //$('[id$=teachers]').empty();
                            $('#statusOnPage').hide();
                           //console.log('now -- ',new Date());
                        }
                        
                        
                        if(calendarResult.minTime != '' && calendarResult.minTime != null && calendarResult.minTime != 'undefined'
                           && calendarResult.maxTime != '' && calendarResult.maxTime != null && calendarResult.maxTime != 'undefined'){
                            minTime = calendarResult.minTime;
                            maxTime = calendarResult.maxTime;
                           //console.log('calles calendar');
                            $('#calendar').html('');
                            
                            initCalendar(listOfResource,listOfEvents,dateOfAppointment,minTime,maxTime,view);
                            
                        }else{
                            msg = 'TODAY IS OFF';
                            $('#calendar').html(msg);
                        }
                    }else{
                        msg = 'TODAY IS OFF';
                        $('#calendar').html(msg);
                    }
                } else if (event.type === 'exception') {
                    document.getElementById("responseErrors").innerHTML =  event.message + "<br/>\n<pre>" + event.where + "</pre>";
                } else {
                    document.getElementById("responseErrors").innerHTML = event.message;
                }
            }, // 29-feb-2020: jatin: set timeout
            {buffer: false, escape: true, timeout: 60000}
        );
    }
    
    function getInstruments(filterTeacherList){
        //console.log('filterTeacherList',filterTeacherList);
        $('#instruments').empty();
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.getPickListValues}',
            'Account', 'Major_Instruments_Disciplines__c', 
            function(result, event){
                if (event.status) {
                    var instrumentsOption = '<option value="">All</option>';
                    $(result).each(function(index, value){
                        instrumentsOption += '<option value="'+value+'">'+value+'</option>';
                    });
                    $('#instruments').append(instrumentsOption);
                    $('#instruments').children().each(function(index, value){
                        if($(this).val() == filter.instrument){
                            $('#instruments').val(filter.instrument);
                        }
                    });
                    fillTeacherAccordingToInstrument(filterTeacherList);
                    
                }
            }
        );
    }
    
    function fillTeacherAccordingToInstrument(filterTeacherList){
        $('[id$=teachers]').empty();
        //console.log('@@@filterTeacherList',filterTeacherList);
        var calView = $('#calendar').fullCalendar('getView').name;
        $('[id$=teachers]').append('<option>Select Teacher</option>');
        if(calView != 'agendaTwoDay'){
            $('[id$=teachers]').append('<option value="AllRosteredStaff">All rostered staff</option><option value="AllStaff">All staff</option>');   
        }
        var teacherList = '';
        $(filterTeacherList).each(function(index, value){
            teacherList += '<option value="'+value.id+'">'+value.title+'</option>';
        });
        $('[id$=teachers]').append(teacherList);
        let flag = false;
        $('[id$=teachers]').children().each(function(index, value){
            if($(this).val() == filter.teacher){
                flag = true;
                $('[id$=teachers]').val(filter.teacher);
            }
        });
        if(filterTeacherList.length == 0 && ($('[id$=teachers]').val() != 'Select Teacher' || flag == false)){
            $('[id$=teachers]').val('Select Teacher');
            $('[id$=teachers]').trigger('change');
        }else if(filterTeacherList.length > 0 && $('[id$=teachers]').val() == 'Select Teacher'){
            $('[id$=teachers]').val(filterTeacherList[0].id);
            $('[id$=teachers]').trigger('change');
        }  
        $('#statusOnPage').hide();
       //console.log('now -- ', new Date());
    }
    
    function initEvents(eventId, eventDate){
        //console.log('@@@@@eventDate'+eventDate);
        resetTabs();
        refreshEditAppointment();
        $('.editBooking').removeAttr('disabled');
        $('#cancelBooking').removeAttr('disabled');
        $('#statusLabelOnEdit').text('');
        $('#noShowBooking').removeAttr('disabled');
        $('#completeBooking').removeAttr('disabled');
        $('#submitUpgradeRequest').attr('data-date', eventDate);
        $('#errorMsgReason').html('');
        $('#errorMsgRemark').html('');
        $('.bookingStatus').empty();
        $('.makeupTitle').addClass('slds-hide');
        $('#reasonPopupText').html('Cancel appointment');
        $('.notMakeupHoursShow').removeClass('slds-hide');
        $('.reasonText').html('Reason for Cancellation');
        $('.reasonSection').removeClass('slds-hide');
        $('.makeupCredit').addClass('slds-hide');
        $('.close-popup').removeClass('slds-hide');
        $('#cancelBookingWithReason').removeClass('slds-hide');
        $('#cancelBookingWithMakeupBtn').addClass('slds-hide');
        $('.studentImg').removeAttr('src');
        $('#selectStudio').removeClass('slds-hide');
        $('#selectTeacher').removeClass('slds-hide');
        $('#advanceDetailsSection').addClass('slds-hide');
        $('#enrolmentDetailSection').addClass('slds-hide');
        $('#tab-default-1__item').trigger('click');
        $('#CustomersTabitem').trigger('click');
        $('#button_Group_Cancel_reschedule').removeClass('slds-hide');
        $('.button_Group_reschedule').addClass('slds-size_5-of-12');
        $('.button_Group_reschedule').removeClass('slds-size_7-of-12');
        $('#button_Group_Cancel_reschedule').addClass('slds-size_5-of-12');
        $('#button_Group_Cancel_reschedule').removeClass('slds-size_3-of-12');
        $('#noShowBooking').removeAttr('data-id');
        $('#noShowBooking').removeAttr('data-date');
        $('#noShowBooking').removeAttr('data-type');
        $('#completeBooking').removeAttr('data-id');
        $('#completeBooking').removeAttr('data-date');
        $('#completeBooking').removeAttr('data-type');
        $('#changeNewResources').val('');

        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.AureusCalendarController.getEventDetails}',
            eventId,
            function(result, event){
                var msg = '';
                if (event.status) {
                    if(result != '' && result != null && result != 'undefined'){
                        
                        var eventResult = JSON.parse(result.replace(/(&quot\;)/g,"\""));
                       //console.log('@@@eventResult =====>',eventResult.status);
                        $('#completeBooking').attr({'data-id':eventResult.Id, 'data-type':eventResult.type, 'data-status':'Completed'});
                        $('#noShowBooking').attr({'data-id':eventResult.Id, 'data-type':eventResult.type, 'data-status':'No-show'});
                        $('#updateFutureOnlineLesson').attr({'data-date': eventDate, 'data-enrolment': eventResult.enrolment});
                                                  
                        if(eventResult.status == 'Completed' || eventResult.status == 'No-show'){
                            $('#completeBooking').attr('disabled','true');
                            $('#noShowBooking').attr('disabled','true');
                            $('#cancelBooking').attr('disabled','true');
                        }
                        if(eventResult.status == 'Blocked'){
                            $('#releaseBookingConfirm').attr({'data-enrolmentId': eventResult.enrolment, 'data-bookingId': eventResult.Id});
                        }
                        // 25-Nov-2019 if  open  Appointment Details  to group class bookings then we show upgrade bootton 
                       //console.log('eventResult.rType',eventResult);
                        $('#closeOnlyByResourceBooking').remove();
                        if(eventResult.rType == 'Facility'){
                            $('#cancelBooking').addClass('slds-hide');
                            $('#completeBooking').addClass('slds-hide');
                            $('#rescheduleBookingOnlyResource').addClass('slds-hide');
                            $('#noShowBooking').addClass('slds-hide');
                            $('#button_Group_reschedule').append('<button style="width: 110px" class="slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Close" aria-pressed="false" onclick="cancelRescheduling();return false;" id="closeOnlyByResourceBooking">Close<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" /></svg><span class="slds-assistive-text">Close</span></button>');
                        }else if(eventResult.rType == 'Lesson'){
                                $('#cancelBooking').removeClass('slds-hide');
                                $('#completeBooking').removeClass('slds-hide');
                                $('#rescheduleBookingOnlyResource').removeClass('slds-hide');
                                $('#noShowBooking').removeClass('slds-hide');
                                //jatin: 22-jan-2020 : for add attribute according to 'Piano Viewing' booking
                                if(eventResult.Type == 'Piano Viewing'){
                                    $('#noShowBooking').attr('data-id',eventResult.Id);
                                    $('#noShowBooking').attr('data-date',eventDate);
                                    $('#noShowBooking').attr('data-type',eventResult.type);
                                    $('#completeBooking').attr('data-id',eventResult.Id);
                                    $('#completeBooking').attr('data-date',eventDate);
                                    $('#completeBooking').attr('data-type',eventResult.type);
                                    $('#cancelBooking').removeClass('slds-hide');
                                    $('#completeBooking').removeClass('slds-hide');
                                    $('#noShowBooking').removeClass('slds-hide');
                                }
                        }else if(eventResult.rType == 'Group Lesson'){
                                // if booking type is group lesson then schadule and cancel button will be hide 
                                // only user can upgrade booking and manage attendance
                                $('#noShowBooking').attr('data-id',eventResult.Id);
                                $('#noShowBooking').attr('data-date',eventDate);
                                $('#noShowBooking').attr('data-type',eventResult.type);
                                $('#completeBooking').attr('data-id',eventResult.Id);
                                $('#completeBooking').attr('data-date',eventDate);
                                $('#completeBooking').attr('data-type',eventResult.type);
                                $('#cancelBooking').removeClass('slds-hide');
                                $('#completeBooking').removeClass('slds-hide');
                                $('#noShowBooking').removeClass('slds-hide');
                                $('#advanceOptionsBtn').remove();
                                $('#updateEnrolmentonGroupClick').attr('data-id',eventResult.Id);
                                //@@ jatin: 19-dec-2019: for show advance action only group lesson type not for  makeup booking
                                if(eventResult.type == 'Group Lesson'){
                                    $('#button_Group_EditDetails').append('<button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" title="Advance Actions" aria-pressed="false" id="advanceOptionsBtn" onclick="showAdvanceOptions();return false;" data-id="'+eventId+'" data-bookingType="'+eventResult.rType+'">Advance Actions <svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#settings')}" /></svg><span class="slds-assistive-text">Advance Actions</span></button>');
                                }else{
                                   //console.log(eventResult.type); 
                                }
                                /*@jatin: 17-dec-2019: for cancel group lesson booking 
                                $('#button_Group_Cancel_reschedule').addClass('slds-hide');
                                */$('.button_Group_reschedule').removeClass('slds-size_5-of-12');
                                $('.button_Group_reschedule').addClass('slds-size_7-of-12');
                                $('#button_Group_Cancel_reschedule').removeClass('slds-size_5-of-12');
                                $('#button_Group_Cancel_reschedule').addClass('slds-size_3-of-12');
                               /* $('#cancelBooking').addClass('slds-hide');
                                $('#editBooking').addClass('slds-hide'); */
                                $('#rescheduleBookingOnlyResource').addClass('slds-hide');
                            }
                           //console.log(isDateTimeInFuture(eventDate));
                           //console.log(eventDate);
                            if(isDateTimeInFuture(eventDate)){
                                $('#completeBooking').attr('disabled','true');
                                $('#noShowBooking').attr('disabled','true');
                            }else{
                                //Commenting this code for temporary basis need to uncomment it later.
                                /*$('#cancelBooking').attr('disabled','true');
                                $('.editBooking').attr('disabled','true');*/
                            }
                           /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                          var employeeId = $('[id$=employee]').val();
                        console.log('employeeId',employeeId);
                             if(employeeId || employeeId== undefined){
                                 $('#detailPopupTitle').text('Instrument Viewing Booking '+eventResult.name);
                             }else{
                                   $('#detailPopupTitle').text('Appointment Details '+eventResult.name);
                            }
                           
                            $('#statusIconOnEdit').empty();
                            $('#statusLabelOnEdit').text(eventResult.status);

                            if(eventResult.status == 'Scheduled'){
                                $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clock')}" /></svg>');
                            }else if(eventResult.status == 'Pending'){
                                $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#reminder')}" /></svg>');
                            }else if(eventResult.status == 'Completed'){
                                if(eventResult.type == 'Trial'){        
                                    $('#enrollNowProcess').removeClass('slds-hide');        
                                    $('#enrollNowProcess').attr({'data-id': eventResult.Id, 'enrolment-Id': eventResult.enrolment});        
                                     
                                }
                                $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" /></svg>');
                            }else if(eventResult.status == 'No-show'){
                                $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" /></svg>');
                            }else if(eventResult.status == 'Canceled'){
                                $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clear')}" /></svg>');
                            }
                            
                            if(eventResult.type == 'Trial'){
                                $('#enrolmentDetailSection').removeClass('slds-hide');
                                $('#sendTrialEnrollmentLink').attr({'data-id': eventId});
                            }
                            $('#updateEnrolmentBtn').attr('data-enrol', eventResult.enrolment);
                            $('#CenterUpdateEnrolmentonClick').attr('data-enrol', eventResult.enrolment);
                            $('#submitUpgradeRequest').attr('data-enrolment', eventResult.enrolment);
                            $('#submitUpgradeClassRequest').attr('data-enrolment', eventResult.enrolment);
                            $('#submitDowngradeRequest').attr('data-enrolment', eventResult.enrolment);
                            $('#editBooking').attr('data-id', eventResult.Id);
                            $('.editBooking').attr({'data-id': eventResult.Id, 'data-type': eventResult.type, 'data-individual': eventResult.Individual});
                            
                            if(!eventResult.studentFirstName){
                                eventResult.studentFirstName = '';
                            }
                            if(!eventResult.studentLastName){
                                eventResult.studentLastName = '';
                            }
                            if(!eventResult.parentFirstName){
                                eventResult.parentFirstName = '';
                            }
                            if(!eventResult.parentLastName){
                                eventResult.parentLastName = '';
                            }
                            $('.editCustomerDetails').attr('data-id', eventResult.studentId);
                            if(eventResult.parentId){
                                $('.editCustomerDetails').attr('data-parentId', eventResult.parentId);
                            }else{
                                $('.editCustomerDetails').attr('data-parentId', eventResult.studentId);
                            }
                                    
                            $('#cancelBooking').attr('data-id',eventResult.Id);
                            $('#cancelBooking').attr('data-date',eventDate);
                            $('#cancelBooking').attr('data-type',eventResult.type);
                            $('#cancelBooking').attr('data-bookingtype',eventResult.type);
                            $('#lesson').text(eventResult.service);
                            $('#teacherName').text(eventResult.staffMember);
                            $('#teacherNameEditPopup').text(eventResult.staffMember);
                            // added By Ravi on 3rd july 2020..lessonTypeName
                            if(eventResult.type == 'Trial' || eventResult.type == 'Regular'|| eventResult.type == 'Make-up'|| eventResult.type == 'Ad-hoc'){
                                $('#lessonTypeName').text(eventResult.lessonType);  
                                // added By Ravi on 8 july 2020..lessonTypeName
                                if(eventResult.lessonURL != null && eventResult.lessonURL !=''){	
                                    $('#onlineLesson').removeClass('slds-hide');	
                                    $('#lessonURL').val(eventResult.lessonURL);        	
                                    //$('#lessonURL').attr('href',eventResult.lessonURL);	
                                    $('#lessonPassCode').text(eventResult.lessonPassCode); 	
                                }else{	
                                    $('#onlineLesson').addClass('slds-hide');	
                                }
                                // added By Ravi on 8 july 2020..lessonTypeName
                            }
                            
                            $('#teacherNameEditPopup').attr('href','/'+eventResult.staffMemberId);
                            $('#submitUpgradeRequest').attr('data-teacherId', eventResult.staffMemberId);
                            $('#submitUpgradeClassRequest').attr('data-teacherId', eventResult.staffMemberId);
                            $('#submitDowngradeRequest').attr('data-teacherId', eventResult.staffMemberId);
                            var centerName = eventResult.centerName;
                            $('#centerName').html(centerName);
                            //  start:added by nishi: 30-Jul-2020: for change Resouce current enrolment 
                            //Start:1-aug-2020:nishi: #1	Change studio option not appearing in online bookings
                            //#2	Also, can we remove Change lesson mode and Change studio options if the booking is completed/cancelled

                            if(eventResult.status == 'Completed' || eventResult.status == 'Canceled'){
                                $('#changeResourceType').addClass('slds-hide');
                                $('#changeLessonType').addClass('slds-hide');
                                
                            }else{
                                $('#changeResourceType').removeClass('slds-hide');
                                $('#changeLessonType').removeClass('slds-hide');
                                /*if(eventResult.lessonType =='In Centre'){
                                    $('#changeResourceType').removeClass('slds-hide');
                                }else{
                                    $('#changeResourceType').addClass('slds-hide');
                                }*/
                            }
                              //End:1-aug-20202:nishi: #1	Change studio option not appearing in online bookings
                            //#2	Also, can we remove Change lesson mode and Change studio options if the booking is completed/cancelled
                           
                            $('#ResourceTypeName').html(eventResult.resourceName);
                            $('#ResourceTypeName').attr('data-resourceName',eventResult.resourceName);
                            $('#ResourceTypeName').attr('data-enrolment', eventResult.enrolment);
                            $('#ResourceTypeName').attr('data-teacherId',eventResult.staffMemberId);
                            $('#ResourceTypeName').attr('data-resourceId',eventResult.resourceId);
                            $('#ResourceTypeName').attr('data-bookingId',eventResult.Id);
                            $('#ResourceTypeName').attr('data-Type',eventResult.type);
                            $('#ResourceTypeName').attr('data-date',eventDate);
                            $('#ResourceTypeName').attr('data-Individual',eventResult.Individual);
                            $('#ResourceTypeName').attr('data-isRecurrence','false');
                            $('#changeNewResources').val('');
                            $('#changeNewResources').empty();
                            var selectresource = '<option value="">Select Any Studio </option>';
                            if(eventResult.listOfAvailableResources != null && eventResult.listOfAvailableResources.length > 0){
                                $(eventResult.listOfAvailableResources).each(function(inex, value){
                                    selectresource += '<option value="'+value.Id+'-'+value.Name+'">'+value.Name+'</option>';
                                });
                            }
                            $('#changeNewResources').append(selectresource);
                            $('#changeLessonResource').removeClass('slds-hide');
                            //  end:added by nishi: 30-Jul-2020: for change Resouce current enrolment 
                            // if(filter.resource && filter.resource != 'Select Resource'){
                            //     bookingReschedule.resource = eventResult.staffMemberId;
                            //     bookingReschedule.resourceId = eventResult.resourceId;
                            // } 
                                
                            $('#centerName').attr('href', '/'+eventResult.centerId);
                            $('#submitUpgradeRequest').attr('data-centerId', eventResult.centerId);
                            $('#submitUpgradeClassRequest').attr('data-centerId', eventResult.centerId);
                            $('#prePaymentId').attr('data-centerId', eventResult.centerId);
                            $('#prePaymentId').attr('data-enrol', eventResult.enrolment);
                            $('#submitDowngradeRequest').attr('data-centerId', eventResult.centerId);
                            $('#centerNameBusyView').html(centerName);
                            $('#resource').text(eventResult.resource);
                            $('#dateAndTime').text(eventResult.dateAndTime);
                            $('.sendEmail').attr('data-bookingId', eventResult.Id);
                            if(eventResult.parentId){
                                $('.sendEmail').attr('data-parentId', eventResult.parentId);
                            }else{
                                $('.sendEmail').attr('data-parentId', eventResult.studentId);
                                
                            }
                            
                            var dateTime = eventResult.dateAndTime;
                            var res;
                            if(dateTime){
                                res =  dateTime.split("at"); 
                                $('#date').text(res[0]);
                                $('#time').text(res[1]);
                            }
                             if(eventResult.processStatus == 'Pending'){
                                //console.log('%%%%eventResult.processStatus '+eventResult.processStatus );
                                $('#advanceDetailsSection').removeClass('slds-hide');
                                $('#processTypeEdit').html(eventResult.processType);
                                $('#newPackageEdit').attr('href', '/'+eventResult.newPackage);
                                $('#newPackageEdit').html(eventResult.newPackageName);
                                $('#advanceActionRequestedBy').html(eventResult.requestedBy);
                                if(eventResult.processRequestDate){
                                    $('#requestDateEdit').html(convertDateToMoment(eventResult.processRequestDate));
                                }
                                
                                if(eventResult.processEffectiveDate){
                                    $('#effectiveDateEdit').html(convertDateToMoment(eventResult.processEffectiveDate));
                                }
                                
                                if(eventResult.noticeStartDate){
                                    $('#noticeStartEdit').html(convertDateToMoment(eventResult.noticeStartDate));
                                }
                                
                                if(eventResult.noticeEndDate){
                                    $('#noticeEndEdit').html(convertDateToMoment(eventResult.noticeEndDate));
                                }
                                
                                
                            }
                           

                            $('#date').text(convertDateToMoment(eventResult.eventDateTime.split('T')[0]));
                            $('.studentImg').attr('src','/servlet/servlet.FileDownload?file='+eventResult.teacherAttachmentId+'');
                            $('#duration').text(eventResult.duration);
                            $('#price').text(eventResult.price);
                            $('#totalPrice').text('$'+eventResult.price);
                            
                            $('#lessonOnCancel').text(eventResult.service);
                            $('#teacherOnCancel').text(eventResult.staffMember);
                            $('#dateAndTimeOnCancel').text(convertDateToMoment(eventResult.eventDateTime.split('T')[0]) +' '+convertTimeToMoment(eventResult.eventDateTime.split('T')[1].split(':')[0], eventResult.eventDateTime.split('T')[1].split(':')[1]));
                            
                            $('#name').text(eventResult.studentFirstName+' '+eventResult.studentLastName+' - '+eventResult.parentFirstName +' '+eventResult.parentLastName);
                            
                            $('#name1').text(eventResult.studentFirstName+' '+eventResult.studentLastName);
                            $('#name1').attr('href', '/'+eventResult.studentId);
                            $('#parentname1').text(eventResult.parentFirstName +' '+eventResult.parentLastName);
                            $('#parentname1').attr('href', '/'+eventResult.parentId);
                            $('.popupDetails').removeClass('slds-hide');
                            if(eventResult.rType == 'Lesson'){
                                $('#selectStudio').addClass('slds-hide');
                            }else if(eventResult.rType == 'Facility'){
                                $('#selectTeacher').addClass('slds-hide');
                            }
                            
                            $('#fname').val(eventResult.studentFirstName);
                            $('#lname').val(eventResult.studentLastName);
                            $('#telephone').val(eventResult.parentPhone);
                            $('#parentsms').val(eventResult.parentMobile);
                            $('#parentEmail').val(eventResult.parentEmail);
                            
                            $('#parentfname').val(eventResult.parentFirstName);
                            $('#parentlname').val(eventResult.parentLastName);
                            $('#popoverTitle').text(eventResult.studentFirstName+ ' '+eventResult.studentLastName + ' - ' +eventResult.parentFirstName+ ' '+eventResult.parentLastName);
                            
                            $('#phone').text(eventResult.parentMobile);
                            $('#phone').attr('href', 'tel:'+eventResult.parentMobile);
                            $('#email').text(eventResult.parentEmail);
                            
                            $('#studentName').text(eventResult.studentFirstName+ ' '+eventResult.studentLastName);
                            $('#parentName').text(eventResult.parentFirstName+ ' '+eventResult.parentLastName);
                            $('#parentMobile').text(eventResult.parentMobile);
                            $('#parentPhone').text(eventResult.parentPhone);
                            $('#parentEmail').text(eventResult.parentEmail);
                            
                            $('#servicePackagName').text(eventResult.service);
                            $('#serviceStaff').text(eventResult.staffMember);
                            $('#serviceResource').text(eventResult.resource);
                            $('#serviceTime').text(eventResult.timeOfBooking);
                            
                            $('#serviceDuration').text(eventResult.duration);
                            
                            $('#servicePrice').text(eventResult.price);
                            
                            $('.editDetails').removeClass('slds-hide'); 
                            
                            if(eventResult.contentNoteList && eventResult.contentNoteList.length > 0){
                                $('#bookingNotesTBody').html('');
                                for(var i = 0; i < eventResult.contentNoteList.length; i++){
                                    var title = eventResult.contentNoteList[i].Title;
                                    var body = eventResult.contentNoteList[i].TextPreview;
                                    var dateTime = new Date(eventResult.contentNoteList[i].CreatedDate);
                                    createdDate = moment(dateTime).format("D MMM YYYY");
                                    createdTime = moment(dateTime).format("HH:mmA");
                                    ownerName = eventResult.contentNoteList[i].Owner.Name;
                                    
                                    $('#bookingNotesTBody').append('<tr class="slds-line-height_reset"> <th class="" scope="col"> <div class="slds-truncate">Title</div> </th> <th class="" scope="col"> <div class="slds-truncate">Body</div> </th> <th class="" scope="col"> <div class="slds-truncate">Date-Time</div> </th> <th class="" scope="col"> <div class="slds-truncate">Created By</div> </th> </tr> </thead> <tbody> <tr class="slds-hint-parent"> <td scope="row"> <div class="slds-truncate">'+ title +'</div> </td> <td scope="row" title="'+ body +'"> <div class="slds-truncate">'+ body +'</div> </td> <td scope="row"> <div class="slds-truncate">'+ createdDate +' at '+createdTime +'</div> </td> <td scope="row"> <div class="slds-truncate">' +ownerName+ '</div> </td> </tr>');
                                }
                            }else{
                                $('#bookingNotesTBody').html('');
                            }
                            
                            if(eventResult.bookingHistoryList.length > 0){
                                $('#HistoryCount').html(eventResult.bookingHistoryList.length);
                                $('#bookingHistory').html('');
                                for(var i = 0; i < eventResult.bookingHistoryList.length; i++){
                                    
                                    var description = eventResult.bookingHistoryList[i].Description;
                                    var historyDateTime = eventResult.bookingHistoryList[i].DateOfHistory;
                                    var historyBy = eventResult.bookingHistoryList[i].HistoryBy;
                                    if(historyBy){
                                        $('#bookingHistory').append('<div class="eventHistory"><h1><span class="slds-page-header__title slds-truncate headerTitle"> ' +historyDateTime+ '<span class="historyBy"> - by '+ historyBy +'</span></span></h1> '+description+ ' </div>');
                                    }else{
                                        $('#bookingHistory').append('<div class="eventHistory"><h1><span class="slds-page-header__title slds-truncate headerTitle"> ' +historyDateTime+ ' </span></h1> '+description+ ' </div>');
                                    }
                                }
                            }else{
                                $('#HistoryCount').html(eventResult.bookingHistoryList.length);
                                $('#bookingHistory').html('');
                            }
                        }
                    } else if (event.type === 'exception') {
                        document.getElementById("responseErrors").innerHTML = event.message + "<br/>\n<pre>" + event.where + "</pre>";
                    } else {
                        document.getElementById("responseErrors").innerHTML = event.message;
                    }
                }, 
                    {escape: true}
                );
            }
                                function saveBookingNote(){
                                    var title = $('#title').val();
                                    var note = $('#note').val();
                                    
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.AureusCalendarController.saveBookingNote}',
                                        title,note,eventId,
                                        function(result, event){
                                            if (event.status) {
                                                if(result != '' && result != null && result != 'undefined'){
                                                    var bookingNoteResult = JSON.parse(result.replace(/(&quot\;)/g,"\""));
                                                    if(bookingNoteResult.title){
                                                        $('#title').val('');
                                                        $('#note').val('');
                                                        
                                                        var title = bookingNoteResult.title;
                                                        var body = bookingNoteResult.Body;
                                                        var dateTime = new Date(bookingNoteResult.createdDate);
                                                        createdDate = moment(dateTime).format("D MMM YYYY");
                                                        createdTime = moment(dateTime).format("HH:mmA");
                                                        ownerName = bookingNoteResult.CreatedBy;
                                                        
                                                        $('#bookingNotesTBody').append('<tr class="slds-line-height_reset"> <th class="" scope="col"> <div class="slds-truncate">Title</div> </th> <th class="" scope="col"> <div class="slds-truncate">Body</div> </th> <th class="" scope="col"> <div class="slds-truncate">Date-Time</div> </th> <th class="" scope="col"> <div class="slds-truncate">Created By</div> </th> </tr> </thead> <tbody> <tr class="slds-hint-parent"> <td scope="row"> <div class="slds-truncate">'+ title +'</div> </td> <td scope="row"> <div class="slds-truncate">'+ body +'</div> </td> <td scope="row"> <div class="slds-truncate">'+ createdDate +' at '+createdTime +'</div> </td> <td scope="row"> <div class="slds-truncate">' +ownerName+ '</div> </td> </tr>');
                                                        
                                                    }
                                                }
                                            } else if (event.type === 'exception') {
                                                document.getElementById("responseErrors").innerHTML =  event.message + "<br/>\n<pre>" + event.where + "</pre>";
                                            } else {
                                                document.getElementById("responseErrors").innerHTML = event.message;
                                            }
                                        }, 
                                        {escape: true}
                                    );
                                    $('.addNotes').addClass('slds-hide');
                                }
                               //start: added by nishi: 5-Aug:2020: for change all future Lesson Mode and update Online Url PassCode
                                function updateOnlineLesson(isFuture){
                                    var lessonMode = $('#lessonTypeName').text();
                                    var eventId = '';
                                    if(isFuture==='true'){
                                        eventId = $('#updateFutureOnlineLesson').attr('data-enrolment');
                                    }else{
                                        eventId = $('#updateFutureOnlineLesson').attr('data-id');
                                    }
                                    var changedate =$('#updateFutureOnlineLesson').attr('data-date');
                                   //console.log('lessonMode',lessonMode);
                                   //console.log('eventId',eventId);
                                   //console.log('isFuture',isFuture);
                                   //console.log('changedate',changedate);
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.AureusCalendarController.updateOnlineLesson}',
                                        lessonMode,eventId,isFuture,changedate,
                                        function(result, event){
                                            if (event.status) {
                                                if(result != '' && result != null && result != 'undefined'){
                                                    $('.editDetails').addClass('slds-hide');
                                                    $('.changeLesson').addClass('slds-hide');
                                                    //start:added by nishi: 30-Jul-2020: for change Resouce current enrolment
                                                    $('#showResources').addClass('slds-hide');
                                                    $('#showChangeLesson').removeClass('slds-hide');
                                                    $('#updateOnlineLesson').removeClass('slds-hide');
                                                    $('#updateResource').addClass('slds-hide');
                                                    $('#ResourceTypeName').removeAttr('data-resourceId');
                                                    $('#ResourceTypeName').removeAttr('data-bookingId');
                                                    $('#ResourceTypeName').removeAttr('data-enrolmentId');
                                                    $('#updateFutureOnlineLesson').removeAttr('data-date');
                                                    $('#updateFutureOnlineLesson').removeAttr('data-id');
                                                    $('#updateFutureOnlineLesson').removeAttr('data-enrolmentId');
                                                    refreshCalendar();
                                                    
                                                }
                                            } else if (event.type === 'exception') {
                                                document.getElementById("responseErrors").innerHTML =  event.message + "<br/>\n<pre>" + event.where + "</pre>";
                                            } else {
                                                document.getElementById("responseErrors").innerHTML = event.message;
                                            }
                                        }, 
                                        {escape: true}
                                    );
                                   
                                   
                                }
                                //end: added by nishi: 5-Aug:2020: for change all future Lesson Mode and update Online Url PassCode
                                function ClipBoard(copytextid, holdtextid){
                                    copyToClipboard(copytextid);
                                }
                                function copyToClipboard(elementId) {
                                    // Create an auxiliary hidden input
                                    var aux = document.createElement("input");
                                    // Get the text from the element passed into the input
                                    var msgLesson='To join this video Meeting Click this link:'+document.getElementById('lessonURL').value +',\n Meeting PassCode:'+ document.getElementById('lessonPassCode').textContent;	
                                    aux.setAttribute("value",msgLesson);
                                    // Append the aux input to the body
                                    document.body.appendChild(aux);
                                    // Highlight the content
                                    aux.select();
                                    // Execute the copy command
                                    document.execCommand("copy");
                                    // Remove the input from the body
                                    document.body.removeChild(aux);
                                } 
                                // End Added by Ravi .. on 8 july 2020
                                
                                function initCalendar(listOfResource,listOfEvents,dateOfAppointment,minTime,maxTime,view){
                                  //console.log('listOfResource',listOfResource);
                                  //console.log('listOfEvents',listOfEvents);
                                    $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');return false;");
                                    $('#cancelChanges').attr('onclick','cancelRescheduling();return false;');
                                    $('#closeRescheduleIconButton').attr('onclick', 'cancelRescheduling();return false;');
                                    $('#calendar').fullCalendar('destroy');
                                    $('#calendar').fullCalendar({
                                        defaultView: view,
                                        groupByDateAndResource: true,
                                        schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
                                        editable: true,
                                        selectable: true,
                                        defaultDate: dateOfAppointment[0],
                                        eventLimit: true,
                                        minTime: minTime,
                                        maxTime: maxTime,
                                        
                                        slotDuration: '00:15:00',
                                        slotLabelFormat: 'hh:mm a',  //'h(:mm) a',
                                        slotMinutes: 30,
                                        titleFormat: 'ddd, MMM DD YYYY',
                                        header: {
                                            left: 'prev,myCustomButton,next today',
                                            center: 'title',
                                            right: 'agendaDay,agendaTwoDay'
                                        },
                                        customButtons:{
                                            myCustomButton:{
                                                text: new Date().toJSON().slice(0,10).replace(/-/g,'/'),
                                                click: function(){
                                                }
                                            }
                                        },
                                        views: {
                                            agendaTwoDay: {
                                                type: 'agenda',
                                                duration: { week: 1 },
                                                // groupByResource: true
                                                columnFormat: 'ddd D MMM',
                                            },
                                            week: {
                                                titleFormat: 'D MMMM YYYY',
                                                titleRangeSeparator: ' to ',
                                            }
                                        },
                                        allDaySlot: false,
                                        resources: listOfResource,
                                        events: listOfEvents,
                                        timeFormat: 'hh:mm a',
                                        nowIndicator: true,
                                        now: moment(),
                                        eventAfterRender:function( event, element, view ) {
                                            $(element).addClass('fetch-'+event.id);
                                        },
                                        eventAfterAllRender: function( view, element ){
                                            setTimeout(function(){
                                                var calView = $('#calendar').fullCalendar('getView').name;
                                                if(calView == 'agendaTwoDay'){
                                                    showTimeOnResourceColumn(7,'week');
                                                }else{
                                                    showTimeOnResourceColumn(listOfResource.length,'day');
                                                }
                                            },40);
                                            $('.fc-slats tr').each(function(){
                                                var time = $(this).attr('data-time');
                                                if(time && time.includes('00:00')){
                                                    $(this).children('td:nth-child(2)').addClass("black");
                                                }
                                                
                                                if(listOfResource.length > 1){
                                                    var width = '';
                                                    if(listOfResource.length > 6){
                                                        width = (listOfResource.length * 15);
                                                        $('.fc-view-container').css({'width': width+'vw', 'overflow-x': 'visible'});
                                                    }
                                                }
                                            });
                                            
                                            
                                            $('.fc-resource-cell').click(function(){
                                              //console.log('data-resource-id',$(this).attr('data-resource-id'))
                                                // Jatin: 21-jan-2020: for get employee records according to selected employee othew wise show teahcers
                                               /*Commented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                                              
                                                var employeeId = $('[id$=employee]').val();
                                               //console.log('employeeId',employeeId);
                                                if(employeeId || employeeId== undefined){
                                                   //console.log('employeeId',employeeId);
                                                    var isemployee = false;
                                                    var resourceId = $(this).attr('data-resource-id');
                                                    
                                                   //console.log('resourceId',resourceId);
                                                    var calView = $('#calendar').fullCalendar('getView').name;
                                                   //console.log('calView',calView);
                                                    if(calView != 'agendaTwoDay'){
                                                        $('.employee').children().each(function(index, value){
                                                            if($(this).val() == resourceId){
                                                                isemployee = true;
                                                            }
                                                        });
                                                       //console.log('isemployee',isemployee);
                                                        if(isemployee){
                                                            filter.employee = resourceId;
                                                            $('.employee').val(resourceId);
                                                            $('.fc-agendaTwoDay-button').trigger('click');
                                                        }   
                                                    }
                                                }else{
                                                    var isTeacher = false;
                                                    var isResource = false;
                                                    var resourceId = $(this).attr('data-resource-id');
                                                   //console.log('resourceId',resourceId);
                                                    var calView = $('#calendar').fullCalendar('getView').name;
                                                    if(calView != 'agendaTwoDay'){
                                                        $('.teachers').children().each(function(index, value){
                                                            if($(this).val() == resourceId){
                                                                isTeacher = true;
                                                            }
                                                        });
                                                        if(!isTeacher){
                                                            $('[id$=resources]').children().each(function(index, value){
                                                                if($(this).val() == resourceId){
                                                                    isResource = true;
                                                                }
                                                            });
                                                        }
                                                        
                                                        if(isTeacher){
                                                            teacher = resourceId;
                                                            filter.teacher = resourceId;
                                                            $('.teachers').val(teacher);
                                                            filter.resource = 'Select Resource';
                                                            $('.fc-agendaTwoDay-button').trigger('click');
                                                        }else if(isResource){
                                                            teacher = '';
                                                            filter.teacher = '';
                                                            $('[id$=resources]').val(resourceId);
                                                            filter.resource = resourceId;
                                                            $('.fc-agendaTwoDay-button').trigger('click');
                                                        }   
                                                    }  
                                                }
                                            });
                                            
                                            $('.fc-day-header').click(function(){
                                                var dateHeader = $(this).attr('data-date');
                                                // Jatin: 21-jan-2020: for get employee records according to selected date employee othew wise show teahcers
                                               /*Commented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                                                
                                                var employeeId = $('[id$=employee]').val();
                                               //console.log('employeeId',employeeId);
                                                
                                                if(employeeId || employeeId== undefined){
                                                   //console.log('employeeId',employeeId);
                                                    var isemployee = false;
                                                    
                                                    if(filter.employee && filter.employee != ''){
                                                        isemployee = true;
                                                    } 
                                                   //console.log('isemployee',isemployee);
                                                    $('[id$=employee]').children().each(function(index, value){
                                                        if($(this).val() == 'AllRosteredStaff' || $(this).val() == 'AllStaff'){
                                                            $(this).remove();
                                                        }
                                                    });
                                                    $('[id$=employee]').children().first().after('<option value="AllRosteredStaff">All rostered staff</option><option value="AllStaff">All staff</option>');
                                                    
                                                    if(isemployee){
                                                        filter.employee = 'AllRosteredStaff';
                                                        initEmployeeResources(center, employeeId, [dateHeader], 'agendaDay');
                                                        $('.employee').val(filter.employee);
                                                    }
                                                }else{
                                                    var isTeacher = false;
                                                    var isResource = false;
                                                    
                                                    if(filter.teacher && filter.teacher != 'Select Teacher'){
                                                        isTeacher = true;
                                                    }else if(filter.resource && filter.resource != 'Select Resource'){
                                                        isResource = true;
                                                    } 
                                                    
                                                    $('[id$=teachers]').children().each(function(index, value){
                                                        if($(this).val() == 'AllRosteredStaff' || $(this).val() == 'AllStaff'){
                                                            $(this).remove();
                                                        }
                                                    });
                                                    $('[id$=teachers]').children().first().after('<option value="AllRosteredStaff">All rostered staff</option><option value="AllStaff">All staff</option>');
                                                    
                                                    $('[id$=resources]').children().each(function(index, value){
                                                        // start :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                                        //if($(this).val() == 'AllRosteredResource' || $(this).val() == 'AllResource' ){ 
                                                        if($(this).val() == 'AllRosteredResource' || $(this).val() == 'AllResource' ||  $(this).val() == 'AllLesson' ||  $(this).val() == 'AllNonLesson'){ 
                                                        // end :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                                      
                                                            $(this).remove();
                                                        }
                                                    });
                                                    // start :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                                   // $('[id$=resources]').children().first().after('<option value="AllRosteredResource">All rostered resources</option><option value="AllResource">All Resources</option>');
                                                    $('[id$=resources]').children().first().after('<option value="AllRosteredResource">All rostered resources</option><option value="AllResource">All Studios</option><option value="AllLesson">All Lesson Studios</option><option value="AllNonLesson">All Non-Lesson Studios</option>');
                                                    // end :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                                       
                                                    if(isTeacher){
                                                        
                                                        teacher = 'AllRosteredStaff';
                                                        filter.teacher = 'AllRosteredStaff';
                                                        filter.resource = 'Select Resource';
                                                        
                                                        initResources(center, teacher, filter.resource, [dateHeader], 'agendaDay', filter.instrument);
                                                        $('.teachers').val(filter.teacher);
                                                    }else if(isResource){
                                                        
                                                        filter.resource = 'AllRosteredResource';
                                                        filter.teacher = 'Select Teacher';
                                                        
                                                        initResources(center, teacher, filter.resource, [dateHeader], 'agendaDay', filter.instrument);
                                                        $('[id$=resources]').val(filter.resource);
                                                    }
                                                }
                                            });
                                        },
                                        viewRender: function( view, element ){
                                            $('.fc-slats tr').each(function(){
                                                var time = $(this).attr('data-time');
                                                if(time && time.includes('00:00')){
                                                    $(this).children('td:nth-child(2)').addClass("black");
                                                }
                                                
                                                if(listOfResource.length > 1){
                                                    var width = '';
                                                    setTimeout(function(){
                                                        if(listOfResource.length > 6){
                                                            width = (listOfResource.length * 15);
                                                            $('.fc-view-container').css({'width': width+'vw', 'overflow-x': 'visible'});
                                                        }
                                                    }, 30);
                                                }
                                            });
                                            
                                            
                                        },
                                        eventResize: function(event, delta, revertFunc) {
                                            revertFunc();
                                        },
                                        dayClick: function(date, jsEvent, view,resourceObj) {
                                            bookingReschedule.resource = resourceObj.id;
                                            console.log('bookingReschedule',bookingReschedule);
                                            // console.log('filter',filter);
                                            bookingReschedule.date = date.format();
                                            //console.log(date);
                                            var startTime = date.format();
                                            //console.log(startTime);
                                            var endTime = toJSDate( date.format());
                                            //console.log(endTime);
                                            var milleseconds = new Date(endTime.getTime() + (15 * 60 * 1000));
                                            milleseconds = new Date(milleseconds.getTime() - (milleseconds.getTimezoneOffset() * 60 * 1000));
                                            if(milleseconds){
                                                milleseconds = milleseconds.toJSON().split('.')[0];
                                            }
                                             // Start : 30-Jul:2020 -Nishi:if Resource Id is exist then we hide this Future button
                                                var isResource = false;
                                                if(filter.resource && filter.resource != 'Select Resource'){
                                                    isResource = true;
                                                } 
                                            // Start : 30-Jul:2020 -End:if Resource Id is exist then we hide this Future button
                                                
                                            console.log('bookingReschedule.Type',bookingReschedule.Type);
                                            if(bookingReschedule.Id && bookingReschedule.Type == 'Regular' && bookingReschedule.Individual == 'false' && isEventInTeacherWorkingHour(teacherWorkingHours, startTime, milleseconds, bookingReschedule.resource)){
                                                isReschedule = false;
                                                //rescheduleThisOnly();
                                                // Start : 30-Jul:2020 -Nishi:if Resource Id is exist then we hide this Future button
                                                if(!isResource){
                                                    $('#confirmModalYes').addClass('slds-hide');
                                                    $('#confirmModalNo').html('Cancel');
                                                    $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                    $('#confirmHeader').html('Recurring event');
                                                    $('#confirmHeader').parent().addClass('slds-text-align_left');
                                                    $('#confirmBody').addClass('slds-text-align_center');
                                                    //$('#confirmBody').html('<p>Would you like to reschedule this booking?</p><div><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisOnly();return false;">This only</button></div>');
                                                
                                                    var confirmBoby ='<p>Would you like to apply this change to this event only,<br/>or the current and future events in the series?</p>';
                                                    confirmBoby +='<div><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisOnly();return false;">This only</button>';
                                                    //Commented by jatin :19-Nov-2019 for remove reschedule booking  
                                                    confirmBoby +='<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureReschedule" onclick="rescheduleFutureAlso();return false;">This and future</button>';
                                                    confirmBoby +='</div>';
                                                    $('#confirmBody').html(confirmBoby);
                                                    $('#confirmModal').removeClass('slds-hide');
                                                }else{
                                                    // start : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here.                                                    $('#confirmModalYes').addClass('slds-hide');
                                                    $('#confirmModalNo').html('Cancel');
                                                    $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                    rescheduleThisOnly();
                                                      // end : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                }
                                                 // end : 30-Jul:2020 -Nishi:if Resource Id is exist then we hide this Future button
                                                   
                                            }else if(bookingReschedule.Id && bookingReschedule.Type == 'Busy' && bookingReschedule.Individual == 'false' &&  isEventInTeacherWorkingHour(teacherWorkingHours, startTime, milleseconds, bookingReschedule.resource)){
                                                if(!isResource){
                                                    $('#confirmModalYes').addClass('slds-hide');
                                                    $('#confirmModalNo').html('Cancel');
                                                    $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                    $('#confirmHeader').html('Reschedule Busy Time');
                                                    $('#confirmHeader').parent().addClass('slds-text-align_left');
                                                    $('#confirmBody').addClass('slds-text-align_center');
                                                    // rescheduleThisOnly();
                                                    var confirmBody = '<p>Would you like to apply this change to this Busy Time only,<br/>or the current and future Busy Time in the series?</p>';
                                                    confirmBody +='<div><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisOnly();return false;">This only</button>';
                                                    //Commented by jatin :19-Nov-2019 for remove reschedule booking  
                                                    // Start : 30-Jul:2020 -Nishi:if Resource Id is exist then we hide this Future button
                                                    confirmBody += '<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureReschedule" onclick="rescheduleFutureAlso();return false;">This and future</button>';
                                                    // end : 30-Jul:2020 -Nishi:if Resource Id is exist then we hide this Future button
                                                    confirmBody += '</div>';
                                                    $('#confirmBody').html(confirmBody);
                                                    $('#confirmModal').removeClass('slds-hide');
                                                    /*console.log('In this case');
                            bookingReschedule.isRecurrence = 'false';
                        
                            if(isDateTimeInFuture(date.format()) && isEventInTeacherWorkingHour(teacherWorkingHours, startTime, milleseconds, bookingReschedule.resource)){
                                reschedule();
                            }*/
                                                    } else{
                                                          // start : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                        $('#confirmModalYes').addClass('slds-hide');
                                                        $('#confirmModalNo').html('Cancel');
                                                        $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                        rescheduleThisOnly();
                                                          // end : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                    }     
                                            }else if(bookingReschedule.Id){
                                                    bookingReschedule.isRecurrence = 'false';
                                                    reschedule();
                                            }else if(!bookingReschedule.Id){
                                                // if(isDateTimeInFuture(date.format())){
                                                ////console.log('@@@filter.resource', filter.resource);
                                                if(filter.resource && filter.resource != 'Select Resource'){
                                                    $('#addNewBooking').addClass('slds-hide');
                                                    $('#addClass').addClass('slds-hide');
                                                    $('#addNewBooking').attr('data-source', 'resource');
                                                    $('#addBusyTime').attr('data-source', 'resource');
                                                }else{
                                                    $('#addClass').removeClass('slds-hide');
                                                    $('#addNewBooking').removeClass('slds-hide');
                                                    $('#addNewBooking').attr('data-source', 'teacher');
                                                    $('#addBusyTime').attr('data-source', 'teacher');
                                                }
                                                
                                                if(!isEventInTeacherWorkingHour(teacherWorkingHours, startTime, milleseconds, bookingReschedule.resource)){
                                                    $('#addNewBooking').addClass('slds-hide');
                                                }
                                                $('#addNewBooking').attr({'data-centerId' : filter.center, 'data-teacherId' : resourceObj.id, 'data-date' : startTime});
                                                $('#addClass').attr({'data-centerId' : filter.center, 'data-teacherId' : resourceObj.id, 'data-date' : startTime});
                                                $('#addBusyTime').attr({'data-centerId' : filter.center, 'data-teacherId' : resourceObj.id, 'data-date' : startTime});
                                                $('#newBookingHeader').html(convertTimeToMoment(startTime.split('T')[1].split(':')[0], startTime.split('T')[1].split(':')[1]));
                                                $('#newBookingModal').removeClass('slds-hide');
                                                
                                                // }
                                            }
                                            // Jatin: 21-jan-2020: for show busy booking tab only
                                           /*Commented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                                             var employeeId = $('[id$=employee]').val();
                                           //console.log('employeeId',employeeId);
                                            if(employeeId || employeeId == undefined){
                                                $('#addNewBooking').addClass('slds-hide');
                                                $('#addClass').addClass('slds-hide');
                                                $('#addBusyTime').removeClass('slds-hide');
                                            }
                                        },
                                        eventRender: function(event, element, view) {
                                            if(event.className.includes('bookingNotAvailable')){
                                                element.find('.fc-time').remove();
                                            }else{
                                                var spantext = element.find('.fc-time').children('span').text();
                                                if(spantext){
                                                    spantext = spantext.split('-')[0];
                                                    element.find('.fc-time').children('span').text(spantext);
                                                }
                                            }
                                            if(event.Type == 'Busy'){
                                                element.find('.fc-title').css({"text-overflow":"ellipsis","white-space":"nowrap"});
                                                element.attr('title', event.title);
                                            }
                                            
                                            if(element.find(".fc-content").text()){
                                                element.find(".fc-content").append('<div id="eventIcons"></div>');
                                                // Added By Ravi on 2nd july 2020 for lesson type
                                                if(event.lessonType === 'Online'){
                                                     element.find(".fc-content #eventIcons").append("<span class='closeon' id='online'><img src='{!$Resource.Online_Globe}' width='14px;' height='14px;'/></span>");
                                                }
                                                // Added By Ravi on 2nd july 2020
                                                if(event.Notes > 0){
                                                    element.find(".fc-content #eventIcons").append("<span class='closeon' id='sms'><a href='javascript:void(0);'><svg class='slds-button__icon slds-icon_xx-small' aria-hidden='true'><use xlink:href='{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#chat')}'></use></svg></a></span>");
                                                }
                                                if(event.Status === 'Completed'){
                                                    element.find(".fc-content #eventIcons").append("<span class='closeon'  id='check'><a href='javascript:void(0);'><svg class='slds-button__icon slds-icon_xx-small' aria-hidden='true'><use xlink:href='{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}'></use></svg></a></span>");
                                                }
                                                if(event.Status === 'No-show'){
                                                    element.find(".fc-content #eventIcons").append("<span class='closeon'  id='cross'><a href='javascript:void(0);'><svg class='slds-button__icon slds-icon_xx-small' aria-hidden='true'><use xlink:href='{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}'></use></svg></a></span>");
                                                }
                                                // element.find("#eventIcons").append('<div id="lessonType"></div>');
                                                if(event.Type === 'Regular' && event.Individual == 'false'){
                                                    element.find(".fc-content #eventIcons").append("<span class='closeon' id='retweet'><a href='javascript:void(0);'><svg class='slds-button__icon slds-icon_xx-small' aria-hidden='true'><use xlink:href='{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#retweet')}'></use></svg></a></span>");
                                                    // element.find("#lessonType").append("<span class='closeon' id='retweet'><img src='{!$Resource.Online_Globe}' width='10px;' height='10px;'/></span>");
                                                }
                                                
                                                if(event.isClass){
                                                    element.find(".fc-content #eventIcons").append("<span class='closeon' id='groups'><a href='javascript:void(0);'><svg class='slds-button__icon slds-icon_xx-small' aria-hidden='true'><use xlink:href='{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#groups')}'></use></svg></a></span>");
                                                }
                                                
                                                element.find("#sms").on('click', function() {
                                                    $('#blank').html('sms');
                                                });
                                                element.find("#retweet").on('click', function() {
                                                    $('#blank').html('retweet');
                                                });
                                                element.find("#check").on('click', function() {
                                                    $('#blank').html('check');
                                                });
                                            }
                                            
                                        },
                                        eventDragStart: function(event) {
                                            console.log('event',event);
                                           // Commented by nishi: 9-Sep-2020: for new requiremnt we reschadule group lesson booking this and future
                                           //if(!event.isClass){
                                                var startTime = event.start.format();
                                                originalTime = startTime;
                                            //}

                                        },
                                        eventDrop: function(event, delta, revertFunc) {
                                            console.log('event',event);
                                           //console.log('event',event);
                                            // Commented by nishi: 9-Sep-2020: for new requiremnt we reschadule group lesson booking this and future
                                            //if(!event.isClass){
                                                bookingReschedule.Id = event.id;
                                                bookingReschedule.Type = event.Type;
                                                bookingReschedule.resource = event.resourceId;
                                                bookingReschedule.date = event.start.format();
                                                bookingReschedule.Individual = event.Individual;
                                                bookingReschedule.isRecurrence = 'false';
                                            /*}else{
                                                bookingReschedule.Id = '';
                                                bookingReschedule.Type = '';
                                                bookingReschedule.resource = '';
                                                bookingReschedule.date = '';
                                                bookingReschedule.Individual = '';
                                                bookingReschedule.isRecurrence = '';
                                                revertFunc();
                                            }*/
                                           //console.log('bookingReschedule',bookingReschedule);
                                            // Start : 30-Jul:2020 :if Resource Id is exist then we hide this Future button
                                            var isResource = false;
                                            if(filter.resource && filter.resource != 'Select Resource'){
                                                isResource = true;
                                            } 
                                          // end : 30-Jul:2020 :if Resource Id is exist then we hide this Future button
                                            $('#closeRescheduleIconButton').attr('onclick', 'cancelRescheduling();closeRescheduleModal();return false;');

                                            if(/* Need to uncomment the code later isDateTimeInFuture(originalTime) && */isEventInTeacherWorkingHour(teacherWorkingHours, event.start.format(), event.end.format(), event.resourceId)/* Need to uncomment the code late && isDateTimeInFuture(event.start.format())*/){
                                                if(bookingReschedule.Type == 'Regular' && bookingReschedule.Individual == 'false'){
                                                      // Start : 30-Jul:2020 Nishi:if Resource Id is exist then we hide this Future button
                                                    if(!isResource){
                                                        isReschedule = false;
                                                        $('#confirmModalYes').addClass('slds-hide');
                                                        $('#confirmModalNo').html('Cancel');
                                                        $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                        $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');closeRescheduleModal(); return false;");
                                                        $('#confirmHeader').html('Recurring event');
                                                        $('#confirmHeader').parent().addClass('slds-text-align_left');
                                                        $('#confirmBody').addClass('slds-text-align_center');
                                                        var confirmBody ='<p>Would you like to apply this change to this event only,<br/>or the current and future events in the series?</p>';
                                                        confirmBody += '<div><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisOnly();return false;">This only</button>';
                                                        // Commented by jatin :19-Nov-2019 : for remove future reshadule  booking
                                                            confirmBody += '<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureReschedule" onclick="rescheduleFutureAlso();return false;">This and future</button>';
                                                        confirmBody += '</div>';
                                                        $('#confirmBody').html(confirmBody);
                                                        $('#confirmModal').removeClass('slds-hide');
                                                    }else{
                                                        // start : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                        $('#confirmModalYes').addClass('slds-hide');
                                                        $('#confirmModalNo').html('Cancel');
                                                        $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                        $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');closeRescheduleModal(); return false;");
                                                        rescheduleThisOnly();
                                                        // end : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                    }
                                                } 
                                                // Commented by nishi: 9-Sep-2020: for new requiremnt we reschadule group lesson booking this and future
                                                else if(bookingReschedule.Type == 'Group Class' && bookingReschedule.Individual == 'false'){
                                                    var startdate = new Date(event.start.format('YYYY-MM-DD'));
                                                    console.log('bookingReschedule.date',startdate.getDate());
                                                   // console.log('bookingReschedule.date.day()',event.start.format('DD/MM/YYYY'));
                                                    if(startdate.getDate() > 28){
                                                        $('#toastMsg').html("You cann't transfer this group class to the last month of the date(29,30,31)...");
                                                        $('.toastclass').removeClass('slds-theme_success');
                                                        $('.toastclass').addClass('slds-theme_error');
                                                        toastLaunch();
                                                        refreshCalendar();
                                                    }else{
                                                        if(!isResource){
                                                            isReschedule = false;
                                                            $('#confirmModalYes').addClass('slds-hide');
                                                            $('#confirmModalNo').html('Cancel');
                                                            $('#confirmModalNo').attr('data-origin', 'reschedulegrouplesson');
                                                            $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');closeRescheduleModal(); return false;");
                                                            $('#confirmHeader').html('Recurring Class event');
                                                            $('#confirmHeader').parent().addClass('slds-text-align_left');
                                                            $('#confirmBody').addClass('slds-text-align_center');
                                                            var confirmBody ='<p>Would you like to apply this change to this event only,<br/>or the current and future events in the series?</p>';
                                                            confirmBody += '<div><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisGroupLessonOnly();return false;">This only</button>';
                                                            confirmBody += '<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureReschedule" onclick="rescheduleFutureGroupLessonAlso();return false;">This and future</button>';
                                                            confirmBody += '</div>';
                                                            $('#confirmBody').html(confirmBody);
                                                            $('#confirmModal').removeClass('slds-hide');
                                                        }else{
                                                            // $('#confirmModalYes').addClass('slds-hide');
                                                            // $('#confirmModalNo').html('Cancel');
                                                            // $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                            // $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');closeRescheduleModal(); return false;");
                                                            // rescheduleThisGroupLessonOnly();
                                                            revertFunc();
                                                        }
                                                   }
                                                }// nishi: 10-Sep-2020: for busy type group class bookings currently we revert all the functionality
                                                else if(bookingReschedule.Type == 'Busy' && bookingReschedule.Individual == 'false' && event.isClass){
                                                    if(!isResource){
                                                        $('#confirmModalYes').addClass('slds-hide');
                                                        $('#confirmModalNo').html('Cancel');
                                                        $('#confirmModalNo').attr('data-origin', 'reschedulegrouplesson');
                                                        $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');$('#confirmModalYes').removeClass('slds-hide');$('#confirmModalNo').html('No');refreshCalendar();return false;"); 
                                                        $('#confirmHeader').html('Reschedule Busy Time');
                                                        $('#confirmHeader').parent().addClass('slds-text-align_left');
                                                        $('#confirmBody').addClass('slds-text-align_center');
                                                        var confirmBody = '<p>Would you like to apply this change to this Busy Time only,<br/>or the current and future Busy Time in the series?</p><div>';
                                                        confirmBody +='<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisGroupLessonOnly();return false;">This only</button>';
                                                        // Commented by jatin :19-Nov-2019 : for remove future reshadule  booking
                                                            confirmBody += '<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureReschedule" onclick="rescheduleFutureGroupLessonAlso();return false;">This and future</button>';
                                                        confirmBody +='</div>';
                                                        $('#confirmBody').html(confirmBody);
                                                        $('#confirmModal').removeClass('slds-hide');
                                                    }else{
                                                          // start : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                        // $('#confirmModalYes').addClass('slds-hide');
                                                        // $('#confirmModalNo').html('Cancel');
                                                        // $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                        // $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');$('#confirmModalYes').removeClass('slds-hide');$('#confirmModalNo').html('No');refreshCalendar();return false;"); 
                                                        // rescheduleThisOnly();
                                                        //   // end : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                        revertFunc();
                                                    }
                                                     // Start : 30-Jul:2020 :if Resource Id is exist then we hide this Future button
                                                }
                                                //end: Commented by nishi: 9-Sep-2020: for new requiremnt we reschadule group lesson booking this and future
                                                else if(bookingReschedule.Type == 'Busy' && bookingReschedule.Individual == 'false'){
                                                      // Start : 30-Jul:2020 :if Resource Id is exist then we hide this Future button
                                                      if(!isResource){
                                                        $('#confirmModalYes').addClass('slds-hide');
                                                        $('#confirmModalNo').html('Cancel');
                                                        $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                        $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');$('#confirmModalYes').removeClass('slds-hide');$('#confirmModalNo').html('No');refreshCalendar();return false;"); 
                                                        $('#confirmHeader').html('Reschedule Busy Time');
                                                        $('#confirmHeader').parent().addClass('slds-text-align_left');
                                                        $('#confirmBody').addClass('slds-text-align_center');
                                                        var confirmBody = '<p>Would you like to apply this change to this Busy Time only,<br/>or the current and future Busy Time in the series?</p><div>';
                                                        confirmBody +='<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisOnly();return false;">This only</button>';
                                                        // Commented by jatin :19-Nov-2019 : for remove future reshadule  booking
                                                            confirmBody += '<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureReschedule" onclick="rescheduleFutureAlso();return false;">This and future</button>';
                                                        confirmBody +='</div>';
                                                        $('#confirmBody').html(confirmBody);
                                                        $('#confirmModal').removeClass('slds-hide');
                                                    }else{
                                                          // start : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                        $('#confirmModalYes').addClass('slds-hide');
                                                        $('#confirmModalNo').html('Cancel');
                                                        $('#confirmModalNo').attr('data-origin', 'reschedule');
                                                        $('#confirmModalNo').attr('onclick', "$('.confirmModal').addClass('slds-hide');$('#confirmModalYes').removeClass('slds-hide');$('#confirmModalNo').html('No');refreshCalendar();return false;"); 
                                                        rescheduleThisOnly();
                                                          // end : 1-aug:2020 -Nishi: we remove this prompt as we only supported single event update here. 
                                                    }
                                                     // Start : 30-Jul:2020 :if Resource Id is exist then we hide this Future button
                                                    
                                                }else if(bookingReschedule.Id){
                                                    bookingReschedule.isRecurrence = 'false';
                                                    reschedule();
                                                }
                                            }else{
                                                revertFunc();
                                            }
                                            
                                        },
                                        eventClick:  function(event, jsEvent, view,date) {
                                            $('#hide-Button-Section-On-Blocked').removeClass('slds-hide');
                                            $('#releaseBlockBtn').remove();
                                          //console.log('event---', event);
                                            var status = event.Status;
                                            $('#advanceOptionsBtn').removeAttr('data-isOssia');
                                            $('#advanceOptionsBtn').remove();
                                            $('#timeDuration').html(event.start.format('h:mm a')+ ' - '+event.end.format('h:mm a'));
                                            eventId = event.id;
                                            //console.log('###',event.isClass);
                                            //console.log('###',event.id);
                                            if(status == 'Blocked'){
                                                $('#hide-Button-Section-On-Blocked').addClass('slds-hide');
                                                $('#hide-Button-Section-On-Blocked').after('<button class="slds-button slds-button_icon slds-button_icon-border-filled button-shadow" style="width: 130px;margin-top:15px;" title="Release Block" aria-pressed="false" id="releaseBlockBtn" onclick="releaseBlock();return false;">Release Block <svg class="slds-button__icon" aria-hidden="true" style="margin: 5px;"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#unlock')}" /></svg><span class="slds-assistive-text">Release Block</span></button>');
                                                
                                            }
                                            if(event.Type != 'Regular' && event.Type != 'FifthLesson' && event.Type != 'Busy' && !event.isClass){
                                                    initEvents(eventId, event.start.format());
                                                }else if(event.Type != 'Trial' && event.Type == 'Regular' && !event.c){
                                                    // Added by Ravi on 21st july 2020 .. removed slds-hide from Id ='advanceOptionsBtn' below button
                                                    $('#button_Group_EditDetails').append('<button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow " title="Advance Actions" aria-pressed="false" id="advanceOptionsBtn" onclick="showAdvanceOptions();return false;" data-id="'+eventId+'" data-bookingType="'+event.Type+'">Advance Actions <svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#settings')}" /></svg><span class="slds-assistive-text">Advance Actions</span></button>');
                                                                                          initEvents(eventId, event.start.format());
                                                    // added by nishi: Start : 10-Aug-2020: for Ossia organisation student 	
                                                    if(event.isOssia){	
                                                        $('#advanceOptionsBtn').attr({'data-isOssia': event.isOssia});
                                                    }	
                                                    // added by nishi:End 10-Aug-2020: for Ossia organisation student 
                                                }else if(event.Type == 'Busy' && eventId && !event.isClass){
                                                    $('.addNewBookingFromBusy').removeClass('slds-hide');
                                                     $('#busyBookingFooter').removeClass('slds-hide');
           
                                                    $('#cancelBooking').attr({'data-id': eventId, 'data-date': event.start.format(), 'data-category': event.category, 'data-centre': event.centerName, 'data-type':'Busy'});
                                                    $('#editBusyBookingView').attr('data-id', eventId);
                                                    $('#rescheduleBusyBookingView').attr({'data-id': eventId, 'data-type': event.Type, 'data-individual': event.Individual});
                                                    $('#rescheduleBusyBookingView').removeClass('slds-hide');
                                                    $('#rescheduleBusyBookingView').removeAttr('disabled');
                                                    
                                                    $('#rescheduleBusyBookingView').css('pointer-events', '');    
                                                    if(event.category == 'Placeholder'){
                                                        $('.addNewBookingFromBusy').removeClass('slds-hide');    
                                                    }
                                                    $('.addNewBookingFromBusy').css('pointer-events', '');
                                                    $('.addNewBookingFromBusy').removeAttr('disabled');
                                                    
                                                    
                                                    if(!isDateTimeInFuture(event.start.format())){
                                                        $('#rescheduleBusyBookingView').css('pointer-events', 'none');
                                                        $('#rescheduleBusyBookingView').attr('disabled', 'true');
                                                        $('.addNewBookingFromBusy').css('pointer-events', 'none');
                                                        $('.addNewBookingFromBusy').attr('disabled', 'true');
                                                    }
                                                    getBusyBookingDetails(eventId,event.start.format());
                                                }else if(event.Type == 'FifthLesson'){
                                                    getFifthBookingDetails(event.id)
                                                }else if(event.isClass){
                                                    if(event.Type == 'Busy' && eventId){
                                                        $('#busyBookingFooter').addClass('slds-hide');
                                                        getBusyBookingDetails(eventId,event.start.format()); 
                                                    }else{
                                                       //console.log('event.isClass',event.isClass);
                                                        editClassAppointments(event.id,event.start.format());
                                                    }
                                                    
                                                }
                                              // added by nishi: Start : 17-Jul-2020: for Ossia organisation student 	
                                               //console.log('isOssia',event.isOssia);	
                                                $('#cancelBooking').removeAttr('data-isOssia');	
                                                if(event.isOssia){	
                                                    $('#cancelBooking').attr({'data-isOssia': event.isOssia});
                                                    if(event.Type == 'Make-up'){
                                                        $('#cancelOssiaBookingWithoutMakeup').html('Ok');
                                                        $('#cancelOssiaBookingWithMakeup').addClass('slds-hide');
                                                    }else{
                                                        $('#cancelOssiaBookingWithoutMakeup').html('Without Make-up');
                                                        $('#cancelOssiaBookingWithMakeup').removeClass('slds-hide');
                                                    }
                                                }	
                                                // added by nishi:End 17-Jul-2020: for Ossia organisation student 
                                                
                                                
                                                if($('#blank').html() === 'sms' || $('#blank').html() == ''){
                                                    $('body').css('overflow', 'false');
                                                    
                                                }else{
                                                    $('#blank').html('');
                                                }
                                                
                                                $('#newBookingNote').click(function(){
                                                    $('.addNotes').removeClass('slds-hide');
                                                });
                                                // Added By Ravi on 8 july 2020...
                                                 $('#changeLessonType').click(function(){
                                                     var lessonMode=$('#lessonTypeName').text();
                                                     if(lessonMode =='Online'){
                                                         lessonMode='In Center';
                                                     }else if(lessonMode =='In Centre'){
                                                         lessonMode='Online';
                                                     }
                                                      //start:added by nishi: 30-Jul-2020: for change Resouce current enrolment
                                                     $('.editDetails').addClass('slds-hide');
                                                     $('#showResources').addClass('slds-hide');
                                                     $('#showChangeLesson').removeClass('slds-hide');
                                                     $('#confirmModalLessonHeader').text('Change Lesson Mode');
                                                     $('#confirmModalLessonBody').text('Do you want to change Lesson Type to '+lessonMode +'?');
                                                     $('.changeLesson').removeClass('slds-hide');
                                                     $('#updateOnlineLesson').removeClass('slds-hide');
                                                    $('#updateResource').addClass('slds-hide');
                                                    $('#updateFutureOnlineLesson').attr({'data-id': eventId, 'data-date': event.start.format()});
                                                    
                                                    $('#LessonModalNo').html('Cancel');
                                                     //end:added by nishi: 30-Jul-2020: for change Resouce current enrolment
                                                });
                                                // Added By Ravi on 8 july 2020...

                                                //Start: Added By Nishi on 30-july-2020 : show confirmation box for change resources or not...
                                                $('#changeResourceType').click(function(){
                                                    $('.editDetails').addClass('slds-hide');
                                                     var ResourceTypeName=$('#ResourceTypeName').text();
                                                    $('#confirmModalLessonHeader').text('Change Studio');
                                                    $('#confirmModalLessonBody').text('Do you want to change this '+ResourceTypeName +' Studio ?');
                                                    $('.changeLesson').removeClass('slds-hide');
                                                    $('#showResources').removeClass('slds-hide');
                                                    $('#showChangeLesson').addClass('slds-hide');
                                                    $('#updateOnlineLesson').addClass('slds-hide');
                                                    $('#updateResource').removeClass('slds-hide');
                                                    $('#LessonModalNo').html('No');
                                                });
                                                //end: Added By Nishi on 30-july-2020 : show confirmation box for change resources or not...
                                               
                                            },
                                                
                                        });

                                        $('#calendar').fullCalendar('rerenderEvents');
                                        
                                        function isEventInTeacherWorkingHour(eventsjson, startTime, endTime, resourceId){
                                        var timeSlots = [];
                                        var isReschedulable = false;
                                        var teacherWorkings = [];
                                        for(index in eventsjson){
                                            if(eventsjson[index].className == 'teacherWorkingHours' && eventsjson[index].resourceId == resourceId){
                                                teacherWorkings.push(eventsjson[index]);
                                            }
                                        }
                                                                
                                                                $(teacherWorkings).each(function(index, value){
                                        if(Date.parse(toJSDate(value.start)) <= Date.parse(toJSDate(startTime)) && Date.parse(toJSDate(value.end)) >= Date.parse(toJSDate(endTime))){
                                            isReschedulable = true;
                                        }
                                    });
                                    return isReschedulable;
                                }
                                
                                $('.fc-next-button').click(function(e){
                                    refreshCalendar();
                                });
                                
                                $('.fc-prev-button').click(function(e){
                                    refreshCalendar();
                                    
                                });
                                
                                $('.fc-today-button').click(function(e){
                                    refreshCalendar();
                                });
                                
                                $('.fc-agendaDay-button').click(function(e){
                                    $('[id$=calViewInput]').val($('#calendar').fullCalendar('getView').name);
                                    reRenderHidden();
                                     // added by jatin: 20-jan-2020 for show employee calandar according to selected button 
                                   /*Commented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                                   
                                    var employeeId = $('[id$=employee]').val();
                                   //console.log('employeeId',employeeId);
                                    if(employeeId || employeeId== undefined){
                                        $('[id$=employee]').children().each(function(index, value){
                                           //console.log('!!!employeeId',$(this).val());
                                            if($(this).val() == 'AllRosteredStaff' || $(this).val() == 'AllStaff'){
                                                $(this).remove();
                                            }
                                        });
                                        $('[id$=employee]').children().first().after('<option value="AllRosteredStaff">All rostered staff</option><option value="AllStaff">All staff</option>');
                                        
                                        var b = $('#calendar').fullCalendar('getDate');
                                        var bookDate = [b.format('YYYY-MM-DD')];
                                        var calView = $('#calendar').fullCalendar('getView').name;
                                        var calendarDates = isWeekDay();
                                        if(!$("[id$=employee]").val()){
                                            employeeId = $("[id$=employee]").val();
                                           //console.log('employeeId'+employeeId);
                                        }
                                        if(!employeeId){
                                            $("[id$=employee]").val('');
                                        }
                                       //console.log('employeeId'+employeeId);
                                       //console.log('center'+center);
                                        initEmployeeResources(center, employeeId, bookDate, calView);
                                        $(this).addClass('fc-state-disabled');
                                        
                                    }else{
                                        
                                       //console.log('employeeId',employeeId);
                                        $('[id$=teachers]').children().each(function(index, value){
                                            if($(this).val() == 'AllRosteredStaff' || $(this).val() == 'AllStaff'){
                                                $(this).remove();
                                            }
                                        });
                                        $('[id$=resources]').children().each(function(index, value){
                                            // start :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                            //if($(this).val() == 'AllRosteredResource' || $(this).val() == 'AllResource'){
                                            if($(this).val() == 'AllRosteredResource' || $(this).val() == 'AllResource' ||  $(this).val() == 'AllLesson' ||  $(this).val() == 'AllNonLesson'){
                                            // end :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                                $(this).remove();
                                            }
                                        });
                                        $('[id$=teachers]').children().first().after('<option value="AllRosteredStaff">All rostered staff</option><option value="AllStaff">All staff</option>');
                                         // start :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                        // $('[id$=resources]').children().first().after('<option value="AllRosteredResource">All rostered resources</option><option value="AllResource">All Resources</option>');
                                        $('[id$=resources]').children().first().after('<option value="AllRosteredResource">All rostered resources</option><option value="AllResource">All Studios</option><option value="AllLesson">All Lesson Studios</option><option value="AllNonLesson">All Non-Lesson Studios</option>');
                                         // end :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                            
                                        var b = $('#calendar').fullCalendar('getDate');
                                        var bookDate = [b.format('YYYY-MM-DD')];
                                        if(!$(".teachers").val()){
                                            teacher = $(".teachers").val();
                                        }
                                        if(!teacher){
                                            $(".teachers").val('');
                                        }
                                        //console.log('teacher',teacher);
                                       //console.log('filter.resource',filter.resource);
                                        var calView = $('#calendar').fullCalendar('getView').name;
                                        var calendarDates = isWeekDay();
                                        initResources(center, teacher, filter.resource, bookDate, calView, filter.instrument);
                                        $(this).addClass('fc-state-disabled');
                                    }
                                });
                                
                                $('.fc-agendaTwoDay-button').click(function(e){
                                    $('[id$=calViewInput]').val($('#calendar').fullCalendar('getView').name);
                                    reRenderHidden();
                                     // added by jatin: 20-jan-2020 for show employee calandar according to selected button 
                                   /*Commented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                                    var employeeId = $('[id$=employee]').val();
                                   //console.log('employeeId',employeeId);
                                    if(employeeId || employeeId== undefined){
                                       //console.log('employeeId',employeeId);
                                        $('[id$=employee]').children().each(function(index, value){
                                            if($(this).val() == 'AllRosteredStaff' || $(this).val() == 'AllStaff'){
                                                $(this).remove();
                                            }
                                        });
                                        
                                        var b = $('#calendar').fullCalendar('getDate');
                                        var bookDate = [b.format('YYYY-MM-DD')];
                                       //console.log('employeeId'+employeeId);
                                        if((! $('[id$=employee]').val() || employeeId == 'AllRosteredStaff' || employeeId == 'AllStaff') && !filter.employee){
                                            $("[id$=employee]").val( $('[id$=employee]').children().eq(1).val());
                                            employeeId =  $('[id$=employee]').val();
                                           //console.log('employeeId'+employeeId);
                                        }
                                        if(!employeeId){
                                            $('[id$=employee]').val('');
                                        }
                                        var calView = $('#calendar').fullCalendar('getView').name;
                                        var calendarDates = isWeekDay();
                                       //console.log('employeeId'+employeeId);
                                       //console.log('center'+center);
                                        initEmployeeResources(center, employeeId, calendarDates, calView);
                                    }else{
                                       //console.log('employeeId',employeeId);
                                        $('[id$=teachers]').children().each(function(index, value){
                                            if($(this).val() == 'AllRosteredStaff' || $(this).val() == 'AllStaff'){
                                                $(this).remove();
                                            }
                                        });
                                        $('[id$=resources]').children().each(function(index, value){
                                             // start :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                            // if($(this).val() == 'AllRosteredResource' || $(this).val() == 'AllResource' ){
                                            if($(this).val() == 'AllRosteredResource' || $(this).val() == 'AllResource' || $(this).val() == 'AllLesson' ||  $(this).val() == 'AllNonLesson'){
                                             // end :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                                $(this).remove();
                                            }
                                        });
                                        
                                        var b = $('#calendar').fullCalendar('getDate');
                                        var bookDate = [b.format('YYYY-MM-DD')];
                                        // start :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                        //if(filter.resource == 'AllRosteredResource' || filter.resource == 'AllResource'){
                                        if(filter.resource == 'AllRosteredResource' || filter.resource == 'AllResource' || filter.resource == 'AllLesson' ||  $(this).val() == 'AllNonLesson'){
                                            // end :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                            $('[id$=resources]').val($('[id$=resources]').children().eq(1).val());
                                            filter.resource = $('[id$=resources]').val();
                                        }else if((!$(".teachers").val() || teacher == 'AllRosteredStaff' || teacher == 'AllStaff') && !filter.resource){
                                            $(".teachers").val( $('[id$=teachers]').children().eq(1).val());
                                            teacher = $(".teachers").val();
                                        }
                                        if(!teacher){
                                            $(".teachers").val('');
                                        }
                                       //console.log('teacher',teacher);
                                        var calView = $('#calendar').fullCalendar('getView').name;
                                        var calendarDates = isWeekDay();
                                    ////console.log(center, teacher, filter.resource, calendarDates, calView, filter.instrument);
                                        initResources(center, teacher, filter.resource, calendarDates, calView, filter.instrument);
                                    }
                                });
                                
                                $('.fc-myCustomButton-button').after('<span class="fc-button fc-button-title fc-state-default fc-state-hover"><input class="slds-input" type="text" id="fullCalendarDate" style="padding: 0px;border: 0px;cursor: pointer;text-align: center;" onchange="getDirectDate();return false;" readonly/></span>');
                                $('.fc-myCustomButton-button').remove();
                                var b = $('#calendar').fullCalendar('getDate');
                                var bookDate = [b.format('YYYY-MM-DD')];
                                $( "#fullCalendarDate" ).val(bookDate);
                                
                                $( "#fullCalendarDate" ).datepicker({
                                    numberOfMonths: 2,
                                    showButtonPanel: false,
                                    dateFormat: "yy-mm-dd"
                                });
                                
                            }


                            
                            function getDirectDate(){
                                var b = $('#fullCalendarDate').val();
                                var bookDates = [b];
                                
                                teacher = $(".teachers").val();
                                var calView = $('#calendar').fullCalendar('getView').name;
                                datesArray = new Array();
                                var dt = moment();
                                dt.year(b.split('-')[0]).month(b.split('-')[1] - 1).date(b.split('-')[2]);
                                var bookDate = dt.format('YYYY-MM-DD');
                                
                                var beginOfWeek = dt.startOf('week');
                                var start = beginOfWeek.format('YYYY-MM-DD');
                                
                                var endOfWeek = dt.endOf('week');
                                var end = endOfWeek.format('YYYY-MM-DD');
                                
                                datesArray.push(start);
                                datesArray.push(end);
                                
                                var calendarDates = datesArray;
                               /*Commented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                                // added by jatin: 21-jan-2020 for show employee calandar according to selected date
                                var employeeId = $('[id$=employee]').val();
                               //console.log('employeeId',employeeId);
                                if(employeeId || employeeId== undefined){
                                    if(calView == 'agendaTwoDay'){
                                        initEmployeeResources(center, employeeId, calendarDates, calView);
                                    }else{
                                        initEmployeeResources(center, employeeId, bookDates, calView);
                                    } 
                                }else{
                                    if(calView == 'agendaTwoDay'){
                                        initResources(center, teacher, filter.resource, calendarDates, calView, filter.instrument);
                                    }else{
                                        initResources(center, teacher, filter.resource, bookDates , calView, filter.instrument);
                                    }
                                }
                            }
                            
                            function getPackage(package){
                                $('#makeupHoursSection').addClass('slds-hide');
                                if(package != 'Select Package'){
                                    bookingData.packageId = package.split('-')[0];
                                    
                                }
                                $(createBookingResult.packages).each(function(index6, value6){
                                    if(bookingData.packageId == value6.id){
                                        console.log('value6.id'+value6.id);
                                        console.log('value6.type'+value6.type);
                                        $('#packageSelect').val(value6.name);
                                         // Nishi: 18-Aug-2020 : start : if center is ossia then we manage teacher and enrolment	
                                         var isossia = $('#saveNewBooking').attr('data-isossia');	
                                            if(isossia && isossia === 'true'){	
                                                //$('#OssiaTeacherSelect').removeAttr('disabled');	
                                                $('#OssiaInstrumentSelect').removeAttr('disabled');	
                                                // $('#ossiaStudentBlock').removeClass('slds-hide');	
                                            } else{	
                                                $('#OssiaInstrumentSelect').attr('disabled', 'true');	
                                                $('#OssiaTeacherSelect').attr('disabled', 'true');	
                                            }  	
                                            // Nishi: 18-Aug-2020 : start : if center is ossia then we manage teacher and enrolment 
                                        $('#getPackageId').removeClass('slds-is-open');
                                        if(value6.type == 'Trial'){
                                            bookingData.type =  value6.type; // value6.duration;
                                            bookingData.duration = value6.duration;   //'30';
                                            $('#OssiaInstrumentSelect').attr('disabled', 'true');	
                                            $('#OssiaTeacherSelect').attr('disabled', 'true');
                                        }else if(value6.duration == 'Trial' && value6.type == 'Home'){
                                            bookingData.type = 'home-trial';
                                            bookingData.duration = '30';
                                            $('#OssiaInstrumentSelect').attr('disabled', 'true');	
                                            $('#OssiaTeacherSelect').attr('disabled', 'true');
                                        }else if(value6.type == 'Makeup'){
                                            bookingData.type = 'Makeup';
                                            bookingData.duration = value6.duration;
                                        }else if(value6.type == 'Adhoc'){
                                            bookingData.type = value6.type;
                                            bookingData.duration = value6.duration;
                                        }    
                                        
                                    }
                                });
                                var duration = package;
                                var type = '';
                                if(duration){
                                    $(createBookingResult.packages).each(function(index2, value2){
                                        if(value2.id == duration.split('-')[0]){
                                            type = value2.type;
                                        }   
                                        
                                    });
                                    
                                    if(duration.split('-')[1] == 'Trial'){
                                        $('#durationLabel').html('30 min');
                                        $('#adhoc_method_section').addClass('slds-hide');
                                        $('#makeupHoursSection').addClass('slds-hide');
                                        $('#recurringSection').addClass('slds-hide');
                                    }else if(type  == 'Makeup'){
                                        $('#durationLabel').html(duration.split('-')[1] + ' min');
                                        $('#makeupHoursSection').removeClass('slds-hide');
                                        $('#recurringSection').removeClass('slds-hide');
                                    }else if(type  == 'Adhoc'){
                                        $('#durationLabel').html(duration.split('-')[1] + ' min');
                                        $('#recurringSection').removeClass('slds-hide');
                                    }else{
                                        $('#durationLabel').html(duration.split('-')[1] + ' min');
                                        $('#adhoc_method_section').addClass('slds-hide');
                                        $('#makeupHoursSection').addClass('slds-hide');
                                        $('#recurringSection').addClass('slds-hide');
                                    }
                                    
                                }else{
                                    $('#durationLabel').html('');
                                }
                            }   
                            // Added By Ravi on 13 july 2020
                            /*function getPackage(package){
                                $('#makeupHoursSection').addClass('slds-hide');
                                if(package != 'Select Package'){
                                    bookingData.packageId = package.split('-')[0];
                                    
                                }
                                $(createBookingResult.packages).each(function(index6, value6){
                                    if(bookingData.packageId == value6.id){
                                        $('#packageSelect').val(value6.name);
                                        $('#getPackageId').removeClass('slds-is-open');
                                        if(value6.type == 'Trial'){
                                            bookingData.type =  value6.type; // value6.duration;
                                            bookingData.duration = value6.duration;   //'30';
                                        }else if(value6.duration == 'Trial' && value6.type == 'Home'){
                                            bookingData.type = 'home-trial';
                                            bookingData.duration = '30';
                                        }else if(value6.type == 'Makeup'){
                                            bookingData.type = 'Makeup';
                                            bookingData.duration = value6.duration;
                                        }else if(value6.type == 'Adhoc'){
                                            bookingData.type = value6.type;
                                            bookingData.duration = value6.duration;
                                        }    
                                        
                                    }
                                });
                                var duration = package;
                                var type = '';
                                if(duration){
                                    $(createBookingResult.packages).each(function(index2, value2){
                                        if(value2.id == duration.split('-')[0]){
                                            type = value2.type;
                                        }   
                                        
                                    });
                                    
                                    if(duration.split('-')[1] == 'Trial'){
                                        $('#durationLabel').html('30 min');
                                        $('#adhoc_method_section').addClass('slds-hide');
                                        $('#makeupHoursSection').addClass('slds-hide');
                                        $('#recurringSection').addClass('slds-hide');
                                    }else if(type  == 'Makeup'){
                                        $('#durationLabel').html(duration.split('-')[1] + ' min');
                                        $('#makeupHoursSection').removeClass('slds-hide');
                                        $('#recurringSection').removeClass('slds-hide');
                                    }else if(type  == 'Adhoc'){
                                        $('#durationLabel').html(duration.split('-')[1] + ' min');
                                        $('#recurringSection').removeClass('slds-hide');
                                    }else{
                                        $('#durationLabel').html(duration.split('-')[1] + ' min');
                                        $('#adhoc_method_section').addClass('slds-hide');
                                        $('#makeupHoursSection').addClass('slds-hide');
                                        $('#recurringSection').addClass('slds-hide');
                                    }
                                    
                                }else{
                                    $('#durationLabel').html('');
                                }
                            }  */
                            // Added By Ravi on 13 july 2020
                            
                            function newAppointmentPopup(centerid, teacherid, dateOfAppointment){
                                $("#busyBookingViewModal").addClass('slds-hide');
                                   $('#saveNewBooking').removeAttr('data-isossia');	
                                $('#saveNewBooking').removeAttr('data-enrolementId');	
                                $('#saveNewBooking').removeAttr('data-enrolteacherId');	
                                $('#saveNewBooking').removeAttr('data-centerid');	
                                $('#saveNewBooking').removeAttr('data-teacher');	
                                $('#saveNewBooking').removeAttr('data-newTeacherId');	
                                $('#saveNewBooking').removeAttr('data-instrument');	
                                $('#saveNewBooking').removeAttr('data-makeupHours');	
                                $('#saveNewBooking').removeAttr('data-teacherinstrument');	
                                $('#ossiaStudentBlock').addClass('slds-hide');	
                                $('#OssiaStudentErrorMsg').text('');	
                                $('#OssiaInstrumentErrorMsg').text('');	
                                $('#saveNewBooking').css('pointer-events','');	
                                $('#OssiaTeacherSelect').empty();	
                                $('#OssiaInstrumentSelect').empty();	
                                bookingData.isOssia = false;	
                                bookingData.enrolmentId = '';
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.AureusCalendarController.getTeacherAndCenter}',
                                    centerid, teacherid,
                                    function(result, event){
                                        var msg = '';
                                        if (event.status) {
                                            $('#newBookingModal').addClass('slds-hide'); 
                                            var eventResult = JSON.parse(result.replace(/(&quot\;)/g,"\""));
                                            createBookingResult = eventResult;
                                            //console.log('createBookingResult',createBookingResult);	
                                            // added by nishi: 22-jul-2020: for get new booking is created in ossia center or not	
                                            $('#saveNewBooking').attr('data-isossia', createBookingResult.isOssia);	
                                            if(createBookingResult.isOssia){	
                                                $('#ossiaStudentBlock').removeClass('slds-hide');	
                                                
                                            }	
                                            //console.log('----------createBookingResult',createBookingResult);	
                                             // added by nishi: 22-jul-2020: for get new booking is created in ossia center or not
                                            var packages = '';
                                            $('#dateLabel').html(convertDateToMoment(dateOfAppointment.split('T')[0]));
                                            $('#timeLabel').html(convertTimeToMoment(dateOfAppointment.split('T')[1].split(':')[0], dateOfAppointment.split('T')[1].split(':')[1]));
                                            $(eventResult.entities).each(function(index, value){
                                                if(value.type == 'Centre'){
                                                    $('#centerNameLabel').html(value.name);
                                                     $('#saveNewBooking').attr('data-centerid', value.id);  	
                                                   //console.log('center Id', value.id);
                                                }else if(value.type == 'Teacher'){      
                                                    $('#saveNewBooking').attr('data-teacher', value.id);        
                                                }
                                                
                                            });
                                            $('#saveNewBooking').attr('data-date', dateOfAppointment);
                                            
                                            var setOfPackageType = new Set();
                                            var packageBody = [];
                                            $(eventResult.packages).each(function(index1, value1){
                                                
                                                if(value1.type){
                                                    setOfPackageType.add(value1.type);
                                                }
                                                
                                            });
                                            for(let setValue of setOfPackageType){
                                                packageBody[setValue] = '<ul class="slds-listbox slds-listbox_vertical" role="group" aria-label="'+setValue+'"> <li role="presentation" class="slds-listbox__item"><div id="'+setValue+'" class="slds-media slds-listbox__option slds-listbox__option_plain slds-media_small" role="presentation"><h3 class="slds-listbox__option-header" role="presentation">'+setValue+'</h3></div></li>';
                                            }
                                            
                                            $(eventResult.packages).each(function(index1, value1){
                                                if(value1.type){
                                                    packageBody[value1.type] += '<li role="presentation" class="slds-listbox__item"><div id="'+value1.id+'-'+value1.duration+'" onclick="getPackage($(this).attr(\'id\'));return false;" class="slds-media slds-listbox__option slds-listbox__option_plain slds-media_small" role="option"><span class="slds-media__figure slds-listbox__option-icon"></span><span class="slds-media__body"><span class="slds-truncate" title="'+value1.name+'">'+value1.name+'</span></span></div></li>';
                                                }
                                            });
                                            
                                            for(let Value of setOfPackageType){
                                                packageBody[Value] += '</ul>';
                                                packages += packageBody[Value];
                                                
                                            }
                                            $('#selectPackageListSection').append(packages);
                                            $('#selectLessonListSection').empty();
                                            var Resource ='';
                                             $(eventResult.lessonTypeList).each(function(index1, value1){
                                                if(value1){
                                                    Resource+='<option value="'+value1+'">'+value1+'</option>';
                                                }
                                            });
                                            $('#selectLessonListSection').append(Resource);
                                             // Start:Added by nishi:30-jul-2020: for show all available resources

                                             $('#selectResourceListSection').empty();
                                            var selectresource = '<option value="">Select Any Resource </option>';
                                            if(eventResult.listOfAvailableResources != null && eventResult.listOfAvailableResources.length > 0){
                                                $(eventResult.listOfAvailableResources).each(function(inex, value){
                                                    selectresource += '<option value="'+value.Id+'-'+value.Name+'">'+value.Name+'</option>';
                                                });
                                            }
                                            $('#selectResourceListSection').append(selectresource);
                                            // Start:Added by nishi:30-jul-2020: for show all available resources                                             var Resource = '';
                                                                                        


                                            $('#newBookingDetails').removeClass('slds-hide');
                                            
                                            
                                            $('#studentInput').keyup(function(){
                                                var student_name = $(this).val();
                                                var studentListItem = '';
                                                setTimeout(function(){
                                                      $('#OssiaStudentErrorMsg').text('');
                                                    $('#OssiaInstrumentErrorMsg').text('');
                                                    $('#saveNewBooking').removeAttr('data-enrolementId');
                                                    $('#saveNewBooking').removeAttr('data-enrolteacherId');
                                                    $('#saveNewBooking').removeAttr('data-makeupHours');
                                                    $('#saveNewBooking').removeAttr('data-instrument');
                                                    $('#saveNewBooking').removeAttr('data-newTeacherId');
                                                    $('#saveNewBooking').removeAttr('data-teacherinstrument');
                                                    $('#saveNewBooking').css('pointer-events','');
                                                    
                                                    $('#OssiaInstrumentSelect').val('');
                                                    $('#OssiaInstrumentSelect').empty();
                                                    $('#OssiaTeacherSelect').val('');
                                                    $('#OssiaTeacherSelect').empty();
                                                    $('#OssiaInstrumentSelect').attr('disabled', 'true');
                                                    $('#OssiaTeacherSelect').attr('disabled', 'true');
                                                    $('#makeupHoursLabel').html('0 min');
                                                    var isossia = $('#saveNewBooking').attr('data-isossia');
                                                    Visualforce.remoting.Manager.invokeAction(
                                                        '{!$RemoteAction.AureusCalendarController.getStudents}',
                                                        student_name,
                                                        function(result, event){
                                                            var ResultOfEvent = JSON.parse(result.replace(/(&quot\;)/g,"\""));
                                                            $(ResultOfEvent).each(function(index3, value3){
                                                                studentListItem += '<li role="presentation" class="slds-listbox__item " id="'+value3.id+'"><div id="option'+(index3+1)+'" class="slds-media slds-listbox__option slds-listbox__option_entity slds-listbox__option_has-meta student-list" role="option"><span class="slds-media__body">';
                                                                studentListItem += '<span class="slds-listbox__option-text slds-listbox__option-text_entity studentNameLabel">'+value3.label+'</span><span class="slds-listbox__option-meta slds-listbox__option-meta_entity"> • '+value3.parentName+'</span></span></div></li>';
                                                            });
                                                            $('#studentSelectContainer').removeClass('slds-is-open');
                                                            $('#studentSelectContainer').attr('aria-expanded', 'false');
                                                            $('#studentSearchList').empty();
                                                            $('#studentSearchList').append(studentListItem);
                                                            $('#studentSelectContainer').addClass('slds-is-open');
                                                            $('#studentSelectContainer').attr('aria-expanded', 'true');
                                                            if(ResultOfEvent.length == 0){
                                                                $('#studentSelectContainer').removeClass('slds-is-open');
                                                                $('#studentSelectContainer').attr('aria-expanded', 'false');
                                                                $('#studentSearchList').empty();
                                                                $('#parentInput').removeAttr('disabled');
                                                                $('#phoneInput').removeAttr('disabled');
                                                                $('#emailInput').removeAttr('disabled');
                                                                $('#parentInput').val('');
                                                                $('#phoneInput').val('');
                                                                $('#emailInput').val('');
                                                                 $('#saveNewBooking').removeAttr('data-enrolementId');
                                                                $('#saveNewBooking').removeAttr('data-enrolteacherId');
                                                                $('#OssiaStudentErrorMsg').text('');
                                                                $('#OssiaInstrumentErrorMsg').text('');
                                                                $('#saveNewBooking').removeAttr('data-makeupHours');
                                                                $('#saveNewBooking').removeAttr('data-instrument');
                                                                $('#saveNewBooking').removeAttr('data-newTeacherId');
                                                                $('#saveNewBooking').removeAttr('data-teacherinstrument');
                                                                $('#saveNewBooking').css('pointer-events','');
                                                                
                                                                $('#OssiaInstrumentSelect').val('');
                                                                $('#OssiaInstrumentSelect').empty();
                                                                $('#OssiaTeacherSelect').val('');
                                                                $('#OssiaTeacherSelect').empty();
                                                                $('#OssiaInstrumentSelect').attr('disabled', 'true');
                                                                $('#OssiaTeacherSelect').attr('disabled', 'true');
                                                                
                                                            }
                                                            
                                                            $('.student-list').click(function(){
                                                                var studentId = $(this).parent().attr('id');
                                                                $(ResultOfEvent).each(function(index4, value4){
                                                                    if(value4.id == studentId){
                                                                        // added by nishi: 22-jul-2020: for get new booking is created in ossia center or not
                                                                             bookingData.enrolmentId = '';
                                                                            bookingData.isOssia = false;
                                                                            if(isossia  && isossia ==='true'){
                                                                                bookingData.isOssia = true;
                                                                                getOssiaStudentEnrolments(value4.id,value4.parentId);
                                                                            }else{
                                                                                $('#makeupHoursLabel').html(value4.makeupHours+' min');
                                                                            }
                                                                            // added by nishi: 22-jul-2020: for get new booking is created in ossia center or not
                                                                        
                                                                        bookingData.studentId = value4.id;
                                                                        if(value4.label){
                                                                            $('#studentInput').val(value4.label);
                                                                        }else{
                                                                            $('#studentInput').val('');
                                                                        }
                                                                        
                                                                        if(value4.parentName){
                                                                            $('#parentInput').val(value4.parentName);
                                                                        }else{
                                                                            $('#parentInput').val('');
                                                                        }
                                                                        
                                                                        if(value4.phone){
                                                                            $('#phoneInput').val(value4.phone);
                                                                        }else{
                                                                            $('#phoneInput').val('');
                                                                        }
                                                                        
                                                                        if(value4.email){
                                                                            $('#emailInput').val(value4.email);
                                                                        }else{
                                                                            $('#emailInput').val('');
                                                                        }
                                                                        //$('#makeupHoursLabel').html(value4.makeupHours+' min');
                                                                        $('#parentInput').attr('disabled', '');
                                                                        $('#phoneInput').attr('disabled', '');
                                                                        $('#emailInput').attr('disabled', '');
                                                                        $('#studentSelectContainer').removeClass('slds-is-open');
                                                                        $('#studentSelectContainer').attr('aria-expanded', 'false');
                                                                        $('#studentSearchList').empty();
                                                                    }                                
                                                                });
                                                                
                                                            });
                                                            
                                                            
                                                            
                                                        }, 
                                                        {escape: true}
                                                    ); 
                                                    
                                                }, 500);
                                            });
                                        }
                                    },
                                    {escape: true}
                                );
                                
                                
                            }
                            
                            function closeRescheduleModal(){
                                $('.editDetails').addClass('slds-hide');
                                refreshEditAppointment(); 
                                $('.popupDetails').removeClass('slds-hide'); 
                                resetTabs();
                                refreshCalendar();
                            }
                            function refreshNewBookingPopup(){
                                bookingData = {};
                                $('#saveNewBooking').css('pointer-events', '');
                                
                                $('#centerNameLabel').html('');
                                $('#dateLabel').html('');
                                $('#timeLabel').html('');
                                $('#packageSelect').val('');
                                $('#durationLabel').html('');
                                $('#parentInput').val('');
                                $('#phoneInput').val('');
                                $('#emailInput').val(''); 
                                $('#studentInput').val('');
                                $('#parentInput').removeAttr('disabled');
                                $('#phoneInput').removeAttr('disabled');
                                $('#emailInput').removeAttr('disabled');
                                $('#adhoc_method_section').addClass('slds-hide');
                                $('#makeupHoursSection').addClass('slds-hide');
                                $('.repeatSelection').addClass('slds-hide');
                                $('#recurringSection').addClass('slds-hide');
                                $('#makeupHoursErrorMsg').text('');
                                $('#recurrenceOccure').empty();
                                $('#onSelectedDate').val('');
                                $('#totalNoOfBookings').html('');
                                $('#afterRadio').prop('checked', true);
                                $('#makeupHoursLabel').text('');
                                $('#repeatSelect').val('None');
                                $('#afterRadio').prop('checked');
                                $('#selectPackageListSection').empty();
                                $('#getPackageId').removeClass('slds-is-open');
                                $('#repeatSelectBusy').val('None');
                            }
                            
                            
                            $('#paymentRadio').change(function(index, value){
                                if($(paymentRadio).prop( "checked" )){
                                    $('#makeupHoursSection').addClass('slds-hide');
                                }
                            });
                            
                            $('#completeBooking').click(function(){
                                if(!$(this).attr('disabled')){
                                    $('.editDetails').addClass('slds-hide');
                                    var bookingId = $(this).attr('data-id');
                                    var type = $(this).attr('data-type');
                                    var status = $(this).attr('data-status');
                                    $('#confirmModalYes').attr({'data-id':bookingId, 'data-type':type, 'data-status':status, 'data-origin':'bookingComplete'});
                                    $('#confirmModalNo').removeAttr('data-origin');
                                    $('#confirmHeader').html('Complete This Appointment');
                                    $('#confirmBody').html('Do you want to complete this Appointment?');
                                    $('#confirmModal').removeClass('slds-hide');
                                }
                                
                            });
                            $('#noShowBooking').click(function(){
                                if(!$(this).attr('disabled')){
                                    $('.editDetails').addClass('slds-hide');
                                    var bookingId = $(this).attr('data-id');
                                    var type = $(this).attr('data-type');
                                    var status = $(this).attr('data-status');
                                    $('#confirmModalNo').removeAttr('data-origin');
                                    $('#confirmModalYes').attr({'data-id':bookingId, 'data-type':type, 'data-status':status, 'data-origin':'bookingNoShow'});
                                    $('#confirmHeader').html('No-show This Appointment');
                                    $('#confirmBody').html('Do you want to No-show this Appointment?');
                                    $('#confirmModal').removeClass('slds-hide');
                                }
                            });
                            function updateBooking(id, start, end, teacherId, isplaceholder, isFuture){
                              //console.log('id',id);
                              //console.log('start',start);
                              //console.log('end',end);
                              //console.log('teacherId',teacherId);
                              //console.log('isplaceholder',isplaceholder);
                              //console.log('isFuture',isFuture);
                                if(id && start && bookingReschedule.Type){
                                    //Start:31-Jul-2020: added by nishi if resource type calendar open then we not show reschadule Confirmtaion box 
                                    if(filter.resource && filter.resource != 'Select Resource'){
                                        $('#confirmModalNo').attr({'data-id': id, 'start': start, 'end': end,'isResourceId':'true', 'teacherId': teacherId, 'isplaceholder': isplaceholder, 'isFuture': isFuture, 'data-origin': 'update'});
                                        $('#confirmModalNo').trigger('click');
                                    }else{
                                    //End:31-Jul-2020: added by nishi if resource type calendar open then we not show reschadule Confirmtaion box 
                                        if(bookingReschedule.Type != 'Busy' ){
                                            $('#confirmHeader').html('Email Confirmation');
                                            $('#confirmModalNo').html('No');
                                            $('#confirmModalYes').removeClass('slds-hide');
                                            $('.editDetails').addClass('slds-hide');
                                            $('#confirmBody').html('Do you want to send an email?');
                                            $('#confirmModal').removeClass('slds-hide');
                                            $('#confirmModalYes').attr({'data-id': id, 'start': start, 'end': end,'isResourceId':'false', 'teacherId': teacherId, 'isplaceholder': isplaceholder, 'isFuture': isFuture, 'data-origin': 'update'});
                                            $('#confirmModalNo').attr({'data-id': id, 'start': start, 'end': end,'isResourceId':'false', 'teacherId': teacherId, 'isplaceholder': isplaceholder, 'isFuture': isFuture, 'data-origin': 'update'});
                                        }else{
                                            Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.AureusCalendarController.updateBooking}',
                                                id, start, end, teacherId, isplaceholder, isFuture, 'false', caseId, 'false',
                                                function(result, event){
                                                    var msg = '';
                                                    if (event.status) {
                                                        
                                                        $('.editDetails').addClass('slds-hide');
                                                        isReschedule = false;
                                                        $('#confirmModalNo').html('No');
                                                        $('#confirmHeader').parent().removeClass('slds-text-align_left');
                                                        $('#confirmBody').removeClass('slds-text-align_center');
                                                        $('#confirmModalYes').removeClass('slds-hide');
                                                        $("#rescheduleClose").trigger("click");
                                                        if(bookingReschedule.scheduleType == 'commitEmail'){
                                                            $('#confirmModalYes').attr('data-origin', 'email');
                                                            $('#confirmModalYes').trigger('click');
                                                        }else if(bookingReschedule.scheduleType == 'commit'){
                                                            if(result.caseId){
                                                                redirectToCaseRecord(result.caseId); 
                                                            }else{
                                                                refreshCalendar();
                                                            }
                                                        }else{
                                                            $('.confirmModal').removeClass('slds-hide');
                                                            $('#confirmBody').html('Do you want to send an email?');
                                                            $('#confirmHeader').html('Email Confirmation');
                                                            $('#confirmModalYes').attr('data-origin','email');
                                                            $('#confirmModalNo').attr('data-origin','email');
                                                            $('#confirmModalYes').removeAttr('data-starttime');
                                                            $('#confirmModalYes').removeAttr('data-resourceid'); 
                                                            $('#confirmModalYes').removeAttr('data-endtime');
                                                        }
                                                        bookingReschedule.Id = '';
                                                        bookingReschedule.Type = '';
                                                        bookingReschedule.resource = '';
                                                        bookingReschedule.date = '';
                                                        bookingReschedule.Individual = '';
                                                        bookingReschedule.isRecurrence = '';
                                                        bookingReschedule.scheduleType = '';
                                                        
                                                        
                                                    }
                                                },
                                                {buffer: false, escape: true}
                                            );
                                        }
                                    }
                                    
                                }
                            }

                            // Start:nishi: 30-jul-2020: for update resource id for all bookings
                            function updateResourceBooking(id, start, end,resourceId , isplaceholder, isFuture){
                                if(id && start && bookingReschedule.Type){
                                    Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.AureusCalendarController.updateResourceBooking}',
                                        id, start, end, resourceId, isplaceholder, isFuture, 'false', caseId,
                                        function(result, event){
                                            var msg = '';
                                            if (event.status) {
                                                $('.editDetails').addClass('slds-hide');
                                                isReschedule = false;
                                                if(result.caseId){
                                                    redirectToCaseRecord(result.caseId); 
                                                }else{
                                                    refreshCalendar();
                                                }
                                                $('#confirmModalNo').html('No');
                                                $('#confirmHeader').parent().removeClass('slds-text-align_left');
                                                $('#confirmBody').removeClass('slds-text-align_center');
                                                $('#confirmModalYes').removeClass('slds-hide');
                                                $("#rescheduleClose").trigger("click");
                                                bookingReschedule.Id = '';
                                                bookingReschedule.Type = '';
                                                bookingReschedule.resource = '';
                                                bookingReschedule.date = '';
                                                bookingReschedule.Individual = '';
                                                bookingReschedule.isRecurrence = '';
                                                bookingReschedule.scheduleType = '';
                                                bookingReschedule.resourceId = ''; 
                                                bookingReschedule.enrolmentId ='';
                                                bookingReschedule.isChangeResource = '';
                                            }
                                        },
                                        {buffer: false, escape: true}
                                    );
                                
                                }
                            }
                            // Start:nishi: 30-jul-2020: for update resource id for all bookings
                            
                            function rescheduleThisOnly(){
                                bookingReschedule.isRecurrence = 'false';
                                reschedule();
                            }
                            function rescheduleFutureAlso(){
                                bookingReschedule.isRecurrence = 'true';
                                reschedule();
                            }
                            function reschedule(){
                                $('#commitChanges').remove();
                                $('#commitEmail').remove(); 
                                $('#cancelChanges').remove();
                               //console.log('bookingReschedule',bookingReschedule);
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.AureusCalendarController.showRescheduledBookings}',
                                    bookingReschedule,
                                    function(result, event){
                                        var msg = '';
                                        if (event.status) {
                                            if(result){
                                                $('#detailPopupTitle').html('Rescheduled Appointment');
                                                $('#changeLessonResource').addClass('slds-hide');
                                                $('#confirmModal').addClass('slds-hide');
                                                var eventResult = JSON.parse(result.replace(/(&quot\;)/g,"\""));
                                               //console.log('eventResult',eventResult);
                                                $('.editCustomerDetails').attr('data-id', eventResult.studentId);
                                                var centerName = eventResult.centerName;
                                                // Added By Ravi on 16 july 2020
                                                 $('#lessonTypeName').text(eventResult.lessonType);
                                                // Added By Ravi on 16 july 2020
                                                $('#centerName').html(centerName);
                                                $('#centerName').attr('href', '/'+eventResult.centerId);
                                                if(eventResult.parentId){
                                                    $('.editCustomerDetails').attr('data-parentId', eventResult.parentId);
                                                }else{
                                                    $('.editCustomerDetails').attr('data-parentId', eventResult.studentId);
                                                }
                                                $('#teacherNameEditPopup').html(eventResult.staffMember);
                                                $('#teacherNameEditPopup').attr('href','/'+eventResult.staffMemberId);
                                                $('#cancelBooking').attr('data-id',eventResult.Id);
                                                $('#cancelBooking').attr('data-type',eventResult.type);
                                                $('#lesson').text(eventResult.service);
                                                $('#teacherName').text(eventResult.staffMember);
                                                $('#resource').text(eventResult.resource);
                                                $('#dateAndTime').text(eventResult.dateAndTime);
                                                $('.sendEmail').attr('data-bookingId', eventResult.Id);
                                                $('#ResourceTypeName').html(eventResult.resourceName);
                                                if(eventResult.parentId){
                                                    $('.sendEmail').attr('data-parentId', eventResult.parentId);
                                                }else{
                                                    $('.sendEmail').attr('data-parentId', eventResult.studentId);
                                                }
                                                $('#advanceOptionsBtn').addClass('slds-hide');
                                                $('#statusIconOnEdit').empty();
                                                $('#statusLabelOnEdit').text(eventResult.status);
                                                if(eventResult.status == 'Scheduled'){
                                                    $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clock')}" /></svg>');
                                                }else if(eventResult.status == 'Pending'){
                                                    $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#reminder')}" /></svg>');
                                                }else if(eventResult.status == 'Completed'){
                                                    $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#check')}" /></svg>');
                                                }else if(eventResult.status == 'No-show'){
                                                    $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#close')}" /></svg>');
                                                }else if(eventResult.status == 'Canceled'){
                                                    $('#statusIconOnEdit').append('<svg class="slds-button__icon" aria-hidden="true"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="{!URLFOR($Asset.SLDS,'/assets/icons/utility-sprite/svg/symbols.svg#clear')}" /></svg>');
                                                }
                                                                                
                                                                                
                                                                                
                                                var dateTime = eventResult.dateAndTime;
                                                var res;
                                                if(dateTime){
                                                    res =  dateTime.split("T"); 
                                                    $('#date').text(convertDateToMoment(res[0]));
                                                    $('#time').text(convertTimeToMoment(res[1].split(':')[0], res[1].split(':')[1]));
                                                    $('#serviceTime').text(convertTimeToMoment(res[1].split(':')[0], res[1].split(':')[1]));
                                                }
                                                $('#tab-default-2__item').addClass('slds-hide');
                                                $('#tab-default-3__item').addClass('slds-hide');
                                                $('#tab-default-5').addClass('slds-hide');
                                                $('#enrolmentDetailSection').addClass('slds-hide');
                                                $('#advanceDetailsSection').addClass('slds-hide');
                                                $('.studentImg').attr('src','/servlet/servlet.FileDownload?file='+eventResult.teacherAttachmentId+'');
                                                $('#duration').text(eventResult.duration);
                                                $('#price').text(eventResult.price);
                                                $('#totalPrice').text('$'+eventResult.price);
                                                
                                                $('#lessonOnCancel').text(eventResult.service);
                                                $('#teacherOnCancel').text(eventResult.staffMember);
                                                $('#dateAndTimeOnCancel').text(eventResult.dateAndTime);
                                                $('#name').text(eventResult.studentFirstName+' '+eventResult.studentLastName+' - '+eventResult.parentFirstName +' '+eventResult.parentLastName);                                
                                                $('#name1').text(eventResult.studentFirstName+' '+eventResult.studentLastName);
                                                $('#name1').attr('href', '/'+eventResult.studentId);
                                                $('#parentname1').text(eventResult.parentFirstName +' '+eventResult.parentLastName);
                                                $('#parentname1').attr('href', '/'+eventResult.parentId)
                                                $('.popupDetails').removeClass('slds-hide');
                                                if(eventResult.rType == 'Lesson'){
                                                    $('#selectStudio').addClass('slds-hide');
                                                }else if(eventResult.rType == 'Facility'){
                                                    $('#selectTeacher').addClass('slds-hide');
                                                }
                                                $('#fname').val(eventResult.studentFirstName);
                                                $('#lname').val(eventResult.studentLastName);
                                                $('#telephone').val(eventResult.parentPhone);
                                                $('#parentsms').val(eventResult.parentMobile);
                                                $('#parentEmail').val(eventResult.parentEmail);
                                                
                                                $('#parentfname').val(eventResult.parentFirstName);
                                                $('#parentlname').val(eventResult.parentLastName);
                                                $('#popoverTitle').text(eventResult.studentFirstName+ ' '+eventResult.studentLastName + ' - ' +eventResult.parentFirstName+ ' '+eventResult.parentLastName);
                                                
                                                $('#phone').text(eventResult.parentMobile);
                                                $('#email').text(eventResult.parentEmail);
                                                
                                                $('#studentName').text(eventResult.studentFirstName+ ' '+eventResult.studentLastName);
                                                $('#parentName').text(eventResult.parentFirstName+ ' '+eventResult.parentLastName);
                                                $('#parentMobile').text(eventResult.parentMobile);
                                                $('#parentPhone').text(eventResult.parentPhone);
                                                $('#parentEmail').text(eventResult.parentEmail);
                                                $('#servicePackagName').text(eventResult.service);
                                                $('#serviceStaff').text(eventResult.staffMember);
                                                $('#serviceResource').text(eventResult.resource);
                                                $('#serviceDuration').text(eventResult.duration);
                                                
                                                $('#servicePrice').text(eventResult.price);
                                                $('.editDetails').removeClass('slds-hide');
                                                $('.editBooking').addClass('slds-hide');
                                                $('#noShowBooking').addClass('slds-hide');
                                                $('#completeBooking').addClass('slds-hide');
                                                $('#cancelBooking').addClass('slds-hide');
                                                var addbuttons = '<button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" aria-pressed="false" id="commitChanges" onclick="commit();return false;">Confirm Changes</button>';
                                                addbuttons +='<button class="slds-col slds-button slds-button_icon slds-button_icon-border-filled button-shadow" aria-pressed="false" id="cancelChanges" onclick="cancelRescheduling();return false;">Cancel</button>';
                                               
                                                //console.log('hello');
                                                $('#completeBooking').after(addbuttons);
                                                $('#cancelChanges').attr('onclick','cancelRescheduling();closeRescheduleModal();return false;');
                                                $('.button_Group_reschedule').removeClass('slds-size_5-of-12');
                                                $('.button_Group_reschedule').addClass('slds-size_12-of-12');
                                                $('#tab-default-1').removeClass('slds-hide').addClass('slds-show');
                                            }  
                                        }
                                    },
                                        {escape: true}
                                    );
                                    
                                }
                                                    
        function sendTrialEnrollment(bookingId){
                        if(bookingId){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.sendEnrolmentLinkByCase}',
                                caseId, bookingId, 'Trial', 
                                function(result, event){
                                    if(result){
                                        redirectToCaseRecord(result);  
                                    }else{
                                        $('#enrolmentUpdatePopup').addClass('slds-hide');
                                        $('#toastMsg').html('Some Error Occurred...');
                                        $('.toastclass').removeClass('slds-theme_success');
                                        $('.toastclass').addClass('slds-theme_error');
                                        toastLaunch();
                                        refreshCalendar();   
                                    }                        
                                }
                            );
                            
                            
                            /*  Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.getParentId}',
            bookingId,
            function(result, event){
            $('.sendEmail').attr({'data-parentId': result, 'data-bookingId': bookingId});
            $('#trialBookingClickModal').addClass('slds-hide');
            $('.sendEmail').removeClass('slds-hide');

            }
            );*/
                        }
                        
                    }
                    
                    function commit(){
                        if(bookingReschedule.isChangeResource && bookingReschedule.isChangeResource === 'true' ){
                            commitResource();
                        }else{
                            bookingReschedule.scheduleType = 'commit';
                            if((bookingReschedule.Type == 'Regular' || bookingReschedule.Type == 'Busy') && bookingReschedule.isRecurrence == 'false' && bookingReschedule.Individual == 'true'){
                                updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                            }else if((bookingReschedule.Type == 'Regular' || bookingReschedule.Type == 'Busy') && bookingReschedule.Individual == 'false' && bookingReschedule.isRecurrence == 'false'){
                                if(bookingReschedule.Type == 'Regular'){
                                    updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'true', 'false');
                                }else{
                                    updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                                }
                                
                            }/*commented by jatin :19-Nov-2019 for remove future reschaadule booking 
                            */ 
                                else if((bookingReschedule.Type == 'Regular' || bookingReschedule.Type == 'Busy') &&  bookingReschedule.isRecurrence == 'true'){
                                    updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'true');
                            }else if(bookingReschedule.Type != 'Regular'){
                                updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                            }
                        }
                    }
                    // Start:nishi: 30-jul-2020: for update resource id for all bookings
                    function commitResource(){
                        bookingReschedule.scheduleType = 'commit';
                        if((bookingReschedule.Type == 'Regular' || bookingReschedule.Type == 'Busy') && bookingReschedule.isRecurrence == 'false' && bookingReschedule.Individual == 'true'){
                            updateResourceBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                        }else if((bookingReschedule.Type == 'Regular' || bookingReschedule.Type == 'Busy') && bookingReschedule.Individual == 'false' && bookingReschedule.isRecurrence == 'false'){
                            if(bookingReschedule.Type == 'Regular'){
                                updateResourceBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'true', 'false');
                            }else{
                                updateResourceBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                            }
                            
                        }else if((bookingReschedule.Type == 'Regular' || bookingReschedule.Type == 'Busy') &&  bookingReschedule.isRecurrence == 'true'){
                                updateResourceBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'true');
                        }else if(bookingReschedule.Type != 'Regular'){
                            updateResourceBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                        }
                    }
                     // Start:nishi: 30-jul-2020: for update resource id for all bookings
                   
                    
                    function commitAndEmail(){
                        bookingReschedule.scheduleType = 'commitEmail';
                        if(bookingReschedule.Type == 'Regular' && bookingReschedule.isRecurrence == 'false' && bookingReschedule.Individual == 'true'){
                            updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                        }else if(bookingReschedule.Type == 'Regular' && bookingReschedule.Individual == 'false' && bookingReschedule.isRecurrence == 'false'){
                            updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'true', 'false');
                        }else if(bookingReschedule.Type != 'Regular'){
                            updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'false');
                        }else if(bookingReschedule.Type == 'Regular' &&  bookingReschedule.isRecurrence == 'true'){
                            updateBooking(bookingReschedule.Id, bookingReschedule.date, '', bookingReschedule.resource, 'false', 'true');
                        }
                    }
                    function cancelRescheduling(){
                        $('.editDetails').addClass('slds-hide');
                        $('#newGroupClassCMP').addClass('slds-hide');
                        bookingReschedule.Id = '';
                        bookingReschedule.Type = '';
                        bookingReschedule.resource = '';
                        bookingReschedule.date = '';
                        bookingReschedule.Individual = '';
                        bookingReschedule.isRecurrence = '';
                        bookingReschedule.scheduleType = '';
                        isReschedule = false;
                        $('#containerMessage').addClass('slds-hide');
                        
                    }
                    function refreshEditAppointment(){
                        $('#tab-default-2__item').removeClass('slds-hide');
                        $('#tab-default-3__item').removeClass('slds-hide');
                        $('.editBooking').removeClass('slds-hide');
                        $('#commitChanges').remove();
                        $('#commitEmail').remove(); 
                        $('#cancelChanges').remove();
                        $('#noShowBooking').removeClass('slds-hide');
                        $('#cancelBooking').removeClass('slds-hide');
                        $('#completeBooking').removeClass('slds-hide');
                        $('#detailPopupTitle').html('Appointment Details');
                        $('#repeatAppointment').removeClass('slds-hide');
                        $('#hr-editAppointment').removeClass('slds-hide');
                        $('#completeEnrollment').remove();
                        $('.custBtn').css("width", "130px");
                        $('.button_Group_reschedule').removeClass('slds-size_12-of-12');
                        $('.button_Group_reschedule').addClass('slds-size_5-of-12');
                        $('#requestDateEdit').html('');
                        $('#effectiveDateEdit').html('');
                        $('#noticeStartEdit').html('');
                        $('#noticeEndEdit').html('');
                        $('#processTypeEdit').html('');
                        $('#newPackageEdit').html('');
                        $('#newPackageEdit').attr('href','');
                    }
                    function toastLaunch(){
                        if($("#ToastMessage").hasClass('slds-hide')){
                            $("#ToastMessage").removeClass('slds-hide');
                        }else{
                            $("#ToastMessage").addClass('slds-hide');
                        }
                        setTimeout(function(){
                            $("#ToastMessage").addClass('slds-hide');
                            $('.toastclass').removeClass('slds-theme_error');
                            $('.toastclass').addClass('slds-theme_success');
                        }, 6000);
                        
                    }
                    function initChange(){
                        var flag = false;
                        var teacherId = '';
                        $(".teachers").change(function(){
                            getTeacher($('[id$=teachers]').val());
                            teacherId = $(this).val();
                            center = $('.centerList').val();   
                            refreshCalendar();
                        });
                        // jatin: 21jan2020 for referesh employee list
                       /* Commented By jatin: 11-mar-2020 */
                            $(".employee").change(function(){
                            getEmployeeList($('[id$=employee]').val());
                            refreshCalendar();
                        });
                        $('[id$=resources]').change(function(){
                            var calView = $('#calendar').fullCalendar('getView').name;
                            if(calView == 'agendaTwoDay'){
                                if(!filter.resource){
                                    getResource(filter.resource);
                                }else if(filter.resource){
                                    $('[id$=resources]').children().each(function(index, value){
                                        if($(this).val() == filter.resource){
                                            flag = true;
                                        }
                                    }); 
                                    if(flag){
                                        getResource(filter.resource);
                                    }else{
                                        $('[id$=resources]').children().each(function(index, value){
                                            if($(this).val()){
                                                $('[id$=resources]').val($(this).val());
                                                return false;
                                            }
                                        });
                                        getResource($('[id$=resources]').val());
                                        filter.resource = $(this).val();
                                    }
                                } 
                            }
                            center = $('.centerList').val();   
                            refreshCalendar();
                        });
                    }
                    
                    function showAdvanceOptions(){
                        $('#updateEnrolmentBtn').removeAttr('disabled');
                        $('#prePaymentId').removeAttr('disabled');
                        $('#downgradeSubscriptionBtn').removeAttr('disabled');
                        $('#cancelSubscriptionBtn').removeAttr('disabled');
                        $('#confirmModalYes').removeAttr('data-updateEnrolmentAdmin');
                        $('#downgradeSubscriptionBtn').attr('title', 'Downgrade Subscription');
                        $('#downgradeSubscriptionBtn').css('pointer-events', '');
                      
                        $('#cancelSubscriptionBtn').attr('title', 'Cancel Subscription');
                        $('#cancelSubscriptionBtn').css('pointer-events', '');
                      
                        $('.editDetails').addClass('slds-hide');
                        //9-Dec-2019 : @@jatin  :for Change Enrollement Enhancement This button should be accessible to only a limited users
                        $('#updateEnrolmentBtn').addClass('slds-hide');
                        $('#updateCentreEnrolmentBtn').addClass('slds-hide');
                        $('#updateEnrolmentAdminBtn').removeAttr('disabled');
                        $('#updateEnrolmentAdminBtn').addClass('slds-hide');
                        var bookingId = $('#advanceOptionsBtn').attr('data-id');
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getAdvanceDetails}',
                            bookingId,
                            function(result, event){
                                if (event.status) {
                                    if(result){
                                       console.log(result);
                                        $('#packageNameAdvance').html(result.packageName);
                                        if(result.startDate){
                                            var arr = result.startDate.split('-');
                                            $('#subscriptionDateAdvance').html(convertDateToMoment(arr[2]+'-'+arr[1]+'-'+arr[0]));
                                        }
                                        var bookingType = $('#advanceOptionsBtn').attr('data-bookingType');
                                        $('#frequencyAdvance').html(result.frequency);
                                        $('#timeslotAdvance').html(result.timeSlot);
                                        $('#confirmWithdrawal').attr('data-id', result.id);
                                        $('#cancelSubscriptionBtn').attr({'data-id': result.id, 'data-timeslot': result.timeSlot});
                                        $('#upgradeSubscriptionBtn').attr('data-id', result.id);
                                        $('#downgradeSubscriptionBtn').attr('data-id', result.id);
                                        $('#OssiaUpdateEnrolmentonClick').attr('data-id', result.id);
                                        $('#updateEnrolmentonClick').attr('data-id', result.id);
                                        
                                        $('#submitUpgradeRequest').attr({'data-id': result.id, 'data-packageId': result.packageId});
                                        // jatin: for upgrade class
                                        $('#submitUpgradeClassRequest').attr({'data-id': result.id, 'data-packageId': result.packageId});
                                        // @@ jatin: 20-dec-2019: for UpgradeToIndividual group class
                                        $('#UpgradeToIndividualEnrolClassSummary').attr({'data-id': result.id, 'data-packageId': result.packageId}); 
                                        $('#submitDowngradeRequest').attr({'data-id': result.id, 'data-packageId': result.packageId});
                                        $('#advanceOptionPopup').removeClass('slds-hide');
                                          //10-Aug-2020:nishi:start manage ossia Upgrade ,downGrade Subscription model 
                                        $('#confirmModalYes').attr('data-isOssia',result.isOssia);
                                        $('#confirmModalNo').attr('data-isOssia',result.isOssia);
                                          //10-Aug-2020:nishi:start manage ossia Upgrade ,downGrade Subscription model 
                                        if(bookingType == "Group Lesson"){
                                            //$('#cancelSubscriptionBtn').attr('disabled','true');
                                            //26-dec-2019: added withdrawal process in group class
                                            
                                             $('#newGroupClassCMP').addClass('slds-hide');
                                            $('#cancelSubscriptionBtn').removeAttr('disabled');
                                            $('#cancelSubscriptionBtn').attr('data-bookingType','Group Lesson');
                                            $('#cancelSubscriptionBtn').attr('title', 'Cancel Class Subscription');
                                            $('#cancelSubscriptionBtn').css('pointer-events', '');
                                            $('#confirmGroupClassWithdrawal').attr('data-bookingType','Group Lesson');
                                            $('#confirmGroupClassWithdrawal').attr('data-id', result.id);
                                            // @19-Dec-2019: for add group lesson Upgrade to individual class  and remove downgrade,prepayment,change enrollment button
                                            $('#downgradeSubscriptionBtn').addClass('slds-hide');
                                            $('#prePaymentId').addClass('slds-hide');
                                            $('#upgradeSubscriptionBtn').addClass('slds-hide');
                                            $('#upgradeEnrolmentGroupToIndividualBtn').removeClass('slds-hide');
                                            $('#upgradeEnrolmentGroupToSameClassBtn').removeClass('slds-hide');
                                            $('#upgradeEnrolmentGroupToHigherPackageBtn').removeClass('slds-hide');
                                        }else{
                                            
                                             //9-Dec-2019 : @@jatin  :for Change Enrollement Enhancement This button should be 
                                             //accessible to only a limited users
                                            if(result.isChange_Enrolment_Admin){    
                                                $('#updateEnrolmentAdminBtn').removeClass('slds-hide');
                                                $('#confirmModalYes').attr('data-updateEnrolmentAdmin','true');
                                                $('#enrolmentUpdatePopupHeader').html('Update Enrolment Admin');
                                            }else{ //9-Dec-2019 : @@jatin  :for Change enrolment changes -confirmation popup:
                                                $('#updateEnrolmentBtn').removeClass('slds-hide');
                                                $('#confirmModalYes').attr('data-updateEnrolmentAdmin','false');
                                                $('#enrolmentUpdatePopupHeader').html('Update Enrolment');
                                            }
                                            
                                            // @19-Dec-2019: for show all buttons not Upgrade to individual
                                               
                                             //@Nishi on 27-Aug-2019 to check An advance invoice is generated Change Or Package_Process_Status__c is Pending
                                            // then we disable Change Centre Button
                                            if(result.isChangeEnrolmentCentre){
                                                $('#updateCentreEnrolmentBtn').attr('disabled',result.isEnableChangeCentre); 
                                                $('#updateCentreEnrolmentBtn').removeClass('slds-hide');
                                                $('#CenterUpdateEnrolmentonClick').attr('data-id', result.id);
                                            }
                                            //@Nishi on 27-Aug-2019 to check An advance invoice is generated Change Or Package_Process_Status__c is Pending
                                            // then we disable Change Centre Button   
                                            $('#downgradeSubscriptionBtn').removeClass('slds-hide');
                                            $('#prePaymentId').removeClass('slds-hide');
                                            $('#upgradeEnrolmentGroupToIndividualBtn').addClass('slds-hide');
                                            $('#upgradeEnrolmentGroupToSameClassBtn').addClass('slds-hide');
                                            $('#upgradeEnrolmentGroupToHigherPackageBtn').addClass('slds-hide');
                                            $('#upgradeSubscriptionBtn').removeClass('slds-hide');
                                           
                                            if(result.isPackagePromotional){
                                                $('#downgradeSubscriptionBtn').attr('disabled', 'true');
                                                $('#downgradeSubscriptionBtn').attr('title', 'Current Package is Promotional type');
                                                $('#downgradeSubscriptionBtn').css('pointer-events', 'none');
                                                
                                                $('#cancelSubscriptionBtn').attr('disabled', 'true');
                                                $('#cancelSubscriptionBtn').attr('title', 'Current Package is Promotional type');
                                                $('#cancelSubscriptionBtn').css('pointer-events', 'none');
                                                //9-Dec-2019 : @@jatin  :for Change Enrollement Enhancement This button should be accessible to only a limited users
                                                if(result.isChange_Enrolment_Admin){    
                                                    $('#updateEnrolmentAdminBtn').attr('disabled','true'); 
                                                }else{
                                                    $('#updateEnrolmentBtn').attr('disabled','true'); 
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            {escape: true}
                        );
                        
                    }
                    
                    function refreshAdvancePopup(){
                        $('#packageNameAdvance').html('');
                        $('#subscriptionDateAdvance').html('');
                        $('#frequencyAdvance').html('');
                        $('#timeslotAdvance').html('');
                    }
                    
                    function removeUpgradeValues(){
                        $('#confirmUpgradeEnrolment').css('pointer-events', 'auto');
                            $('#confirmUpgradeEnrolment').removeAttr('disabled');
                            $('#availableTimeSlots').empty();
                            $('#availableTimeSlots').append('<option>Select Time Slot</option>');
                            $('#availableTimeSlots').attr('disabled', true);
                            $('#selectRequestedPackage').empty();
                            $('#effectiveDateInput').val('');
                            $('#upgradePackageSelectError').html('');
                            $('#effectiveDateError').html('');
                            $('#submitUpgradeRequest').css('pointer-events','');
                            $('#submitUpgradeRequest').removeAttr('disabled');
                            $('#availableTimeSlotsError').html('');
                            $('#effectiveDateInput').empty();
                    }
                    function upgradeSubscription(){
                            $('#advanceOptionPopup').addClass('slds-hide');
                            var bookingId = $('#upgradeSubscriptionBtn').attr('data-id');
                            var bookingType = $('#advanceOptionsBtn').attr('data-bookingType');
                           //10-Aug-2020:nishi:start- manage ossia Upgrade Subscription model 
                            var isOssia =$('#confirmModalYes').attr('data-isOssia');
                            //10-Aug-2020:nishi:end- manage ossia Upgrade Subscription model 
                            
                            if(bookingType == 'Group Lesson'){
                                isOssia = 'false';
                                $('#confirmModalYes').attr('data-isOssia','false');
                                removeUpgradeGroupClassValues();
                            }else{
                                removeUpgradeValues();
                            }
                            //10-Aug-2020:nishi:start- manage ossia Upgrade Subscription model 
                            if(isOssia ==='true'){
                               //console.log('isOssia',isOssia);
                                changeOssiaEnrolment('UpgradeEnrolment');
                            }else{
                                //10-Aug-2020:nishi:end- manage ossia Upgrade Subscription model 
                                //console.log('bookingType'+bookingType);
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.AureusCalendarController.getUpgradedDetails}',
                                    bookingId,bookingType,
                                    function(result, event){
                                        if (event.status) {
                                            if(result){
                                                /*
                                                    Popup Open for Regular type Package...
                                                */
                                                if(result.LessonDay){
                                                    var dates = [];
                                                    var week = result.LessonDay.substring(0, 3);
                                                    dates = getWeekDayDates(week, 2,0);
                                                    var selectDate = '<option value="">Select an Option</option>';
                                                    $(dates).each(function(inex, value){
                                                        selectDate += '<option value="'+value.value+'">'+value.label+'</option>';
                                                    });
                                                    
                                                }
                                                var str = '<option>Select an Option</option>';
                                                //console.log('result.packages'+result.packages);
                                                $(result.packages).each(function(index, value){
                                                    str += '<option value="'+value.id+'">'+value.name+'</option>';
                                                });
                                                //console.log('str'+str);
                                                if(bookingType == 'Group Lesson'){
                                                /////console.log('Group Lesson UI....');
                                                    $('#submitUpgradeClassRequest').attr('data-enrolDay', result.LessonDay);
                                                    $('#currentPackageClassName').html(result.packageName);
                                                    $('#effectiveDateClassInput').append(selectDate);
                                                    $('#selectRequestedClassPackage').append(str);
                                                    $('#gradeClassSubscriptionPopup').removeClass('slds-hide');
                                                }else{
                                                    $('#submitUpgradeRequest').attr('data-enrolDay', result.LessonDay);
                                                    $('#currentPackageName').html(result.packageName);
                                                    $('#effectiveDateInput').append(selectDate);
                                                    $('#selectRequestedPackage').append(str);
                                                    $('#gradeSubscriptionPopup').removeClass('slds-hide');
                                                }
                                                
                                            }
                                        }
                                    },
                                    {escape: true}
                                );
                            }   
                    }
                    
                    function downgradeSubscription(){
                         //10-Aug-2020:nishi:start manage ossia Upgrade Subscription model 
                         var isOssia =$('#confirmModalYes').attr('data-isOssia');
                        if(isOssia =='true'){
                           //console.log('isOssia',isOssia);
                            changeOssiaEnrolment('DowngradeEnrolment');
                        }else{
                         //10-Aug-2020:nishi:end: manage ossia Upgrade Subscription model 
                            $('#confirmDowngradeEnrolment').css('pointer-events', 'auto');
                            $('#confirmDowngradeEnrolment').removeAttr('disabled');
                            $('#availableTimeSlotsDowngrade').empty();
                            $('#availableTimeSlotsDowngrade').append('<option>Select Time Slot</option>');
                            $('#availableTimeSlotsDowngrade').attr('disabled', true);
                            $('#selectRequestedPackageDowngrade').empty();
                            $('#advanceOptionPopup').addClass('slds-hide');
                            $('#effectiveDateInputDowngrade').val('');
                            //$('#noticePeriodDowngradeStart').html('');
                            //$('#noticePeriodDowngradeEnd').html('');
                            $('#effectiveDateInputDowngrade').empty();
                            $('#submitDowngradeRequest').css('pointer-events','');
                            $('#submitDowngradeRequest').removeAttr('disabled');
                            $('#downgradePackageSelectError').html('');
                            $('#effectiveDateErrorDowngrade').html('');
                            $('#availableTimeSlotsDowngradeError').html('');
                            var bookingId = $('#downgradeSubscriptionBtn').attr('data-id');
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getDowngradedDetails}',
                                bookingId,
                                function(result, event){
                                    if (event.status) {
                                        if(result){
                                            $('#submitDowngradeRequest').attr('data-enrolDay', result.LessonDay);
                                            $('#currentPackageNameDowngrade').html(result.packageName);
                                            if(result.LessonDay){
                                                var dates = [];
                                                var week = result.LessonDay.substring(0, 3);
                                                var add30 = moment();
                                                if(userDetail.Designation__c != 'Regional Manager'){
                                                    add30.add(30, 'days');  
                                                }else{
                                                    add30.add(1, 'days');   
                                                }
                                                
                                                dates = getWeekDayDates(week, 3, 0);
                                                var selectDate = '<option value="">Select an Option</option>';
                                                $(dates).each(function(index, value){
                                                    if(moment(value.value) > add30){
                                                        selectDate += '<option value="'+value.value+'">'+value.label+'</option>';
                                                    }
                                                    
                                                });
                                                $('#effectiveDateInputDowngrade').append(selectDate);
                                            }
                                            var str = '<option value="Downgrade Subscription">Select an Option</option>';
                                            $(result.packages).each(function(index, value){
                                                str += '<option value="'+value.id+'">'+value.name+'</option>';
                                            });
                                            $('#selectRequestedPackageDowngrade').append(str);
                                            $('#downgradePopup').removeClass('slds-hide');
                                        }
                                    }
                                },
                                {escape: true}
                            );
                        }
                    }         
                    
                    function teacherChange(){
                        var isTeacher = false;
                        // jatin: 21-jan-2020: for remove employee Id if teacher is selected
                        /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                         $('[id$=employee]').val('');
                        filter.employee = $('[id$=employee]').val();
                        window.setTimeout(function(){
                            var calView = $('#calendar').fullCalendar('getView').name;
                            $("[id$=teachers]").children().each(function(index, value){
                                if($(this).val() == 'AllRosteredStaff'){
                                    
                                    isTeacher = true;
                                }
                            });
                            if(calView == 'agendaDay'){
                                if(filter.teacher){
                                    $("[id$=teachers]").val('AllRosteredStaff'); 
                                }else if(filter.resource){
                                    $("[id$=resources]").val('AllRosteredResource');
                                }
                            }else if(calView == 'agendaTwoDay'){
                                $("[id$=teachers] option[value='AllRosteredStaff']").remove();
                                $("[id$=teachers] option[value='AllStaff']").remove();
                                $("[id$=resources] option[value='AllRosteredResource']").remove();
                                // start :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                $("[id$=resources] option[value='AllLesson']").remove();
                                $("[id$=resources] option[value='AllNonLesson']").remove();
                                // end :Nishi - 30 -jul-2020 : for show all Availabel lesson Resource we added new value  AllLesson
                                $("[id$=resources] option[value='AllResource']").remove();
                            } 
                            if(filter.teacher){
                                $(".teachers").change(); 
                            }else if(filter.resource){
                                $("[id$=resources]").change();
                            }
                            
                            
                        },10);
                    }
                    
                    function getCenter(centerVal){
                        filter.center = centerVal;
                    }
                    function getTeacher(teacherVal){
                        //filter.instrument = '';
                        filter.teacher = teacherVal;
                        // jatin: 21-jan-2020: for remove employee Id if teacher is selected
                       /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                         $('[id$=employee]').val('');
                        filter.employee = $('[id$=employee]').val();
                        if(filter.teacher){
                            teacherResourceToggler('teacher');
                        }
                    }
                    function getResource(resourceVal){
                        filter.resource = resourceVal;
                        // jatin: 21-jan-2020: for remove employee Id if resourse is selected
                        /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                        $('[id$=employee]').val('');
                        filter.employee = $('[id$=employee]').val();
                       //console.log('filter.resource',filter.resource);
                        if(filter.resource){
                            teacherResourceToggler('resource');
                        }
                        refreshCalendar();
                    } 
                    
                    
                    function getInstrument(ins){
                        filter.instrument = ins;
                        // jatin: 21-jan-2020: for remove employee Id if instrument is selected
                        /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                        $('[id$=employee]').val('');
                        filter.employee = $('[id$=employee]').val();
                        instruments = ins;
                        $('.confirmModal').addClass('slds-hide');
                        refreshCalendar();
                    }
                    
                    function teacherResourceToggler(toggle){
                        if(toggle == 'teacher'){
                            $('[id$=resources]').val('');
                        }else if(toggle == 'resource'){
                            $('[id$=teachers]').val(''); 
                        } else{
                            // jatin: 21-jan-2020: for remove employee Id if teacher is selected
                            /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                            $('[id$=employee]').val('');
                            filter.employee = $('[id$=employee]').val();
                        }
                        filter.teacher = $('[id$=teachers]').val(); 
                        filter.resource = $('[id$=resources]').val();
                    }
                    
                    function isWeekDay(datesArray){
                        datesArray = new Array();
                        var currentDate = $('#calendar').fullCalendar('getDate');
                        var bookDate = currentDate.format('YYYY-MM-DD');
                        
                        var beginOfWeek = currentDate.startOf('week');
                        var start = beginOfWeek.format('YYYY-MM-DD');
                        
                        var endOfWeek = currentDate.endOf('week');
                        var end = endOfWeek.format('YYYY-MM-DD');
                        
                        datesArray.push(start);
                        datesArray.push(end);
                        return datesArray;
                    }
                    
                    function completedOrNoShow(bookingId, type, status){
                        if(status && bookingId && type){
                           /*Commented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                            var employeeId = $('[id$=employee]').val();
                           //console.log('employeeId',employeeId);
                            var isPianoBooking = false;
                            if(employeeId || employeeId== undefined){
                                isPianoBooking = true;
                            }
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.completedOrNoShow}',
                                bookingId, type, status, isPianoBooking,
                            
                                function(result, event){
                                    if (event.status) {
                                        if(result){
                                            $('.confirmModal').addClass('slds-hide');
                                            refreshCalendar();
                                            var bookingid= $('#newGroupClassCMP').attr('data-groupclassid');
                                            var newdate =$('#noShowBooking').attr('data-date');
                                            var bookingStatus = $('#noShowBooking').attr('data-type');
                                            if(bookingStatus =='Group Lesson'){
                                                $('#newGroupClassCMP').addClass('slds-hide');
                                                editClassAppointments(bookingid,newdate);
                                                $('#CustomersTabitem').trigger('click');
                                            }
                                        }
                                    }
                                }, 
                                {escape: true}
                            );
                        }
                    }  
                    
                    //Use to create new bookings
                    function createBooking(){
                        // Added by Ravi.. on 14 july 2020
                        $('#LessonModeAdhoc').html($('#selectLessonListSection').val());
                        $('#adhocResourceNew').html($('#selectResourceListSection').val().split('-')[1]);
                        // Added by Ravi.. on 14 july 2020
                        let teacherId;
                        var dateOfBooking = $('#saveNewBooking').attr('data-date');
                        var startTime = dateOfBooking;
                        var endTime = toJSDate( dateOfBooking);
                        let duration = parseInt(bookingData.duration);
                        var milleseconds = new Date(endTime.getTime() + (duration * 60 * 1000));
                        milleseconds = new Date(milleseconds.getTime() - (milleseconds.getTimezoneOffset() * 60 * 1000));
                        ////console.log(JSON.stringify(bookingData));
                        //let duration = parseInt();
                        if(milleseconds){
                            milleseconds = milleseconds.toJSON().split('.')[0];
                        }
                        //console.log('startTime',startTime);
                        //console.log('milleseconds',milleseconds);
                        $(createBookingResult.entities).each(function(index5, value5){
                            if(value5.type == 'Teacher' && value5.name){
                                teacherId = value5.id;
                            }
                        });
                        
                        <!-- event in time slot logic start-->
                            var timeSlots = [];
                        var isReschedulable = false;
                        var teacherWorkings = [];
                        for(index in teacherWorkingHours){
                            if(teacherWorkingHours[index].className == 'teacherWorkingHours' && teacherWorkingHours[index].resourceId == teacherId){
                                teacherWorkings.push(teacherWorkingHours[index]);
                            }
                        }
                        //console.log('teacherWorkings',teacherWorkings);
                        $(teacherWorkings).each(function(index, value){
                            if(Date.parse(toJSDate(value.start)) <= Date.parse(toJSDate(startTime)) && Date.parse(toJSDate(value.end)) >= Date.parse(toJSDate(milleseconds))){
                                isReschedulable = true;
                            }
                        });         
                        <!-- event in time slot logic end-->
                            //console.log('isReschedulable'+isReschedulable);         
                        if(isReschedulable){
                            
                            bookingData.Repeat = $('#repeatSelect').val();
                            if(bookingData.Repeat == 'None'){
                                bookingData.isRecurring = 'false';
                            }else{
                                bookingData.isRecurring = 'true';
                            }
                            
                            bookingData.RepeatEvery = $('#repeatWeek').val();
                            if($('#afterRadio').prop('checked')){
                                bookingData.EndsAfter = $('#recurrenceOccure').val();
                            }else if($('#onRadio').prop('checked')){
                                bookingData.EndsOn = $('#onSelectedDate').val();
                            }
                            
                            $('#saveNewBooking').css('pointer-events','none');
                            bookingData.date = dateOfBooking;
                            $(createBookingResult.entities).each(function(index5, value5){
                                if(value5.type == 'Centre' && value5.name == $('#centerNameLabel').text()){
                                    bookingData.centerId = value5.id;
                                }else if(value5.type == 'Teacher' && value5.name){
                                    bookingData.teacherId = value5.id;
                                }
                            });
                            bookingData.availableHours = $('#makeupHoursLabel').text().split(' ')[0];
                            var lessonMode =$('#selectLessonListSection').val();
                            var resourceId =$('#selectResourceListSection').val();
                            bookingData.resourceId = resourceId.split('-')[0];
                           //console.log('lessonMode',lessonMode);
                           //console.log('resourceId',resourceId);
                            var isError = false;
                            if(lessonMode =='In Centre'){
                                if(!(resourceId && resourceId != null && resourceId != undefined && resourceId !='')){
                                    $('#saveNewBooking').css('pointer-events','none');
                                    $('#resourceErrorMsg').text('Please Select Resource Id');
                                    isError= true;
                                }else{
                                    $('#saveNewBooking').css('pointer-events','');
                                    $('#resourceErrorMsg').text('');
                                }
                            }
                            if(!isError){
                                console.log('Adhoc bookingData'+bookingData);
                                if(bookingData.type == 'home-trial'){
                                    
                                    validationOnCreationOfHomeTrialBookings(bookingData);
                                }else if(bookingData.type == 'Makeup'){	
                                    // added by Nishi: 22-Jul-2020: Start : for If new booking is created in Ossia center 	
                                    // then according to new requirement we check current teacher id is equals is student old teacher  	
                                    var isossia = $('#saveNewBooking').attr('data-isossia');	
                                    var enrolTeacher = $('#OssiaTeacherSelect').val();	
                                    var selectedTeacherInstrument = $('#saveNewBooking').attr('data-teacherinstrument');	
                                    var selectedInstrument = $('#saveNewBooking').attr('data-instrument');	
                                    var enrolInstrument = $('#OssiaInstrumentSelect').val(); 	
                                    $('#OssiaStudentErrorMsg').text('');	
                                    $('#OssiaInstrumentErrorMsg').text('');	
                                    if(isossia && isossia === 'true'){	
                                        var errorFlag = false;	
                                        if(!enrolTeacher || enrolTeacher == '' || enrolTeacher == undefined  ){	
                                            $('#OssiaStudentErrorMsg').html('Please Select the Teacher...');	
                                            errorFlag = true;           	
                                        }	
                                        if(!enrolInstrument || enrolInstrument == '' || enrolInstrument == undefined  ){	
                                            $('#OssiaInstrumentErrorMsg').html('Please Select the Instrument...');	
                                            errorFlag = true;           	
                                        }	
                                        if(!errorFlag){	
                                            if(!(selectedInstrument && selectedInstrument != null && selectedInstrument != undefined && selectedInstrument.length > 0 &&	
                                                 selectedTeacherInstrument && selectedTeacherInstrument != null && selectedTeacherInstrument != undefined && selectedTeacherInstrument.length > 0	
                                                 && selectedTeacherInstrument.includes(selectedInstrument))){	
                                                $('#saveNewBooking').css('pointer-events','none');	
                                               // $('#OssiaStudentErrorMsg').text('select a different teacher.');
                                               $('#OssiaStudentErrorMsg').text('Current teacher skills do not match the instrument you have chosen.');	
                                                $('#OssiaInstrumentErrorMsg').text('Please Select the different Instrument.');	
                                                errorFlag = true;   	
                                            }else if(bookingData.isRecurring == 'false'){
                                                if(parseInt(bookingData.duration) > parseInt($('#makeupHoursLabel').text().split(' ')[0])){	
                                                    $('#saveNewBooking').css('pointer-events','none');	
                                                    $('#makeupHoursErrorMsg').text('Insufficient Makup minutes');	
                                                }else{	
                                                    bookingData.teacherId =  $('#saveNewBooking').attr('data-newTeacherId');	
                                                    bookingData.enrolmentId =  $('#saveNewBooking').attr('data-enrolementId');	
                                                    bookingData.isOssia =true;	
                                                    createBookingProceed();  	
                                                }
                                            }else{	
                                                bookingData.teacherId =  $('#saveNewBooking').attr('data-newTeacherId');	
                                                bookingData.enrolmentId =  $('#saveNewBooking').attr('data-enrolementId');	
                                                bookingData.isOssia =true;	
                                                createBookingProceed();  	
                                            }	
                                        }	
                                    }else if(bookingData.isRecurring == 'false'){	
                                        // added by Nishi: 22-Jul-2020: End  : for If new booking is created in Ossia center	
                                        if(parseInt(bookingData.duration) > parseInt($('#makeupHoursLabel').text().split(' ')[0])){	
                                            $('#saveNewBooking').css('pointer-events','');	
                                            $('#makeupHoursErrorMsg').text('Insufficient Makup minutes');	
                                        }else{	
                                            createBookingProceed();  	
                                        }	
                                    }else{	
                                        createBookingProceed();	
                                    }	
                                    
                                }else if(bookingData.type == 'Adhoc'){
                                     // added by Nishi: 22-Jul-2020: Start : for If new booking is created in Ossia center 	
                                    // then according to new requirement we check current teacher id is equals is student old teacher  	
                                    var isossia = $('#saveNewBooking').attr('data-isossia');	
                                    var enrolTeacher = $('#OssiaTeacherSelect').val();	
                                    var selectedTeacherInstrument = $('#saveNewBooking').attr('data-teacherinstrument');	
                                    var selectedInstrument = $('#saveNewBooking').attr('data-instrument');	
                                    var enrolInstrument = $('#OssiaInstrumentSelect').val(); 	
                                    console.log('Adhoc bookingData',bookingData);
                                    $('#OssiaStudentErrorMsg').text('');	
                                    $('#OssiaInstrumentErrorMsg').text('');	
                                    if(isossia && isossia === 'true'){	
                                        var errorFlag = false;	
                                        if(!enrolTeacher || enrolTeacher == '' || enrolTeacher == undefined  ){	
                                            $('#OssiaStudentErrorMsg').html('Please Select the Teacher...');	
                                            errorFlag = true;           	
                                        }	
                                        if(!enrolInstrument || enrolInstrument == '' || enrolInstrument == undefined  ){	
                                            $('#OssiaInstrumentErrorMsg').html('Please Select the Instrument...');	
                                            errorFlag = true;           	
                                        }	
                                        if(!errorFlag){	
                                            if(!(selectedInstrument && selectedInstrument != null && selectedInstrument != undefined && selectedInstrument.length > 0 &&	
                                                 selectedTeacherInstrument && selectedTeacherInstrument != null && selectedTeacherInstrument != undefined && selectedTeacherInstrument.length > 0	
                                                 && selectedTeacherInstrument.includes(selectedInstrument))){	
                                                $('#saveNewBooking').css('pointer-events','none');	
                                                // $('#OssiaStudentErrorMsg').text('select a different teacher.');	
                                                $('#OssiaStudentErrorMsg').text('Current teacher skills do not match the instrument you have chosen.');	
                                                $('#OssiaInstrumentErrorMsg').text('Please Select the different Instrument.');	
                                            }else{
                                                $('#newBookingDetails').addClass('slds-hide');
                                                if(bookingData.isRecurring == 'false'){
                                                    showAdhocBookings(bookingData.studentId, bookingData.packageId, bookingData.date.split('T')[0], bookingData.date.split('T')[1], 1);
                                                }else if(bookingData.isRecurring == 'true'){
                                                    countOfBookings(bookingData);
                                                }
                                            }
                                        }
                                    }else{
                                        $('#newBookingDetails').addClass('slds-hide');
                                        if(bookingData.isRecurring == 'false'){
                                            showAdhocBookings(bookingData.studentId, bookingData.packageId, bookingData.date.split('T')[0], bookingData.date.split('T')[1], 1);
                                        }else if(bookingData.isRecurring == 'true'){
                                            countOfBookings(bookingData);
                                        }
                                    } 
                                }else{
                                    createBookingProceed();
                                }
                            }
                        }else{
                            //console.log('time exceeds');
                            $('#toastMsg').html('Booking Time Exceeds Teacher Working Hours');
                            $('.toastclass').removeClass('slds-theme_success');
                            $('.toastclass').addClass('slds-theme_error');
                            toastLaunch();
                        }
                        
                    }
                    function showAdhocBookings(student, package, dateOfAppointment, timeOfAppointment, recurring){
                        $('#countOfBookingTableBody').empty();
                        var teacherId = $('#saveNewBooking').attr('data-teacher');
                         // Added by Nishi.. on 1 Aug 2020
                         $('#LessonModeAdhoc').html($('#selectLessonListSection').val());
                        $('#adhocResourceNew').html($('#selectResourceListSection').val().split('-')[1]);
                        // Added by Nishi.. on 1 Aug 2020
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getPackageDetail}',
                            student, package, teacherId, 
                            function(result, event){
                                if (event.status) {
                                    var trRow = '';
                                    var total = 0;
                                    var gstTotal = 0;  
                                   //console.log('getPackageDetail -result',result);     
                                    if(timeOfAppointment){      
                                        var formmatedTime = convertTimeToMoment(timeOfAppointment.split(':')[0], timeOfAppointment.split(':')[1]);      
                                    }
                                    $('#studentNameadhoc').html(result.studentFirstName + ' ' + result.studentLastName);
                                    $('#teacherNameAdhoc').html(result.teacherName);
                                    $('#centerNameadhoc').html(result.centerName);
                                    $('#packageDurationadhoc').html(result.duration + ' min');
                                    $('#createAdhocBookingBtn').attr({'data-package': result.packageId, 'data-centerId': filter.center, 'data-teacherId': result.teacherId, 'data-studentId': result.studentId, 'data-count': recurring, 'data-date': dateOfAppointment+'T'+timeOfAppointment});
                                    var gstRate =0;
                                    for(var i=1; i<=recurring; i++){
                                        var unitfee = result.unitFee.toFixed(2);
                                       ////console.log('unitfee',unitfee);
                                        total += parseFloat(unitfee);

                                        trRow += '<tr class="slds-hint-parent"><td data-label="Sr.No"><div class="slds-truncate" title="Sr.No">'+i+'</div></td><td data-label="Package Name"><div class="slds-truncate" title="Package Name">'+result.packageName+'</div></td><td data-label="Package Time"><div class="slds-truncate" title="Package Time">'+formmatedTime+'</div></td><td data-label="Package Price"><div class="slds-truncate" title="Package Price">$'+result.unitFee.toFixed(2)+'</div></td></tr>';
                                        if(result.gstRate > 0){
                                            gstRate += parseFloat((parseFloat(result.unitFee.toFixed(2)) * parseFloat(result.gstRate.toFixed(2)) / 100).toFixed(2));
                                            //console.log('GSTrate'+gstRate);
                                            
                                        }
                                        //console.log('@@gstRate'+gstRate);
                                    }
                                    if(gstRate > 0){
                                       ////console.log('total',total);
                                      // //console.log('result.gstRate',gstRate);
                                        gstTotal = gstRate+total;
                                        trRow += '<tr class="slds-hint-parent"><td  colspan="2"></td><td data-label="GST"><b>GST('+(result.gstRate.toFixed(2))+'%)</b></td><td>$'+(gstRate.toFixed(2))+'</td>';
                                    }else{
                                        gstTotal = 0;
                                    }     
                                    //console.log('gstTotal',gstTotal);
                                    trRow += '</tr><tr class="slds-hint-parent"><td colspan="2"></td><td data-label="total"><b>Total</b></td><td>$'+(parseFloat(gstTotal).toFixed(2))+'</td></tr>';
                                    
                                    $('#countOfBookingTableBody').append(trRow);
                                    $('#newAdhocDetailPopup').removeClass('slds-hide');
                                }
                            }, 
                            {escape: true}
                        );
                    }
                    
                    
                    function createAdhocBookings(){
                        $('#createAdhocBookingBtn').attr('disabled', 'true');
                        $('#createAdhocBookingBtn').css('pointer-events', 'none');
                        var packageId = $('#createAdhocBookingBtn').attr('data-package');
                        var teacherId = $('#createAdhocBookingBtn').attr('data-teacherId');
                        var studentId = $('#createAdhocBookingBtn').attr('data-studentId');
                        var recurring = $('#createAdhocBookingBtn').attr('data-count');
                        var bookDate = $('#createAdhocBookingBtn').attr('data-date');
                        var center = $('#createAdhocBookingBtn').attr('data-centerId');
                        var isossia = $('#saveNewBooking').attr('data-isossia');	
                        var enrolmentId ='';
                        if(isossia && isossia === 'true'){	
                            teacherId =  $('#saveNewBooking').attr('data-newTeacherId');	
                            enrolmentId =  $('#saveNewBooking').attr('data-enrolementId');	
                        }
                         // Added by Nishi.. on 1 Aug 2020
                        var lessonMode = $('#selectLessonListSection').val();
                        var resourceId = $('#selectResourceListSection').val().split('-')[0];
                        // Added by Nishi.. on 1 Aug 2020
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.createAdhocBookings}',
                            packageId, center,teacherId, studentId, recurring, bookDate,lessonMode,resourceId,enrolmentId,
                            function(result, event){
                                //console.log('@@@result', result);
                                if (event.status) {
                                    if(result){
                                        $('#newAdhocDetailPopup').addClass('slds-hide');
                                        $('#createAdhocBookingBtn').removeAttr('disabled');
                                        $('#createAdhocBookingBtn').css('pointer-events', '');
                                        $('#toastMsg').html('Ad-hoc Bookings are successfully created...');
                                        toastLaunch();
                                        refreshCalendar();
                                        refreshNewBookingPopup();
                                    }else{
                                        $('#newAdhocDetailPopup').addClass('slds-hide');
                                        $('#createAdhocBookingBtn').removeAttr('disabled');
                                        $('#createAdhocBookingBtn').css('pointer-events', '');
                                        $('#toastMsg').html('Booking cannot be created...');
                                        $('.toastclass').removeClass('slds-theme_success');
                                        $('.toastclass').addClass('slds-theme_error');
                                        toastLaunch();
                                        refreshNewBookingPopup();
                                    }
                                    
                                }
                            }, 
                            {escape: true}
                        );
                    }
                    
                    function countOfBookings(bookingObj){
                        if(bookingObj.isRecurring == 'false'){
                            showAdhocBookings(bookingObj.studentId, bookingObj.packageId, bookingObj.date.split('T')[0], bookingObj.date.split('T')[1]);
                        }else if(bookingObj.isRecurring == 'true'){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getCountOfBookings}',
                                bookingObj,
                                function(result, event){
                                    if (event.status) {
                                        showAdhocBookings(bookingData.studentId, bookingData.packageId, bookingData.date.split('T')[0], bookingData.date.split('T')[1], result);
                                        
                                    }
                                }, 
                                {escape: true}
                            );
                        }
                    }
                    
                    function validationOnCreationOfHomeTrialBookings(bookingObj){
                        if(bookingObj.duration == 30 && bookingObj.type == 'home-trial'){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getEventsRealTime}',
                                teacher, filter.resource, center, bookingObj.date.split('T')[0], filter.instrument,
                                function(result, event){
                                    if (event.status) {
                                        var canCreate = false;
                                        eventsOfCalendar = JSON.parse(result.replace(/(&quot\;)/g,"\""));
                                        canCreate = checkAnyBusyBookings(bookingObj);
                                        if(canCreate == true){
                                            createBookingProceed();
                                        }else{
                                            $('#newBookingDetails').addClass('slds-hide');
                                            refreshNewBookingPopup();
                                            $('#toastMsg').html('Cannot create Booking Please Remove Existing Booking..');
                                            $('.toastclass').removeClass('slds-theme_success');
                                            $('.toastclass').addClass('slds-theme_error');
                                            toastLaunch();
                                        }
                                    }
                                }, 
                                {escape: true}
                            );
                            
                        }
                    }
                    
                    function checkAnyBusyBookings(bookingObj){
                        
                        var iscorrect = true;
                        var startJsDate = toJSDate(bookingObj.date);
                        startJsDate.setMinutes(startJsDate.getMinutes() - 30);
                        var jsDate = Date.parse(startJsDate);
                        startJsDate.setMinutes(startJsDate.getMinutes() + 60);
                        var jsDateEnd = Date.parse(startJsDate);
                        
                        $(eventsOfCalendar).each(function(i, v){
                            var start = Date.parse(toJSDate(v.start));
                            var end = Date.parse(toJSDate(v.end));
                            if((start <= jsDate && end >= jsDateEnd) || (jsDate <= start && jsDateEnd >= end) || (jsDate > start && jsDateEnd > end && jsDate < end) || (jsDate < start && jsDateEnd < end && jsDateEnd > start)){
                                iscorrect = false;
                                return false;
                            }
                        });
                        return iscorrect;
                    }
                    
                    function createBookingProceed(){ 
                        $('.confirmModal').removeClass('slds-hide');
                        $('#confirmBody').html('Do you want to send an email?');
                        $('#confirmHeader').html('Email Confirmation');
                        $('#confirmModalYes').attr('data-origin','createBooking');
                        $('#confirmModalNo').attr('data-origin','createBooking');
                        $('#newBookingDetails').addClass('slds-hide');
                        
                        
                    }
                    
                    function sendEmail(){
                        var subject = $('#emailSubject').html();
                        var body = $('#templateOutput').html();
                        var parentId = $('.sendEmail').attr('data-parentId');
                        
                    }
                    
                    function resetTabs(){
                        bookingReschedule.Id = '';
                        bookingReschedule.Type = '';
                        bookingReschedule.resource = '';
                        bookingReschedule.date = '';
                        bookingReschedule.Individual = '';
                        bookingReschedule.isRecurrence = '';
                        bookingReschedule.scheduleType = '';
                        $('.customTabs li').removeClass('slds-active');
                        $('.customTabs li').first().addClass('slds-active');
                        $('.slds-tabs--default__content').addClass('slds-hide');
                        $('.slds-tabs--default__content').first().removeClass('slds-hide');
                    }
                    
                    function showTimeOnResourceColumn(listOfResource, view){
                        if(!$("tr .fc-widget-content:nth-child(2)").html()){
                            var width = Number($('.fc-day-header').width())+3;
                            var width1 = Number($('.fc-day').width())+3;
                            
                            for(var i = 0; i < listOfResource; i++){
                                var left = $("tr .fc-widget-content:nth-child(2)").parent().parent().find('.fc-time').width() + 10;
                                if(view == 'week'){
                                    $( "tr .fc-widget-content:nth-child(2)").append('<td class="temp-cell" style="border: 0px; width:'+(width)+'px; text-align: right; position: relative; right:0px;"></td>');
                                }else{
                                    $( "tr .fc-widget-content:nth-child(2)").append('<td class="temp-cell" style="border: 0px; width:'+(width1)+'px; text-align: right; padding-right: 10px; position: relative; right:0px;height:50x;"></td>');
                                }
                            }
                            $("tr .fc-widget-content:nth-child(2)").children('.temp-cell').each(function(){
                                if($(this).parent().parent().find('.fc-time span').html()){
                                    $(this).html($(this).parent().parent().find('.fc-time span').html());
                                }
                            });
                            
                        }
                    }
                    function closeUpDownSummary(){
                        let origin = $('#updownsummaryclose').attr('data-origin');
                        if(origin == 'upgrade'){
                            $('#summaryPopForUpDown').addClass('slds-hide');
                            $('#gradeSubscriptionPopup').removeClass('slds-hide');
                        }else if(origin == 'downgrade'){
                            
                            $('#downgradeDetailsSection').addClass('slds-hide');
                            $('#summaryPopForUpDown').addClass('slds-hide');
                            $('#downgradePopup').removeClass('slds-hide');
                        }
                    }
                    /*function upgradeSummary (origin){
            var error = false;
            if(origin == 'upgrade'){
            var bookingId = $('#submitUpgradeRequest').attr('data-id');
            var oldPackageId = $('#submitUpgradeRequest').attr('data-packageid');
            var newPackageId = $('#selectRequestedPackage').val();
            var effectiveDate = $('#effectiveDateInput').val();
            var today = moment();
            if(bookingId && oldPackageId){
            if(newPackageId == "Select an Option"){
            $('#upgradePackageSelectError').html('Please select the package...');
            error = true;
            }else{
            $('#upgradePackageSelectError').html('');
            }

            if(!effectiveDate){
            $('#effectiveDateError').html('Select the effective date....');
            error = true;
            }else{
            var effectiveDateMoment = moment();
            effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
            if(today.diff(effectiveDateMoment) > 0){
            $('#effectiveDateError').html('Select Future effective date....');
            error = true;
            }else{
            $('#effectiveDateError').html('');
            }
            }
            }
            }else if(origin == 'downgrade'){
            var bookingId = $('#submitDowngradeRequest').attr('data-id');

            var startDate = $('#submitDowngradeRequest').attr('startDate');
            var endDate = $('#submitDowngradeRequest').attr('endDate'); // this is last lesson date
            var newPackageId = $('#selectRequestedPackageDowngrade').val();
            var oldPackageId =  $('#submitDowngradeRequest').attr('data-packageid');
            var requestDate = $('#effectiveDateInputDowngrade').val();
            var effectiveDate = $('#submitDowngradeRequest').attr('effectiveDate');

            $('#summaryRequestDate1').html(convertDateToMoment(new Date(requestDate)));
            $('#summaryEffectiveLessonDate').html(convertDateToMoment(new Date(effectiveDate)));
            $('#summaryNoticeStartDate1').html(convertDateToMoment(new Date(startDate)));
            $('#summaryNoticeEndDate1').html(convertDateToMoment(new Date(endDate)));

            if(newPackageId == 'Downgrade Subscription'){
            $('#downgradePackageSelectError').html('Please select any package!');
            isError = true;
            }else{
            $('#downgradePackageSelectError').html('');
            }

            if(!requestDate){
            $('#effectiveDateErrorDowngrade').html('Please select the date!');
            isError = true;
            }
            if(!startDate || !effectiveDate){
            $('#effectiveDateErrorDowngrade').html('Please define Notice Period!');
            isError = true;
            }
            }

            if(!error){
            $('#updownsummaryclose').attr('data-origin',origin);
            Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.getUpgradeDowngradeSummary}',
            bookingId,oldPackageId,newPackageId,effectiveDate,
            function(result, event){
            if(result){
            $('#oldPackageName').html(result.oldPack.Name);
            $('#newPackageName').html(result.newPack.Name);
            $('#lessonWithOldPackage').html(result.noOfBookingWithOldPack);
            $('#lessonWithNewPackage').html(result.noOfBookingWithNewPack);

            if(origin == 'upgrade'){
            $('#summaryPopForUpDown').removeClass('slds-hide');
            $('#gradeSubscriptionPopup').addClass('slds-hide');
            }else if(origin == 'downgrade'){
            $('#downgradeDetailsSection').removeClass('slds-hide');
            $('#summaryPopForUpDown').removeClass('slds-hide');
            $('#downgradePopup').addClass('slds-hide');
            }
            }
            });  
            }

            }*/
                    function submitUpgradePackageRequest(){
                        var error = false;
                        var bookingId = $('#submitUpgradeRequest').attr('data-id');
                        var oldPackageId = $('#submitUpgradeRequest').attr('data-packageid');
                        var newPackageId = $('#selectRequestedPackage').val();
                        var effectiveDate = $('#effectiveDateInput').val();
                        var availableTimeSlot = $('#availableTimeSlots').val();

                        var today = moment();
                        if(bookingId && oldPackageId){
                            if(newPackageId == "Select an Option"){
                                //$('#upgradePackageSelectError').html('Please select the package...');
                                error = true;
                            }else{
                                $('#upgradePackageSelectError').html('');
                            }
                            
                            if(!effectiveDate){
                                //$('#effectiveDateError').html('Select the effective date....');
                                error = true;
                            }else{
                                var effectiveDateMoment = moment();
                                effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                                if(today.diff(effectiveDateMoment) > 0){
                                    // $('#effectiveDateError').html('Select Future effective date....');
                                    error = true;
                                }else{
                                    $('#effectiveDateError').html('');
                                }
                                
                            }
                            
                            if(availableTimeSlot == "Select Time Slot"){
                                error = true;
                            }else{
                                $('#availableTimeSlotsError').html('');
                            }
                            if(!error){
                                $('#gradeSubscriptionPopup').addClass('slds-hide');
                                $('#upgradeDowngradeSummaryModal').addClass('slds-hide');
                                $('#confirmUpgradeEnrolment').css('pointer-events','none');
                                $('#confirmUpgradeEnrolment').attr('disabled','true');
                                /*$('.confirmModal').removeClass('slds-hide');
            $('#confirmBody').html('Do you want to send an email?');
            $('#confirmHeader').html('Email Confirmation');*/
                                    
                                    $('#confirmModalYes').attr({'data-origin': 'upgrade', 'data-id': bookingId, 'data-date': effectiveDate, 'data-newPackage': newPackageId, 'data-oldPackage': oldPackageId, 'data-timeslot' :availableTimeSlot});
                                    //$('#confirmModalNo').attr({'data-origin': 'upgrade', 'data-id': bookingId, 'data-date': effectiveDate, 'data-newPackage': newPackageId, 'data-oldPackage': oldPackageId, 'data-timeslot' :availableTimeSlot});
                                    $('#confirmModalYes').trigger('click');
                                } 
                            }
                        }
                    
                    /*function updatePackageCallout(bookingId, effectiveDate, newPackageId, oldPackageId, caseRedirect){
            Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.updatePackageRequestCallout}',
            bookingId, effectiveDate, newPackageId, oldPackageId, caseId, caseRedirect, 
            function(result, event){
            $('#upgradeDowngradeSummaryModal').addClass('slds-hide');
            if(!result && result != 'error'){
            $('#toastMsg').html('Request logged successfully');
            $('.toastclass').addClass('slds-theme_success');
            $('.toastclass').removeClass('slds-theme_error');
            toastLaunch();
            }else if(!result){
            redirectToCaseRecord(result);
            }else if(result == 'error'){
            $('#toastMsg').html('Request failure!<br/>Please try again....');
            $('.toastclass').removeClass('slds-theme_success');
            $('.toastclass').addClass('slds-theme_error');
            toastLaunch();
            }
            refreshCalendar();
            }
            );
            }*/
                    
                    function addBusyTimeFunc(){
                        $('.recurrence').removeClass('slds-hide');
                        $('#descriptionErrorBusyCreate').html('');
                        $('#categorySelectBusyCreateError').html('');
                        $('#repeatSelectBusy').val('None');
                        $('#repeatSelectBusy').change();
                        $('#descriptionBusyCreate').val('');
                        $('#newBookingModal').addClass('slds-hide');
                        $('#durationSelectBusyCreate').empty();
                        $('#durationSelectBusyCreateError').addClass('slds-hide');
                        var centerId = $('#addBusyTime').attr('data-centerid');
                        var source = $('#addBusyTime').attr('data-source');
                        var centerName = $('.centerList option:selected').text();
                        var teacherId =  $('#addBusyTime').attr('data-teacherid');
                        var teacherName;
                        if(source == 'teacher'){
                            $('.teachers option').each(function(index, value){
                                if(value.value == teacherId){
                                    teacherName = $(this).text();
                                }
                            });
                            $('#staffResourceBusyCreate').html('Staff');
                        }else if(source == 'resource'){
                            $('[id$=resources] option').each(function(index, value){
                                if(value.value == teacherId){
                                    teacherName = $(this).text();
                                }
                            });
                            $('#staffResourceBusyCreate').html('Resource');
                        }
                        
                        var timeMoment = moment().millisecond(0).second(0).minute(0).hour(1);
                        var selectDuration = '';
                        var count = 60;
                        selectDuration += '<option value="15">00:15</option>';
                        selectDuration += '<option value="30">00:30</option>';
                        selectDuration += '<option value="45">00:45</option>';
                        while(count <= 600){
                            selectDuration += '<option value="'+count+'">'+timeMoment.format('hh:mm')+'</option>';
                            count += 15;
                            timeMoment.add(15, 'm');
                        }
                        var time = $('#addBusyTime').attr('data-date');
                        
                        
                        
                        
                        $('#centerNameBusyCreate').html(centerName);
                        $('#durationSelectBusyCreate').append(selectDuration);
                        $('#staffBusyCreate').html(teacherName);
                        $('#timeSlotBusyCreate').html(convertDateToMoment(time.split('T')[0]) + ' '+ convertTimeToMoment(time.split('T')[1].split(':')[0], time.split('T')[1].split(':')[1]));
                        
                        
                        $('#saveBusyBookingCreate').attr({'data-centerId': centerId, 'data-teacherId': teacherId, 'data-date': time, 'data-source': source});
                        $('#categorySelectBusyCreate').empty();
                        var categoryStr = '<option value="">Select Category</option>';
                        if(source == 'teacher'){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                                'Booking__c', 'Category__c', 
                                function(result, event){
                                    if(result){
                                        $(result).each(function(index, value){
                                            categoryStr += '<option value="'+value+'">'+value+'</option>'
                                        });
                                        $('#categorySelectBusyCreate').append(categoryStr);
                                        $('#busyBookingCreateModal').removeClass('slds-hide');
                                    }
                                }, 
                                {escape: true}
                            );
                        }else if(source == 'resource'){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                                'Booking__c', 'Resource_Category__c', 
                                function(result, event){
                                    if(result){
                                        $(result).each(function(index, value){
                                            categoryStr += '<option value="'+value+'">'+value+'</option>'
                                        });
                                        $('#categorySelectBusyCreate').append(categoryStr);
                                        $('#busyBookingCreateModal').removeClass('slds-hide');
                                    }
                                }, 
                                {escape: true}
                            );
                        }
                        
                    }
                    
                    
                    function getCancelRequestDateFunc(){
                        var timeslot = $('#cancelSubscriptionBtn').attr('data-timeslot');
                        var bookingId = $('#cancelSubscriptionBtn').attr('data-id');
                        $('#confirmWithdrawal').attr('data-id', bookingId );
                        var effectiveDate = $('#cancelRequestEndDate').val();
                        var endDate;
                        var lastLessonDate;
                        if(effectiveDate){
                            endDate = new moment(effectiveDate.split('/')[2]+'-'+effectiveDate.split('/')[0]+'-'+effectiveDate.split('/')[1]);
                        }else{
                            $('#submitCancelRequest').attr('disabled', 'true');
                            $('#lastLessonDate').html('');
                        }
                        if(timeslot){
                            timeslot = timeslot.split(' ')[1];
                            timeslot = timeslot.substr(0,3);
                        }
                        for(;;){
                            if(endDate.format('ddd').toUpperCase() == timeslot){                   
                                lastLessonDate = convertDateToMoment(endDate.format('YYYY-MM-DD'));
                                $('#submitCancelRequest').attr('lastLessonDate', endDate.format('YYYY-MM-DD'));
                                $('#confirmWithdrawal').attr('lastLessonDate', endDate.format('YYYY-MM-DD'));
                                break;
                            }
                            endDate.subtract(1, 'days');
                        }
                        $('#lastLessonDate').html(lastLessonDate);
                        $('#submitCancelRequest').removeAttr('disabled');
                        
                        //yyyy-mm-dd
                        
                        
                        /*if($('#cancelByRequestDate').prop('checked') && bookingId && effectiveDate){
            Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.getNoticePeriod}',
            bookingId, effectiveDate, 
            function(result, event){
            if(result){
            if('startDate' in result && 'endDate' in result && 'effectiveDate' in result){
            var startDate = moment(result.startDate);
            var endDate = moment(result.endDate);
            var effectiveDate = moment(result.effectiveDate);
            $('#noticePeriodStart').html(startDate.format('ddd, MMM DD YYYY'));
            $('#noticePeriodEnd').html(endDate.format('ddd, MMM DD YYYY'));
            $('#lastLessonDate').val(endDate.format('MM/DD/YYYY'));
            $('#submitCancelRequest').attr({'startDate' : startDate.format('YYYY-MM-DD'), 'endDate' : endDate.format('YYYY-MM-DD'), 'effectiveDate': effectiveDate.format('YYYY-MM-DD')});                               
            }else if('error' in result){
            }
            }
            }    
            );
            }*/
                        }
                    
                    /*function getLastLessonDateFunc(){
            var bookingId = $('#cancelSubscriptionBtn').attr('data-id');
            var effectiveDate = $('#lastLessonDate').val();   
            if($('#cancelByLessonEndDate').prop('checked')){
            Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.getNoticePeriodByEndDate}',
            bookingId, effectiveDate, 
            function(result, event){
            if(result){
            if('startDate' in result && 'endDate' in result && 'requestDate' in result && 'effectiveDate' in result){
            var startDate = moment(result.startDate);
            var endDate = moment(result.endDate);
            var effectivDate = moment(result.effectiveDate);
            var requestDate = moment(result.requestDate);
            $('#noticePeriodStart').html(startDate.format('ddd, MMM DD YYYY'));
            $('#noticePeriodEnd').html(endDate.format('ddd, MMM DD YYYY'));
            $('#cancelRequestEndDate').val(requestDate.format('MM/DD/YYYY'));
            $('#submitCancelRequest').attr({'startDate' : startDate.format('YYYY-MM-DD'), 'endDate' : endDate.format('YYYY-MM-DD'), 'effectivDate' : effectivDate.format('YYYY-MM-DD')});                               
            }else if('error' in result){
            }
            }
            }    
            );
            }
            }*/
                    
                    function saveBusyBookingFunc(){
                        
                        var centerId = $('#saveBusyBookingCreate').attr('data-centerid');
                        var teacherId =  $('#saveBusyBookingCreate').attr('data-teacherid');
                        var time = $('#saveBusyBookingCreate').attr('data-date');
                        var source = $('#saveBusyBookingCreate').attr('data-source');
                        var dataId = '';
                        
                        if($('#saveBusyBookingCreate').attr('data-id')){
                            dataId = $('#saveBusyBookingCreate').attr('data-id');
                        }
                        
                        var countOfOccurence = 0;
                        $('#descriptionErrorBusyCreate').html('');
                        $('#categorySelectBusyCreateError').html('');
                        var errorFlag = false;
                        if($('#repeatSelectBusy').val() == 'None'){
                            countOfOccurence = 1;
                        }else if($('#repeatSelectBusy').val() == 'Weeks'){
                            if($('#afterRadioBusy').prop('checked')){
                                countOfOccurence = $('#recurrenceOccureBusy').val();
                            }else if($('#onRadioBusy').prop('checked')){
                                var dt = $('#onSelectedDateBusy').val();
                                var startDate = moment(time.split('T')[0]);
                                var duplicate = moment(time.split('T')[0]);
                                var enddate = moment();
                                if(dt){
                                    enddate.year(dt.split('/')[2]).month(dt.split('/')[0] - 1).date(dt.split('/')[1]);
                                    while(startDate <= enddate){
                                        if(startDate.format('ddd') == duplicate.format('ddd')){
                                            countOfOccurence++;
                                        }
                                        startDate.add(1, 'days');
                                    }
                                }
                                
                                
                            }
                        }
                        
                        if($('#categorySelectBusyCreate').val() == 'Others' && !$('#descriptionBusyCreate').val()){
                            errorFlag = true;
                            $('#descriptionErrorBusyCreate').html('Please Fill The Description. If Reason Is Other...');
                        }
                        
                        if(!$('#categorySelectBusyCreate').val()){
                            errorFlag = true;
                            $('#categorySelectBusyCreateError').html('Please Select The Category....');
                        }
                        
                        if(!errorFlag){
                            validateBusyBookingCreation($('#durationSelectBusyCreate').val(), time);
                        }
                        
                        if(!errorFlag){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.createBusyAppointments}',
                                centerId, teacherId, time, $('#durationSelectBusyCreate').val(), $('#descriptionBusyCreate').val(), $('#categorySelectBusyCreate').val(), countOfOccurence, source, dataId,
                                function(result, event){
                                    if(!result){
                                        $('#busyBookingCreateModal').addClass('slds-hide');
                                        $('#descriptionBusyCreate').val('');
                                        refreshCalendar();
                                    }
                                }
                            );
                        }
                        
                    }
                    
                    function getBusyBookingDetails(bookingId, startTime){
                        $('#centerNameBusyView').html('');
                        $('#timeSlotBusyView').html('');
                        $('#durationBusyView').html('');
                        $('#staffBusyView').html('');
                        $('#descriptionBusyView').val('');
                        $('#categoryBusyView').html('');
                        if(bookingId){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getBusyBookingDetails}',
                                bookingId,
                                function(result, event){
                                    if(result){
                                        $('#busyBookingViewModalHeader').text('Busy Booking Details '+ result.name);
                                        $('#editBusyBookingView').attr('data-id', eventId);
                                        //, 'data-date': event.start.format(), 'data-category': event.category, 'data-centre': event.centerName, 'data-placeholder': event.placeholder, 'data-duration': event.duration, 'data-teacher': event.staffMember});
                                        $('#editBusyBookingView').attr({'data-origin': result.origin, 'data-date': startTime, 'data-centerId' : result.centerId, 'data-teacherId' : result.teacherId});
                                        $('#saveBusyBookingCreate').attr({'data-source': result.origin, 'data-date': startTime, 'data-centerid' : result.centerId, 'data-teacherid' : result.teacherId});
                                        if(result.origin == 'teacher'){
                                            $('#staffResourceBusyView').html('Staff');
                                        }else if(result.origin == 'resource'){
                                            $('#staffResourceBusyView').html('Resource');
                                        }
                                        $('#centerNameBusyView').html(result.center);
                                        $('#editBusyBookingView').attr('data-centre', result.center);
                                        $('#categoryBusyView').html(result.category);
                                        $('#editBusyBookingView').attr('data-category', result.category);
                                        if(result.timeOfBooking){
                                            $('#timeSlotBusyView').html(convertDateToMoment(result.timeOfBooking.split(' ')[0])+ ' '+result.timeOfBooking.split(' ')[1]);
                                            $('#editBusyBookingView').attr('data-time', convertDateToMoment(result.timeOfBooking.split(' ')[0])+ ' '+result.timeOfBooking.split(' ')[1]);
                                            
                                        }
                                        
                                        /*if(result.status == 'Blocked'){
                                            $('#releaseBookingConfirm').attr('data-enrolmentId', result.enrolmentId);
                                        }*/
                                       //console.log('result',result);
                                        $('#editBusyBookingView').attr('data-duration', result.duration);
                                        $('#durationBusyView').html(result.duration + ' mins');
                                        $('#staffBusyView').html(result.teacher);
                                        $('#editBusyBookingView').attr('data-teacher', result.teacher);
                                        $('#descriptionBusyView').val(result.discription);
                                        $('#editBusyBookingView').attr('data-discription', result.discription);
                                        
                                        $('.addNewBookingFromBusy').attr({'data-centerId' : result.centerId, 'data-teacherId' : result.teacherId, 'data-date' : startTime});
                                        
                                        $('#busyBookingViewModal').removeClass('slds-hide');
                                    }
                                }    
                            );
                        }
                    }
                    
                    function cancelBusyAppointment(){
                        //console.log('here');
                        $('#busyBookingViewModal').addClass('slds-hide');
                        //$('#confirmModalYes').removeClass('slds-hide');
                        /*$('#busyBookingViewModal').addClass('slds-hide');
            $('#cancelBooking').trigger( "click" );*/
                        $('#confirmModalYes').addClass('slds-hide');
                        $('#confirmModalNo').html('Cancel');
                        $('#confirmModalNo').attr('data-origin', 'cancelBusy');
                        $('#confirmHeader').html('Cancel Busy Time');
                        $('#confirmHeader').parent().addClass('slds-text-align_left');
                        $('#confirmBody').addClass('slds-text-align_center');
                        $('#confirmBody').html('<p>Would you like to apply this changes to this Time only,<br/>or the current and future Time in the series?</p><div><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisCancelBusy" onclick="cancelBusyBooking(false);return false;">This only</button><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureCancelBusy" onclick="cancelBusyBooking(true);return false;">This and future</button></div>');
                        $('#confirmModal').removeClass('slds-hide');
                    }
                    
                    /*function getNoticePeriod(){
            $('#noticePeriodDowngradeStart').html('');
            $('#noticePeriodDowngradeEnd').html('');
            $('#effectiveDateErrorDowngrade').html('');
            $('#submitDowngradeRequest').removeAttr('startDate');
            $('#submitDowngradeRequest').removeAttr('endDate');
            $('#submitDowngradeRequest').removeAttr('effectiveDate');

            var bookingId = $('#downgradeSubscriptionBtn').attr('data-id');
            var effectiveDate = $('#effectiveDateInputDowngrade').val();
            if(effectiveDate){
            var today = moment();
            var dt = moment();
            dt.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
            if(today.diff(dt) > 0){
            }
            }
            if(bookingId && effectiveDate){
            Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.getNoticePeriod}',
            bookingId, effectiveDate, 
            function(result, event){
            if(result){
            if('startDate' in result && 'endDate' in result && 'effectiveDate' in result){
            var startDate = moment(result.startDate);
            var endDate = moment(result.endDate);
            var effectiveDate = moment(result.effectiveDate);
            $('#noticePeriodDowngradeStart').html(startDate.format('ddd, MMM DD YYYY'));
            $('#noticePeriodDowngradeEnd').html(endDate.format('ddd, MMM DD YYYY'));
            $('#submitDowngradeRequest').attr({'startDate' : startDate.format('YYYY-MM-DD'), 'endDate' : endDate.format('YYYY-MM-DD'), 'effectiveDate' : effectiveDate.format('YYYY-MM-DD')});                               
            }else if('error' in result){
            $('#effectiveDateErrorDowngrade').html(result.error);
            }
            }
            }    
            );
            }

            }*/
                    
                    function submitDowngradePackageRequest(){
                        var isError = false;
                        var bookingId = $('#submitDowngradeRequest').attr('data-id');
                        var newPackageId = $('#selectRequestedPackageDowngrade').val();
                        var requestDate = $('#effectiveDateInputDowngrade').val();
                        var oldPackageId = $('#submitDowngradeRequest').attr('data-packageid');
                        var timeslot = $('#availableTimeSlotsDowngrade').val();
                        if(newPackageId == 'Downgrade Subscription'){
                            //$('#downgradePackageSelectError').html('Please select any package!');
                            isError = true;
                        }
                        
                        if(!requestDate){
                            //$('#effectiveDateErrorDowngrade').html('Please select the date!');
                            isError = true;
                        }
                        
                        if(timeslot == 'Select Time Slot'){
                            isError = true;
                        }
                        
                        if(!isError){
                            $('#confirmDowngradeEnrolment').css('pointer-events','none');
                            $('#confirmDowngradeEnrolment').attr('disabled','true');
                            /*$('.confirmModal').removeClass('slds-hide');
            $('#confirmBody').html('Do you want to send an email?');
            $('#confirmHeader').html('Email Confirmation');*/
                            $('#confirmModalYes').attr({'data-origin':'downgrade', 'data-id':bookingId, 'data-date': requestDate, 'data-newPackage': newPackageId, 'data-oldPackage': oldPackageId, 'data-timeslot': timeslot});
                            //$('#confirmModalNo').attr({'data-origin':'downgrade', 'data-id':bookingId, 'data-date': requestDate, 'data-newPackage': newPackageId, 'data-oldPackage': oldPackageId, 'data-timeslot': timeslot});
                            $('#downgradePopup').addClass('slds-hide');
                            $('#upgradeDowngradeSummaryModal').addClass('slds-hide');
                            $('#confirmModalYes').trigger('click');
                            
                        }
                        
                    }
                    
                    function cancelSubscription(){
                        
                        var bookingType = $('#cancelSubscriptionBtn').attr('data-bookingType');
                        // 26-dec-2019: check booking type is Group lesson then open Cancel Group class Subscription Popup
                        if(bookingType =='Group Lesson'){
                            $('#lastLessonGroupClassDate').html('');
                            $('#cancelGroupClassRequestEndDate').val('');
                            $('#advanceOptionPopup').addClass('slds-hide');
                            $('#canelGroupClassSubscriptionPopup').removeClass('slds-hide');
                            $('#submitCancelGroupClassRequest').attr('disabled', 'true');
                        }else{
                            //$('#cancelByRequestDate').prop('checked', false);
                            //$('#cancelByLessonEndDate').prop('checked', false);
                            //$('#lastLessonDate').attr('disabled',true);
                            $('#lastLessonDate').html('');
                            //$('#cancelRequestEndDate').attr('disabled',true);
                            $('#cancelRequestEndDate').val('');
                            $('#advanceOptionPopup').addClass('slds-hide');
                            $('#noticePeriodStart').html('');
                            $('#noticePeriodEnd').html('');
                            $('#canelSubscriptionPopup').removeClass('slds-hide');
                            $('#submitCancelRequest').attr('disabled', 'true');
                        }
                        
                    }
                    /*function withdrawSummary(){
            var isError = false;
            var bookingId = $('#cancelSubscriptionBtn').attr('data-id');
            var startDate = $('#submitCancelRequest').attr('startDate');
            var endDate = $('#submitCancelRequest').attr('endDate');
            var requestDate = $('#cancelRequestEndDate').val();
            var effectiveDate = $('#submitCancelRequest').attr('effectivedate');
            if(!bookingId || !requestDate || !effectiveDate || !startDate || !endDate){
            isError = true;
            }
            if(!isError){
            Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.getCancellationDetails}',
            bookingId, endDate, 
            function(result, event){
            if(result){
            $('#summaryRequestDate').html(convertDateToMoment(new Date(requestDate)));
            $('#summaryLastLessonDate').html(convertDateToMoment(new Date(endDate)));
            $('#summaryNoticeStartDate').html(convertDateToMoment(new Date(startDate)));
            $('#summaryNoticeEndDate').html(convertDateToMoment(new Date(endDate)));
            $('#summaryNoOfLessonFromDeposit').html(result);
            $('#summaryPopForAdvanceAction').removeClass('slds-hide');
            $('#canelSubscriptionPopup').addClass('slds-hide');
            }
            });
            }
            }*/
                    
                    
                    function submitCancelPackageRequest(){
                        var isError = false;
                        var bookingId = $('#confirmWithdrawal').attr('data-id');
                        var endDate = $('#cancelRequestEndDate').val();
                        var lastLessonDate = $('#confirmWithdrawal').attr('lastLessonDate');
                        
                        if(!bookingId){
                            isError = true;
                        }
                        
                        if(!endDate){
                            isError = true;
                        }
                        if(!isError){    
                            var endDateMoment = moment();
                            endDateMoment.year(endDate.split('/')[2]).month(endDate.split('/')[0] - 1).date(endDate.split('/')[1]);
                            $('.canelSubscriptionPopup').addClass('slds-hide');
                            $('#withdrawEnrolSummaryModal').addClass('slds-hide');
                            //$('.confirmModal').removeClass('slds-hide');
                            
                            //$('#confirmBody').html('Do you want to send an email?');
                            //$('#confirmHeader').html('Email Confirmation');
                            $('#confirmModalYes').attr({'data-origin': 'withdrawal', 'data-id': bookingId, 'data-endDate':endDateMoment.format('YYYY-MM-DD'), 'data-lastLessonDate': lastLessonDate});
                            //$('#confirmModalNo').attr({'data-origin': 'withdrawal', 'data-id': bookingId, 'data-endDate':endDateMoment.format('YYYY-MM-DD'), 'data-lastLessonDate': lastLessonDate});
                            $('#confirmModalYes').trigger('click');
                            /*var endDateMoment = moment();
            endDateMoment.year(endDate.split('/')[2]).month(endDate.split('/')[0] - 1).date(endDate.split('/')[1]);
           //console.log(bookingId, endDateMoment.format('YYYY-MM-DD'), lastLessonDate );
            Visualforce.remoting.Manager.invokeAction(
            '{$RemoteAction.AureusCalendarController.cancelSubscriptionRequest}',
            bookingId, endDateMoment.format('YYYY-MM-DD'), lastLessonDate,  
            function(result, event){
            $('#canelSubscriptionPopup').addClass('slds-hide');

            $('#withdrawEnrolSummaryModal').addClass('slds-hide');
            if(result){
            $('#toastMsg').html('Request logged successfully');
            $('.toastclass').addClass('slds-theme_success');
            $('.toastclass').removeClass('slds-theme_error');
            toastLaunch();
            }else if(!result){
            $('#toastMsg').html('Request failure!');
            $('.toastclass').removeClass('slds-theme_success');
            $('.toastclass').addClass('slds-theme_error');
            toastLaunch();
            }
            refreshCalendar();
            }
            );*/
                            }
                        }
                    // get the string date in yyyy-mm-dd
                    
                    //Get the date in yyyy-mm-dd format 
                    // and return in ddd, MMM DD YYYY
                    function convertDateToMoment(date){
                        var dd = moment(date);
                        return dd.format('ddd, MMM DD YYYY');
                    }
                    
                    //Get the time in  hh:mm AM/PM
                    function convertTimeToMoment(hour, minute){
                        var tt = moment();
                        tt.minute(minute).hours(hour);
                        return tt.format('hh:mm A');
                    }
                    
                    //Refresh the calendar with existing dates
                    function refreshCalendar(){
                        /*Commenter byCommented by jatin: 11-mar-2020: for employee Calendar not Deploye*/
                        var employeeId = $('[id$=employee]').val();
                       //console.log('employeeId',employeeId);
                         // jatin: 22-jan-2020 : manage If booking cancel and booking type is 'Piano Viewing' then 
                         //referesh emplyee calendar otherwise normal calendar is referesh 
                        if(employeeId || employeeId == undefined){
                            refreshCalendarAccordingToEmployee();
                        }else{
                            refreshCalendarAccordingToTeacher();
                        }
                        
                       
                    }
                    function refreshCalendarAccordingToTeacher(){
                        var b = $('#calendar').fullCalendar('getDate');
                        var bookDate = [b.format('YYYY-MM-DD')];
                        teacher = $(".teachers").val();
                        
                        var calView = $('#calendar').fullCalendar('getView').name;
                        var calendarDates = isWeekDay();
                       //console.log('filter.instrument'+filter.instrument);
                        if(calView == 'agendaTwoDay'){
                            initResources(center, teacher, filter.resource, calendarDates, calView, filter.instrument);
                        }else{
                            initResources(center, teacher, filter.resource, bookDate, calView, filter.instrument);
                        } 
                    }
                    // show/Hide menu
                    function showHideMenu(){
                        var x = parent.document.getElementsByClassName('oneHeader')[0];
                        if (x.style.display === "none") {
                            x.style.display = "block";
                        } else {
                            x.style.display = "none";
                        }
                    }
                    //Show case details on blue bar
                    function getCaseDetails(caseid){
                        if(caseid){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getCaseDetails}',
                                caseid,
                                function(result, event){
                                    if(result){
                                        if('Id' in result && 'CaseNumber' in result){
                                            $('#caseNo').attr('href', '/'+result.Id);
                                            $('#caseNo').text(result.CaseNumber);
                                        }
                                        if('Type' in result){
                                            $('#caseType').text(result.Type);
                                        }   
                                        if('Contact' in result){
                                            if('Name' in result.Contact && 'Id' in result.Contact){
                                                $('#caseParentName').attr('href', '/'+result.Contact.Id);
                                                $('#caseParentName').text(result.Contact.Name);
                                            }
                                        } 
                                        $('#caseContainerMessage').removeClass('slds-hide');
                                    }
                                }
                            );
                        }
                    }
                    
                    function getUserDetails(){
                        var cancelRequestDate = new Date();
                        //cancelRequestDate.setDate(cancelRequestDate.getDate() + 30 );
                        cancelRequestDate.setDate(cancelRequestDate.getDate() + 1 );
                        var cancelGroupClassRequestEndDate = new Date();
                        cancelGroupClassRequestEndDate.setDate(cancelGroupClassRequestEndDate.getDate() + 30 );
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getCenterUsers}',
                            function(result, event){
                                if(result){
                                   //console.log('getUserDetails result --',result);
                                    userDetail  = result;
                                    if('Designation__c' in result){
                                        if(result.Designation__c== 'Centre Admin'){
                                            
                                            $('#cancelRequestEndDate').datepicker({
                                                initDate: moment(), //Today Date
                                                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                                minDate: cancelRequestDate,
                                                onChange: function(datepicker) {
                                                    $('#cancelRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                                }
                                            });
                                            // 26-dec-2019: for group class withdrawl Notice Period End Date
                                            $('#cancelGroupClassRequestEndDate').datepicker({
                                                initDate: moment(), //Today Date
                                                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                                minDate: cancelGroupClassRequestEndDate,
                                                onChange: function(datepicker) {
                                                    $('#cancelGroupClassRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                                }
                                            });
                                        }else if(result.Designation__c== 'Regional Manager'){
                                            cancelRequestDate = new Date();
                                            cancelRequestDate.setDate(cancelRequestDate.getDate() + 1 );
                                            $('#cancelRequestEndDate').datepicker({
                                                initDate: moment(), //Today Date
                                                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                                minDate: cancelRequestDate,
                                                onChange: function(datepicker) {
                                                    $('#cancelRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                                }
                                            });
                                             // 26-dec-2019: for group class withdrawl Notice Period End Date
                                            cancelGroupClassRequestEndDate = new Date();
                                            cancelGroupClassRequestEndDate.setDate(cancelGroupClassRequestEndDate.getDate() + 1 );
                                            $('#cancelGroupClassRequestEndDate').datepicker({
                                                initDate: moment(), //Today Date
                                                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                                minDate: cancelGroupClassRequestEndDate,
                                                onChange: function(datepicker) {
                                                    $('#cancelGroupClassRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                                }
                                            });
                                        }else{
                                            $('#cancelRequestEndDate').datepicker({
                                                initDate: moment(), //Today Date
                                                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                                minDate: cancelRequestDate,
                                                onChange: function(datepicker) {
                                                    $('#cancelRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                                }
                                            });

                                             // 26-dec-2019: for group class withdrawl Notice Period End Date
                                            $('#cancelGroupClassRequestEndDate').datepicker({
                                                initDate: moment(), //Today Date
                                                format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                                minDate: cancelGroupClassRequestEndDate,
                                                onChange: function(datepicker) {
                                                    $('#cancelGroupClassRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                                }
                                            });
                                        }
                                    }else{
                                        $('#cancelRequestEndDate').datepicker({
                                            initDate: moment(), //Today Date
                                            format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                            minDate: cancelRequestDate,
                                            onChange: function(datepicker) {
                                                $('#cancelRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                            }
                                        });

                                         // 26-dec-2019: for group class withdrawl Notice Period End Date
                                        $('#cancelGroupClassRequestEndDate').datepicker({
                                            initDate: moment(), //Today Date
                                            format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                            minDate: cancelGroupClassRequestEndDate,
                                            onChange: function(datepicker) {
                                                $('#cancelGroupClassRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                            }
                                        });
                                    }
                                }else{
                                    $('#cancelRequestEndDate').datepicker({
                                        initDate: moment(), //Today Date
                                        format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                        minDate: cancelRequestDate,
                                        onChange: function(datepicker) {
                                            $('#cancelRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                        }
                                    });

                                     // 26-dec-2019: for group class withdrawl Notice Period End Date
                                    $('#cancelGroupClassRequestEndDate').datepicker({
                                        initDate: moment(), //Today Date
                                        format: 'YYYY-MM-DD', //Date Format Of Datepicker Input Field
                                        minDate: cancelGroupClassRequestEndDate,
                                        onChange: function(datepicker) {
                                            $('#cancelGroupClassRequestEndDate').html('Selected Date: <strong>'+moment(datepicker.selectedFullDate._d).format('YYYY-MM-DD')+'</strong>');
                                        }
                                    });
                                }
                            }
                        );
                    }
                    
                    //Close Case container
                    function closeCaseContainer(){
                        $('#caseContainerMessage').addClass('slds-hide');
                        caseId = '';
                    }
                    function redirectToCaseRecord(caseIdToRedirect){
                       ////console.log('caseIdToRedirect',caseIdToRedirect);
                        window.open("/"+caseIdToRedirect, '_blank');
                        //window.location.href = "/"+caseIdToRedirect;
                    }
                    function changeResource(){
                        var lessonMode =$('#selectLessonListSection').val();
                        var resourceId =$('#selectResourceListSection').val();
                        bookingData.resourceId = resourceId.split('-')[0];
                        $('#resourceErrorMsg').text('');
                        if(lessonMode === 'In Centre'){
                            if(!(resourceId && resourceId != null && resourceId != undefined && resourceId !='')){
                                $('#saveNewBooking').css('pointer-events','none');
                                $('#resourceErrorMsg').text('Please Select Resource Id');
                            }else{
                                $('#saveNewBooking').css('pointer-events','');
                            }
                        }else{
                            $('#saveNewBooking').css('pointer-events',''); 
                        }
                        
                    }
                    
                    function showMessageForCancellation(){
                        $('#errorMsgReason').html('');
                        $('#errorMsgRemark').html('');
                        let reason = $('#cancelReason').val();
                        if(reason == 'Student MC'){
                            $('#errorMsgReason').html('To avail makeup credits student needs to submit MC with in 7 days.');
                        }
                    }
                    
                    /*function enrollNowProcessFunc(){        
                        
                        $("#datepicker").datepicker({       
                            initDate: moment(), //Today Date        
                            minDate: 0,     
                            onSelect: function(dateText, inst) {        
                                fillTimeSlotSection(dateText);      
                            }       
                            
                        });     
                        
                        $('#enrollNowCenterSelect').empty();        
                        $('#enrollNowLessonSelect').empty();        
                        $('#enrollNowTeacherSelect').empty();       
                        
                        var bookId = $('#enrollNowProcess').attr('data-id');        
                        $('.editDetails').addClass('slds-hide');        
                        if(bookId){     
                            Visualforce.remoting.Manager.invokeAction(      
                                '{RemoteAction.AureusCalendarController.getEnrolmentProcessData}',        
                                bookId,         
                                function(result, event){        
                                    var centerList = '<option>None</option>';       
                                    if('centersList' in result){        
                                        $(result.centersList).each(function(index, value){      
                                            centerList += '<option value="'+value.Id+'">'+value.Name+'</option>';       
                                        });     
                                        $('#enrollNowCenterSelect').append(centerList);     
                                    }       
                                    
                                    
                                    
                                    if('currentCenter' in result){      
                                        $('#enrollNowCenterSelect').val(result.currentCenter.Id);       
                                        getAllTeachersAccordingToCenter(bookId, result.currentCenter.Id)        
                                    }       
                                    
                                    $('#enrolProcessModal').removeClass('slds-hide');       
                                    
                                }       
                            );     
                        }       
                    }      */     
                    
                    function getAllTeachersAccordingToCenter(bookId, centerId){     
                        $('#enrollNowTeacherSelect').empty();       
                        $('#enrollNowLessonSelect').empty();        
                        if(centerId){       
                            var teacherList = '<option>None</option>';      
                            Visualforce.remoting.Manager.invokeAction(     
                                '{!$RemoteAction.AureusCalendarController.getAllTeachersAccordingToCenter}',        
                                bookId, centerId,       
                                function(result, event){        
                                    if('teachersList' in result){       
                                        $(result.teachersList).each(function(index, value){     
                                            teacherList += '<option value="'+value.Id+'">'+value.Name+'</option>';      
                                        });     
                                        $('#enrollNowTeacherSelect').append(teacherList);       
                                        
                                    }       
                                    if('hoursList' in result){     
                                        availableSlotsWorking = result.hoursList;       
                                    }      
                                    if(bookId && 'currentTeacher' in result && centerId){       
                                        $('#enrollNowTeacherSelect').val(result.currentTeacher.Id);     
                                        if($('#enrollNowTeacherSelect').val()){     
                                            getAllPlansAccordingToTeachers(bookId, centerId, $('#enrollNowTeacherSelect').val());       
                                        }           
                                        
                                    }       
                                    
                                }       
                            );     
                        }       
                    }
                    
                    function getAllPlansAccordingToTeachers(bookId, centerId, teacherId){       
                        timeSlotsOfTeacher = new Set();     
                        $('#enrollNowLessonSelect').empty();        
                        if(centerId && teacherId){      
                            var plansList = '<option>None</option>';        
                            Visualforce.remoting.Manager.invokeAction(     
                                '{!$RemoteAction.AureusCalendarController.getPlans}',       
                                bookId, centerId, teacherId,        
                                function(result, event){        
                                    if('planList' in result){       
                                        $(result.planList).each(function(index, value){     
                                            plansList += '<option value="'+value.Id+'">'+value.Name+'</option>';        
                                        });     
                                        $('#enrollNowLessonSelect').append(plansList);      
                                        
                                    }       
                                    if(bookId && 'currentPlan' in result){      
                                        $('#enrollNowLessonSelect').val(result.currentPlan.Id);     
                                    }       
                                }       
                            );     
                            if(availableSlotsWorking && teacherId && centerId){        
                                $(availableSlotsWorking).each(function(index, value){      
                                    if(value.Teacher_Name__c == teacherId && value.Center_Name__c == centerId && value.Start_Time__c && value.End_Time__c){        
                                        var start = value.Start_Time__c;       
                                        start = moment.duration(start);        
                                        
                                        var end = value.End_Time__c;       
                                        end = moment.duration(end);        
                                        for (let item of getTimeSlots(value, value.Start_Time__c, value.End_Time__c)) {        
                                            timeSlotsOfTeacher.add(item);          
                                        }      
                                    }                      
                                });        
                            }      
                        }       
                    }
                    
                    function getTimeSlots(Obj, start, end){     
                        var startTime = moment.utc(start, 'x');     
                        var endTime = moment.utc(end, 'x');     
                        if( endTime.isBefore(startTime) ){      
                            endTime.add(1, 'day');       
                        }       
                        var timeStops = new Set();      
                        while(startTime <= endTime){        
                            var timeslot = Obj.Working_Day__c;       
                            if(new moment(startTime).hours() >= 12){     
                                timeslot += '-A-';       
                            }else{       
                                timeslot += '-M-';       
                            }        
                            timeslot += new moment(startTime).format('HH:mm');       
                            timeStops.add(timeslot);     
                            startTime.add(15, 'minutes');        
                        }       
                        return timeStops;       
                    }       
                    function fillTimeSlotSection(dateTxt){      
                        $('.morning').empty();      
                        $('.afternoon').empty();        
                        var dateObj = moment(dateTxt, "MM-DD-YYYY");        
                        var morningSlots = '';      
                        var afternoonSlots = '';        
                        for (let item of timeSlotsOfTeacher) {      
                            if(item && item.split('-')[0] == dateObj.format('ddd')){       
                                if(item.split('-')[1] == 'M'){     
                                    morningSlots += '<span class="slds-button slds-radio_button"><input id="'+item.split('-')[2]+'" name="radio" type="radio" value="'+item.split('-')[2]+'"> <label class="slds-radio_button__label" for="'+item.split('-')[2]+'"><span class="slds-radio_faux">'+item.split('-')[2]+'</span></label></span>';        
                                }else if(item.split('-')[1] == 'A'){       
                                    afternoonSlots += '<span class="slds-button slds-radio_button"><input id="'+item.split('-')[2]+'" name="radio" type="radio" value="'+item.split('-')[2]+'"> <label class="slds-radio_button__label" for="'+item.split('-')[2]+'"><span class="slds-radio_faux">'+item.split('-')[2]+'</span></label></span>';      
                                }      
                            }              
                        }       
                        if(morningSlots){       
                            $('.morning').append(morningSlots);     
                        }       
                        
                        if(afternoonSlots){     
                            $('.afternoon').append(afternoonSlots);     
                        }       
                        
                    }       
                    /*function sendEnrolToIpad(){     
                        refreshEnrolProcessModal();     
                        let errFlag = false;        
                        var enrolData = new Object();       
                        enrolData.centreId = $('#enrollNowCenterSelect').val();     
                        enrolData.centreName = $('#enrollNowCenterSelect option:selected').text();      
                        enrolData.teacherId = $('#enrollNowTeacherSelect').val();       
                        enrolData.teacherName = $('#enrollNowTeacherSelect option:selected').text();        
                        enrolData.planId = $('#enrollNowLessonSelect').val();       
                        enrolData.planName = $('#enrollNowLessonSelect option:selected').text();        
                        enrolData.enrolment = $('#enrollNowProcess').attr('enrolment-Id');      
                        var dateStr = $( "#datepicker" ).datepicker( "getDate" ).toString();        
                        if(dateStr){        
                            var dateObj = moment(new Date(dateStr.substr(0, 16)));      
                            enrolData.enrolDate = dateObj.format('ddd, MMM DD YYYY');       
                        }       
                        if($('.date-list').find("input[type='radio']:checked").val()){      
                            enrolData.enrolSlot = $('.date-list').find("input[type='radio']:checked").val();        
                        }       
                        
                        if(!enrolData.centreId || enrolData.centreId == 'None'){        
                            errFlag = true;     
                            $('#centerEnrolError').removeClass('slds-hide');        
                        }       
                        
                        if(!enrolData.teacherId || enrolData.teacherId == 'None'){      
                            errFlag = true;     
                            $('#teacherEnrolError').removeClass('slds-hide');       
                        }       
                        
                        if(!enrolData.planId || enrolData.planId == 'None'){        
                            errFlag = true;     
                            $('#planEnrolError').removeClass('slds-hide');      
                        }       
                        
                        if(!enrolData.enrolSlot){       
                            errFlag = true;     
                            $('#slotEnrolError').removeClass('slds-hide');      
                        }       
                        var jsonStr = JSON.stringify(enrolData);        
                        if(jsonStr && errFlag == false){        
                            Visualforce.remoting.Manager.invokeAction(      
                                '{RemoteAction.AureusCalendarController.sendEnrolToIpad}',        
                                jsonStr,        
                                function(result, event){        
                                    $('#enrolProcessLoader').removeClass('slds-hide');          
                                    $('#enrolProcessModal').addClass('slds-hide');      
                                }       
                            );         
                        }       
                    }     */  
                    
                    /*function refreshEnrolProcessModal(){        
                        $('#centerEnrolError').addClass('slds-hide');       
                        $('#teacherEnrolError').addClass('slds-hide');      
                        $('#planEnrolError').addClass('slds-hide');     
                        $('#slotEnrolError').addClass('slds-hide');     
                    }*/
                    
                    
                    function getWithdrawSummary(){
                        $('#submitCancelRequest').attr('disabled', 'true');
                        $('#submitCancelRequest').css('pointer-events', 'none');
                        $('#makeupSectionSummary').removeClass('slds-hide');
                        $('#finalLessonsTblBody').empty();
                        $('#makeupLessonsTblBody').empty();
                        $('#depositBalanceTblBody').empty();
                        $('#withdrawSummaryStudentName').html('');
                        $('#withdrawSummaryPackage').html('');            
                        $('#withdrawSummaryCentre').html('');  
                        $('#withdrawSummaryLessonDay').html('');  
                        $('#withdrawSummaryNoticeDate').html('');  
                        $('#withdrawSummaryFinalDate').html('');
                        var bookId = $('#cancelSubscriptionBtn').attr('data-id');
                        var lastLessonDate = $('#submitCancelRequest').attr('lastlessondate');
                        var endDate = $('#cancelRequestEndDate').val();
                        var dtObj = moment();
                        if(endDate){
                            dtObj.year(endDate.split('/')[2]).month(endDate.split('/')[0] - 1).date(endDate.split('/')[1]);
                        }
                        
                        if(endDate && bookId && lastLessonDate){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getWithrawalSummary}',
                                bookId, dtObj.format('YYYY-MM-DD'), lastLessonDate, 
                                function(result, event){
                                    if(result){
                                        $('#canelSubscriptionPopup').addClass('slds-hide');
                                        $('#withdrawEnrolSummaryModal').removeClass('slds-hide');
                                        $('#submitCancelRequest').removeAttr('disabled');
                                        $('#submitCancelRequest').css('pointer-events', '');
                                        var tableRow = '';
                                        if('lastLessons' in result){
                                            $(result.lastLessons).each(function(index, value){
                                                tableRow += '<tr id="'+value.bookingId+'"><td>'+value.Lesson+'</td><td>'+value.bookingDate+'</td><td>'+value.bookingTime+'</td><td>'+value.duration+' mins</td>';
                                                if(value.status != 'Billed' && value.status != 'Deposit' && value.status){
                                                    tableRow += '<td><a href="/'+value.status.split(':')[0]+'" target="_blank">'+value.status.split(':')[1]+'</a></td></tr>';
                                                }else{
                                                    tableRow += '<td>'+value.status+'</td></tr>';
                                                }
                                            });
                                            $('#finalLessonsTblBody').append(tableRow);
                                        }
                                        if('makeupLessons' in result){
                                            tableRow = '';
                                            $(result.makeupLessons).each(function(index, value){
                                                tableRow += '<tr id="'+value.bookingId+'"><td>'+value.student+'</td><td>'+value.cancelDate+'</td><td>'+value.duration+'</td><td>'+value.expiryDate+'</td><td>'+value.nextExpiryDate+'</td></tr>';
                                            });
                                            $('#makeupLessonsTblBody').append(tableRow);
                                            if(result.makeupLessons.length < 1){
                                                $('#makeupSectionSummary').addClass('slds-hide');
                                            }
                                        }
                                        if('finalDeposits' in result){
                                            tableRow = '';
                                            $(result.finalDeposits).each(function(index, value){
                                                tableRow += '<tr id="'+value.bookingId+'"><td>'+value.Lesson+'</td><td>'+value.student+'</td><td>'+value.qty+'</td><td>$'+value.unitPrice.toFixed(2)+'</td><td>$'+value.total.toFixed(2) +'</td></tr>';
                                            });
                                            if('gst' in result && result.gst > 0){
                                                tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>GST</b></td><td>$'+result.gst.toFixed(2) +'</td></tr>';
                                            }
                                            if('total' in result){
                                                tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>Total</b></td><td>$'+result.total.toFixed(2) +'</td></tr>';
                                            }
                                            if('deposit' in result){
                                                tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>Deposit</b></td><td>$'+result.deposit.toFixed(2) +'</td></tr>';
                                            }
                                            if('refund' in result && result.refund && result.refund > 0){
                                                
                                                tableRow += '<tr><td style="border: 0px;"></td><td style="border: 0px;"></td><td style="border: 0px;"></td><td><b>Refund</b></td><td>$'+Math.abs(result.refund).toFixed(2) +'</td></tr>';
                                            }
                                            $('#depositBalanceTblBody').append(tableRow);
                                        }
                                        if('student' in result){
                                            $('#withdrawSummaryStudentName').html(result.student);
                                        }
                                        if('packageName' in result){
                                            $('#withdrawSummaryPackage').html(result.packageName);
                                        }    
                                        if('centre' in result){
                                            $('#withdrawSummaryCentre').html(result.centre);
                                        }
                                        if('LessonDay' in result){
                                            $('#withdrawSummaryLessonDay').html(result.LessonDay);
                                        }
                                        
                                        if('noticeDate' in result){
                                            $('#withdrawSummaryNoticeDate').html(result.noticeDate);
                                        }
                                        
                                        if('lastDate' in result){
                                            $('#withdrawSummaryFinalDate').html(result.lastDate);
                                        }
                                    }
                                }
                            );
                        }
                    }
                    
                    function availTimeSlots(grade){
                        var effectiveDate, selectedPackage, bookingId, centerId, teacherId, enrolmentId, enrolweek, weekDayError;
                        var dtObj = moment();
                        weekDayError = false;
                       //console.log('grade',grade);
                        if(grade == 'upgrade'){
                            $('#availableTimeSlots').attr('disabled', 'true');
                            $('#availableTimeSlots').empty();
                            $('#availableTimeSlots').append('<option>Select Time Slot</option>');
                            
                            enrolweek = $('#submitUpgradeRequest').attr('data-enrolday');
                            bookingId = $('#submitUpgradeRequest').attr('data-id');
                            enrolmentId = $('#submitUpgradeRequest').attr('data-enrolment');
                            effectiveDate = $('#effectiveDateInput').val();
                            selectedPackage = $('#selectRequestedPackage').val();
                            centerId = $('#submitUpgradeRequest').attr('data-centerid');
                            teacherId = $('#submitUpgradeRequest').attr('data-teacherid');
                            
                            if(effectiveDate){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            
                            if(!effectiveDate || selectedPackage == 'Select an Option'){
                                $('#availableTimeSlots').attr('disabled', 'true');
                            } 
                            
                            if(dtObj.format('dddd') != enrolweek){
                                weekDayError = true;
                                //$('#effectiveDateError').html('Please select a valid lesson date i.e. any subsequent '+enrolweek);
                            }else{
                                $('#effectiveDateError').html('');
                            }  
                        }else if(grade == 'downgrade'){
                            $('#availableTimeSlotsDowngrade').attr('disabled', 'true');
                            $('#availableTimeSlotsDowngrade').empty();
                            $('#availableTimeSlotsDowngrade').append('<option>Select Time Slot</option>');
                            
                            enrolweek = $('#submitDowngradeRequest').attr('data-enrolday');
                            bookingId = $('#submitDowngradeRequest').attr('data-id');
                            enrolmentId = $('#submitDowngradeRequest').attr('data-enrolment');
                            effectiveDate = $('#effectiveDateInputDowngrade').val();
                            selectedPackage = $('#selectRequestedPackageDowngrade').val();
                            centerId = $('#submitDowngradeRequest').attr('data-centerid');
                            teacherId = $('#submitDowngradeRequest').attr('data-teacherid');
                            
                            if(effectiveDate){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            
                            if(!effectiveDate || selectedPackage == 'Downgrade Subscription'){
                                $('#availableTimeSlotsDowngrade').attr('disabled', 'true');
                            }
                            
                            if(dtObj.format('dddd') != enrolweek){
                                weekDayError = true;
                                //$('#effectiveDateErrorDowngrade').html('Please select a valid lesson date i.e. any subsequent '+enrolweek);
                            }else{
                                $('#effectiveDateErrorDowngrade').html('');
                            }
                        }else if(grade == 'update'){
                            $('#availableTimeSlotsUpdateEnrolment').attr('disabled', 'true');
                            $('#availableTimeSlotsUpdateEnrolment').empty();
                            $('#availableTimeSlotsUpdateEnrolment').append('<option>Select Time Slot</option>');
                            enrolmentId = $('#updateEnrolmentBtn').attr('data-enrol');
                            effectiveDate = $('#selectNewEffectiveDateEnrolUpdate').val();
                            selectedPackage = $('#selectPackageEnrolUpdate').val();
                            centerId = $('#selectTeacherEnrolUpdate').attr('data-center');
                            teacherId = $('#selectTeacherEnrolUpdate').val();
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            if((!effectiveDate && effectiveDate == 'Select Effective Date') || (selectedPackage == 'Select Package' || !selectedPackage)  || teacherId == 'Select Teacher'){
                                $('#availableTimeSlotsDowngrade').attr('disabled', 'true');
                            }
                            if(selectedPackage != 'Select Package' && selectedPackage && selectedPackage != null && selectedPackage != undefined ){
                                console.log('selectedPackage',selectedPackage);
                                //20-Aug-2020:nishi:start manage ossia change enrolment get package id 
                                var isOssia =$('#confirmModalYes').attr('data-isOssia');
                                if(isOssia =='true'){
                                   //console.log('isOssia',isOssia);
                                    selectedPackage = selectedPackage.split('-')[0];
                                }
                                //20-Aug-2020:nishi:start manage ossia change enrolment get package id
                            }
                        }// @jatin:28-nov-2019 : added upgrade classes list
                        else if(grade == 'class upgrade'){
                           ////console.log('Clas Upgrade..');
                            selectedPackage = $('#selectRequestedClassPackage').val();
                            enrolweek = $('#submitUpgradeClassRequest').attr('data-enrolday');
                            bookingId = $('#submitUpgradeClassRequest').attr('data-id');
                            enrolmentId = $('#submitUpgradeClassRequest').attr('data-enrolment');
                            effectiveDate = $('#effectiveDateClassInput').val();
                            centerId = $('#submitUpgradeClassRequest').attr('data-centerid');
                            teacherId = $('#submitUpgradeClassRequest').attr('data-teacherid');
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            $('#availableTimeClassSlots').attr('disabled', 'true');
                                $('#availableTimeClassSlots').empty();
                                $('#availableTimeClassSlots').append('<option>Select Time Slot</option>');
                           
                        }// jatin: 20-dec-2019:for group lesson Upgrade To Individual class time slots
                        else if(grade == 'upgradeToIndividual'){
                            $('#availableTimeSlotsUpgradeToIndividualEnrol').attr('disabled', 'true');
                            $('#availableTimeSlotsUpgradeToIndividualEnrol').empty();
                            $('#availableTimeSlotsUpgradeToIndividualEnrol').append('<option>Select Time Slot</option>');
                            
                            enrolweek = $('#UpgradeToIndividualEnrolClassSummary').attr('data-enrolday');
                            bookingId = $('#UpgradeToIndividualEnrolClassSummary').attr('data-id');
                            enrolmentId = $('#UpgradeToIndividualEnrolClassSummary').attr('data-enrol');
                            effectiveDate = $('#selectEffectiveDateUpgradeToIndividualEnrol').val();
                            selectedPackage = $('#selectPackageUpgradeToIndividualEnrol').val();
                            centerId = $('#UpgradeToIndividualEnrolClassSummary').attr('data-center');
                            teacherId = $('#selectTeacherUpgradeToIndividualEnrol').val();
                            
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            
                            if((!effectiveDate && effectiveDate == 'Select Effective Date') || (selectedPackage == 'Select Package' || !selectedPackage)  || teacherId == 'Select Teacher'){
                                $('#availableTimeSlotsDowngrade').attr('disabled', 'true');
                            }
                            
                            if(dtObj.format('dddd') != enrolweek){
                                weekDayError = true;
                                //$('#effectiveDateError').html('Please select a valid lesson date i.e. any subsequent '+enrolweek);
                            }else{
                                $('#effectiveDateUpgradeToIndividualEnrolErrorMsg').html('');
                            }  
                        }// jatin: 3-jan-2020:for group lesson Upgrade group enrollement To Individual class time slots
                        else if(grade == 'GroupToIndividual'){
                            $('#availableTimeSlotsUpdateEnrolmentGroup').attr('disabled', 'true');
                            $('#availableTimeSlotsUpdateEnrolmentGroup').empty();
                            $('#availableTimeSlotsUpdateEnrolmentGroup').append('<option>Select Time Slot</option>');
                            enrolmentId = $('#updateEnrolmentonGroupClick').attr('data-enrol');
                            effectiveDate = $('#selectNewEffectiveDateEnrolGroupUpdate').val();
                            selectedPackage = $('#selectPackageEnrolGroupUpdate').val();
                            centerId = $('#selectTeacherEnrolGroupUpdate').attr('data-center');
                            teacherId = $('#selectTeacherEnrolGroupUpdate').val();
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            if((!effectiveDate && effectiveDate == 'Select Effective Date') || (selectedPackage == 'Select Package' || !selectedPackage)  || teacherId == 'Select Teacher'){
                                $('#availableTimeSlotsUpdateEnrolmentGroup').attr('disabled', 'true');
                            } 
                        }// @jatin:28-nov-2019 : added upgrade classes list
                        else if(grade == 'class upgrade'){
                           ////console.log('Clas Upgrade..');
                            selectedPackage = $('#selectRequestedClassPackage').val();
                            enrolweek = $('#submitUpgradeClassRequest').attr('data-enrolday');
                            bookingId = $('#submitUpgradeClassRequest').attr('data-id');
                            enrolmentId = $('#submitUpgradeClassRequest').attr('data-enrolment');
                            effectiveDate = $('#effectiveDateClassInput').val();
                            centerId = $('#submitUpgradeClassRequest').attr('data-centerid');
                            teacherId = $('#submitUpgradeClassRequest').attr('data-teacherid');
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            $('#availableTimeClassSlots').attr('disabled', 'true');
                                $('#availableTimeClassSlots').empty();
                                $('#availableTimeClassSlots').append('<option>Select Time Slot</option>');
                           
                        }// jatin: 20-dec-2019:for group lesson Upgrade To Individual class time slots
                        // @nishi:11-aug-2019 : added upgrade Ossia booking list
                        else if(grade == 'UpgradeEnrolment' ||grade == 'DowngradeEnrolment'){
                            $('#availableTimeSlotsOssiaUpdateEnrolment').attr('disabled', 'true');
                            $('#availableTimeSlotsOssiaUpdateEnrolment').empty();
                            $('#availableTimeSlotsOssiaUpdateEnrolment').append('<option>Select Time Slot</option>');
                            enrolmentId = $('#updateEnrolmentBtn').attr('data-enrol');
                            effectiveDate = $('#selectEffectiveDateEnrolOssiaUpdate').val();
                            selectedPackage = $('#selectPackageEnrolOssiaUpdate').val();
                            centerId = $('#selectTeacherEnrolOssiaUpdate').attr('data-center');
                            teacherId = $('#selectTeacherEnrolOssiaUpdate').val();
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                            }
                            if((!effectiveDate && effectiveDate == 'Select Effective Date') || (selectedPackage == 'Select Package' || !selectedPackage)  || teacherId == 'Select Teacher'){
                                $('#availableTimeSlotsOssiaUpdateEnrolment').attr('disabled', 'true');
                            }else{
                                selectedPackage =selectedPackage.split('-')[0];
                            }
                        }// @nishi:11-aug-2019 :for group lesson Upgrade To Individual class time slots
                       // start:@nishi:28-aug-2019 :for change center time slots
                        else if(grade == 'UpdateEnrolmentCenter'){
                            $('#availableTimeSlotsCenterUpdateEnrolment').attr('disabled', 'true');
                            $('#availableTimeSlotsCenterUpdateEnrolment').empty();
                            $('#availableTimeSlotsCenterUpdateEnrolment').append('<option>Select Time Slot</option>');
                            enrolmentId = $('#CenterUpdateEnrolmentonClick').attr('data-enrol');
                            effectiveDate = $('#selectEffectiveDateEnrolCenterUpdate').val();
                            selectedPackage = $('#selectPackageEnrolCenterUpdate').val();
                            centerId = $('#selectCentreEnrolCenterUpdate').val();
                            teacherId = $('#selectTeacherEnrolCenterUpdate').val();
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                                $('#CenterUpdateEnrolmentonClick').attr('dataeffective-date',dtObj);
                            }
                            if((!effectiveDate && effectiveDate == 'Select Effective Date') || (selectedPackage == 'Select Package' || !selectedPackage)  || teacherId == 'Select Teacher'){
                                $('#availableTimeSlotsDowngrade').attr('disabled', 'true');
                            }
                            if(selectedPackage != 'Select Package' && selectedPackage && selectedPackage != null && selectedPackage != undefined ){
                                console.log('selectedPackage',selectedPackage);
                                //20-Aug-2020:nishi:start manage ossia change enrolment get package id 
                                var isOssia =$('#confirmModalYes').attr('data-isOssia');
                                if(isOssia =='true'){
                                   //console.log('isOssia',isOssia);
                                    selectedPackage = selectedPackage.split('-')[0];
                                }
                                //20-Aug-2020:nishi:start manage ossia change enrolment get package id
                            }
                        }
                        // end:@nishi:28-aug-2019 :for change center time slots
                    //   //console.log(effectiveDate);
                    //   //console.log(selectedPackage);
                    //   //console.log(enrolmentId);
                    //   //console.log(teacherId);
                    //   //console.log(weekDayError);
                    //   //console.log(enrolweek);
                            if((effectiveDate && effectiveDate != 'Select Effective Date') && 
                                (   (selectedPackage != 'Select an Option' && selectedPackage) && selectedPackage != 'Downgrade Subscription' && selectedPackage != 'Select Package') 
                                    && centerId && (teacherId && teacherId != 'Select Teacher') && enrolmentId){
                                if(dtObj){
                                    if(!weekDayError){
                                        //// @jatin:28-nov-2019 : added upgrade classes list
                                        if(grade == 'class upgrade'){
                                            getClasses(centerId,teacherId,selectedPackage,dtObj,enrolweek);
                                        }else{
                                            //9-Dec-2019 : @@jatin  :for Change Enrollement Enhancement This button should be accessible to only a limited users
                                            if($('#confirmModalYes').attr('data-updateEnrolmentAdmin') == 'true' &&  grade == 'update'){
                                                getTimeSlotsAccordinglyToChangeEnrolSpecificUsers(centerId, teacherId, selectedPackage, enrolmentId, dtObj);
                                            }else{
                                                getTimeSlotsAccordingly(grade,centerId, teacherId, selectedPackage, enrolmentId, dtObj);
                                            }
                                        }
                                    }else{
                                        $('#availableTimeSlotsUpdateEnrolment').attr('disabled', 'true');
                                        $('#availableTimeSlotsDowngrade').attr('disabled', 'true');
                                        $('#availableTimeSlots').attr('disabled', 'true');
                                        $('#availableTimeSlotsUpgradeToIndividualEnrol').attr('disabled', 'true');
                                        $('#availableTimeSlotsOssiaUpdateEnrolment').attr('disabled', 'true');
                                        $('#availableTimeSlotsCenterUpdateEnrolment').attr('disabled', 'true');
                                    }
                                }
                            }
                        
                    }

                    // @jatin:9-dec-2019:Change enrolment enhancement requirment  :
                    //New timeslot should also include non-working timeslots starting 8:00 AM to 8:00 PM 
                    //for all working days and all non-working days
                    function getTimeSlotsAccordinglyToChangeEnrolSpecificUsers(centerId, teacherId, selectedPackage, enrolmentId, dtObj){
                       //console.log('getTimeSlotsAccordinglyToSpecificUsers',dtObj);
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getTimeSlotsAccordinglyToChangeEnrolSpecificUsers}',
                            centerId, teacherId, selectedPackage, enrolmentId, dtObj.format('YYYY-MM-DD'), 
                            function(result, event){
                                //console.log('result',result);
                                var availSlots = '';
                                $(result).each(function(index, value){
                                    availSlots += '<option value="'+value+'">'+value+'</option>';   
                                });
                                $('#availableTimeSlotsUpdateEnrolment').append(availSlots);
                                $('#availableTimeSlotsUpdateEnrolment').removeAttr('disabled');
                            }
                        );
                    }

                   
                    

                    function getTimeSlotsAccordingly(grade,centerId, teacherId, selectedPackage, enrolmentId, dtObj){
                       //console.log('grade',grade);
                       //console.log('centerId',centerId);
                       //console.log('teacherId',teacherId);
                       //console.log('selectedPackage',selectedPackage);
                       //console.log('enrolmentId',enrolmentId);
                       //console.log('dtObj',dtObj);
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getTimeSlotsAccordingly}',
                            centerId, teacherId, selectedPackage, enrolmentId, dtObj.format('YYYY-MM-DD'), 
                            function(result, event){
                              //console.log('result',result);
                                var availSlots = '';
                                $(result).each(function(index, value){
                                    availSlots += '<option value="'+value+'">'+value+'</option>';   
                                });
                                if(grade == 'upgrade'){
                                    $('#availableTimeSlots').append(availSlots);
                                    $('#availableTimeSlots').removeAttr('disabled');
                                }else if(grade == 'downgrade'){
                                    $('#availableTimeSlotsDowngrade').append(availSlots);
                                    $('#availableTimeSlotsDowngrade').removeAttr('disabled');
                                }else if(grade == 'update'){
                                    $('#availableTimeSlotsUpdateEnrolment').append(availSlots);
                                    $('#availableTimeSlotsUpdateEnrolment').removeAttr('disabled');
                                }// jatin: 20-dec-2019:for group lesson Upgrade To Individual class
                                else if(grade == 'upgradeToIndividual'){
                                    $('#availableTimeSlotsUpgradeToIndividualEnrol').append(availSlots);
                                    $('#availableTimeSlotsUpgradeToIndividualEnrol').removeAttr('disabled');
                                }
                                else if(grade == 'GroupToIndividual'){
                                    $('#availableTimeSlotsUpdateEnrolmentGroup').append(availSlots);
                                    $('#availableTimeSlotsUpdateEnrolmentGroup').removeAttr('disabled');
                                }
                                // Nishi: 11-aug-2020: for manage Upgrade and Downgrade Funcationality only for ossia Organization
                                else if(grade == 'DowngradeEnrolment' || grade == 'UpgradeEnrolment'){
                                    $('#availableTimeSlotsOssiaUpdateEnrolment').append(availSlots);
                                    $('#availableTimeSlotsOssiaUpdateEnrolment').removeAttr('disabled');
                                }
                                // Nishi: 11-aug-2020: for manage Upgrade and Downgrade Funcationality only for ossia Organization
                                // Nishi: 28-aug-2020: for manage change center Funcationality 
                                else if(grade == 'UpdateEnrolmentCenter'){
                                    $('#availableTimeSlotsCenterUpdateEnrolment').append(availSlots);
                                    $('#availableTimeSlotsCenterUpdateEnrolment').removeAttr('disabled');
                                }
                                // Nishi: 28-aug-2020:  for manage change center Funcationality 
                            }
                        );
                    }
                    
                     //@@jatin: 28-Nov-2019 : get Clases list according to teacher , center, package,effective date , and less then current class startdate
                    function getClasses(centerId,teacherId,selectedPackage,effectiveDate,enrolweek){
                        if(centerId && teacherId && selectedPackage && effectiveDate && enrolweek){
                            //console.log('centerId'+centerId);
                           ////console.log('teacherId'+teacherId);
                           ////console.log('selectedPackage'+selectedPackage);
                           ////console.log('effectiveDate'+ effectiveDate.format('YYYY-MM-DD'));
                          // //console.log('enrolweek'+enrolweek);
                            var oldClassId = $('#submitUpgradeClassRequest').attr('data-classid');
                            $('#runningClassesSelect').empty();
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getUpgradedClassDetails}',
                                centerId, teacherId, selectedPackage,effectiveDate.format('YYYY-MM-DD'), oldClassId,
                                function(result, event){
                                    var availClasses ='<option>Select Class</option>';
                                    $(result).each(function(index, value){
                                        availClasses += '<option value="'+value.id+'">'+value.name+'</option>';   
                                    });
                                    $('#runningClassesSelect').append(availClasses);
                                    $('#runningClassesSelect').removeAttr('disabled');
                                }
                            );
                           ////console.log('get new classes name');
                        }
                    }
                    
                    function showUpgradeDowngradeSummary(grade){
                        var bookingId ,oldPackageId,newPackageId,effectiveDate,availableTimeSlots,enrolmentId;
                        if(grade == 'upgrade'){
                             bookingId = $('#submitUpgradeRequest').attr('data-id');
                             oldPackageId = $('#submitUpgradeRequest').attr('data-packageid');
                             newPackageId = $('#selectRequestedPackage').val();
                             effectiveDate = $('#effectiveDateInput').val();
                             availableTimeSlots = $('#availableTimeSlots').val();
                             enrolmentId = $('#submitUpgradeRequest').attr('data-enrolment');
                        }else if(grade == 'downgrade'){
                             bookingId = $('#submitDowngradeRequest').attr('data-id');
                             oldPackageId = $('#submitDowngradeRequest').attr('data-packageid');
                             newPackageId = $('#selectRequestedPackageDowngrade').val();
                             effectiveDate = $('#effectiveDateInputDowngrade').val();
                             availableTimeSlots = $('#availableTimeSlotsDowngrade').val();
                             enrolmentId = $('#submitDowngradeRequest').attr('data-enrolment');
                        }
                        
                        $('.invoiceTopupItem').addClass('slds-hide');
                        $('#nextInvoiceItem').addClass('slds-hide');
                        
                        $('#upgradeDowngradeSummaryHeader').html('');
                        $('#confirmUpgradeEnrolment').addClass('slds-hide');
                        $('#confirmDowngradeEnrolment').addClass('slds-hide');
                        $('#confirmUpgradeOssiaEnrolment').addClass('slds-hide');
                        $('#confirmDowngradeOssiaEnrolment').addClass('slds-hide');
                        $('#ossiaBookingTeacher').addClass('slds-hide');
                        $('#confirmOssiaUpgradeEnrolmentCancel').addClass('slds-hide');
                        $('#confirmUpgradeEnrolmentCancel').removeClass('slds-hide');
                        var error = false;
                        
                        var today = moment();
                        if(bookingId && oldPackageId && enrolmentId){
                            if(grade == 'upgrade'){
                                if(newPackageId == "Select an Option"){
                                    $('#upgradePackageSelectError').html('Please select the package...');
                                    error = true;
                                }else{
                                    $('#upgradePackageSelectError').html('');
                                }
                                
                                if(!effectiveDate){
                                    $('#effectiveDateError').html('Select the effective date....');
                                    error = true;
                                }else{
                                    var effectiveDateMoment = moment();
                                    effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                                    if(today.diff(effectiveDateMoment) > 0){
                                        $('#effectiveDateError').html('Select Future effective date....');
                                        error = true;
                                    }else{
                                        $('#effectiveDateError').html('');
                                    }
                                }
                                
                                if(availableTimeSlots == 'Select Time Slot'){
                                    $('#availableTimeSlotsError').html('Select the Time Slot....');
                                    error = true;
                                }else{
                                    $('#availableTimeSlotsError').html('');
                                }
                            }else if(grade == 'downgrade'){
                                if(newPackageId == "Downgrade Subscription"){
                                    $('#downgradePackageSelectError').html('Please select the package...');
                                    error = true;
                                }else{
                                    $('#downgradePackageSelectError').html('');
                                }
                                
                                if(!effectiveDate){
                                    $('#effectiveDateErrorDowngrade').html('Select the effective date....');
                                    error = true;
                                }else{
                                    var effectiveDateMoment = moment();
                                    effectiveDateMoment.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                                    if(today.diff(effectiveDateMoment) > 0){
                                        $('#effectiveDateErrorDowngrade').html('Select Future effective date....');
                                        error = true;
                                    }else{
                                        $('#effectiveDateErrorDowngrade').html('');
                                    }
                                }
                                
                                if(availableTimeSlots == 'Select Time Slot'){
                                    $('#availableTimeSlotsDowngradeError').html('Select the Time Slot....');
                                    error = true;
                                }else{
                                    $('#availableTimeSlotsDowngradeError').html('');
                                }
                            }
                            if(!error){
                                getUpgradeDowngradePackageSummary(effectiveDate, oldPackageId, newPackageId,availableTimeSlots,enrolmentId,grade);
                            }
                        }
                    }
                    
                    //9-Dec-2019 : @@jatin  :for get Upgrade Downgrade  Package Summary
                    function getUpgradeDowngradePackageSummary(effectiveDate, oldPackageId, newPackageId,availableTimeSlots,enrolmentId,grade){
                        $('#upgradeBookingclass').addClass('slds-hide');
                        var dtObj = moment();
                                if(effectiveDate){
                                    dtObj.year(effectiveDate.split('/')[2]).month(effectiveDate.split('/')[0] - 1).date(effectiveDate.split('/')[1]);
                                }
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.AureusCalendarController.getUpgradeDowngradePackageSummary}',
                                    oldPackageId, newPackageId, dtObj.format('YYYY-MM-DD'), availableTimeSlots, enrolmentId, 
                                    grade, 
                                    function(result, event){
                                      //console.log(result);
                                        if(grade == 'upgrade'){
                                            $('#upgradeDowngradeSummaryHeader').html('Upgrade Summary');
                                            $('#confirmUpgradeEnrolment').removeClass('slds-hide');
                                            $('.invoiceTopupItem').removeClass('slds-hide');
                                            if('invoiceTopup' in result){
                                                if(result.invoiceTopup >= 0){
                                                    $('#invoiceTopUpSummary').html('$'+result.invoiceTopup.toFixed(2));
                                                }
                                            }
                                        }else if(grade == 'downgrade'){
                                            $('#upgradeDowngradeSummaryHeader').html('Downgrade Summary');
                                            $('#confirmDowngradeEnrolment').removeClass('slds-hide');
                                            $('#nextInvoiceItem').removeClass('slds-hide');
                                            $('.invoiceTopupItem').removeClass('slds-hide');
                                            $('#invoiceTopupItem').addClass('slds-hide');
                                            if('invoiceTopup' in result){
                                                $('#confirmModalYes').attr('data-amount', result.invoiceTopup.toFixed(2));
                                                //$('#nextInvoiceItemSummary').html('$'+result.invoiceTopup.toFixed(2));
                                                if(result.invoiceTopup >= 0){
                                                    $('#nextInvoiceItemSummary').html('$'+result.invoiceTopup.toFixed(2));
                                                }else{
                                                    $('#nextInvoiceItemSummary').html('-$'+Math.abs(result.invoiceTopup).toFixed(2));
                                                } 
                                            }
                                            if('positiveInvoiceAmount' in result){
                                                $('#confirmModalYes').attr('data-positiveInvoiceAmount', result.positiveInvoiceAmount.toFixed(2));
                                            }
                                            if('negativeInvoiceAmount' in result){
                                                $('#confirmModalYes').attr('data-negativeInvoiceAmount', result.negativeInvoiceAmount.toFixed(2));
                                            }
                                            if('positiveNextMonthInvoiceAmount' in result){
                                                $('#confirmModalYes').attr('data-positiveNextMonthInvoiceAmount', result.positiveNextMonthInvoiceAmount.toFixed(2));
                                            }
                                            if('negativeNextMonthInvoiceAmount' in result){
                                                $('#confirmModalYes').attr('data-negativeNextMonthInvoiceAmount', result.negativeNextMonthInvoiceAmount.toFixed(2));
                                            }
                                        }
                                        
                                        //$('#gradeSubscriptionPopup').addClass('slds-hide');
                                        if('newPackageName' in result){
                                            $('#newPackageNameSummary').html(result.newPackageName);
                                            $('#confirmModalYes').attr('data-newPackageName', result.newPackageName);
                                        }
                                        if('oldPackageName' in result){
                                            $('#oldPackageNameSummary').html(result.oldPackageName);
                                            $('#confirmModalYes').attr('data-previousPackage', result.oldPackageName);
                                        } 
                                        if('currentPackageDeposit' in result){
                                            if(result.currentPackageDeposit  || result.currentPackageDeposit == 0){
                                                $('#currentDepositFileSummary').html('$'+result.currentPackageDeposit.toFixed(2));
                                                $('#confirmModalYes').attr('data-currentDepositonFile', result.currentPackageDeposit);
                                            }
                                            
                                        }
                                        if('newPackageDeposit' in result){
                                            if(result.newPackageDeposit){
                                                $('#newPackageDepositSummmary').html('$'+result.newPackageDeposit.toFixed(2));
                                                $('#confirmModalYes').attr('data-newPackageDeposit', result.newPackageDeposit);
                                            }
                                        }
                                        if('currentDayAndTime' in result){
                                            $('#previousLessonDTSummary').html(result.currentDayAndTime);
                                            $('#confirmModalYes').attr('data-previousLessonDayTime', result.currentDayAndTime);
                                        }
                                        if('invoiceForCurrentMonth' in result){
                                            if(result.invoiceForCurrentMonth){
                                                $('#invoiceForCurrentMonthSummary').html('$'+result.invoiceForCurrentMonth.toFixed(2));
                                                $('#confirmModalYes').attr('data-invoiceForCurrentMonth', result.invoiceForCurrentMonth);
                                            }
                                        }
                                        if('newDayAndTime' in result){
                                            $('#newLessonDTSummary').html(result.newDayAndTime);
                                            $('#confirmModalYes').attr('data-newLessonDayTime', result.newDayAndTime);
                                        }
                                        
                                        if('effectiveDate' in result){
                                            $('#invoiceEffectiveDate').html(result.effectiveDate);
                                        }
                                        
                                        if('invoiceDepositLessonTopup' in result){
                                            var  invoiceDepositLessonTopup = 0;
                                            if(result.invoiceDepositLessonTopup >= 0){
                                                invoiceDepositLessonTopup =parseFloat( result.invoiceDepositLessonTopup);
                                                  //start: added by nishi: 26-Aug-2020: for is next month is differce and differce is greater then 0 then we manage Invoice
                                                if('invoiceDepositLessonNextMonthTopup' in result){
                                                    invoiceDepositLessonTopup += parseFloat (result.invoiceDepositLessonNextMonthTopup);
                                                }
                                                  //end: added by nishi: 26-Aug-2020: for is next month is differce and differce is greater then 0 then we manage Invoice
                                                $('#invoiceLessonDepositTopupSummary').html('$'+invoiceDepositLessonTopup.toFixed(2));
                                            }else{
                                                invoiceDepositLessonTopup =parseFloat(Math.abs( result.invoiceDepositLessonTopup));
                                                  //start: added by nishi: 26-Aug-2020: for is next month is differce and differce is greater then 0 then we manage Invoice
                                                if('invoiceDepositLessonNextMonthTopup' in result){
                                                    invoiceDepositLessonTopup += parseFloat(Math.abs(result.invoiceDepositLessonNextMonthTopup));
                                                }
                                                  //end: added by nishi: 26-Aug-2020: for is next month is differce and differce is greater then 0 then we manage Invoice
                                                $('#invoiceLessonDepositTopupSummary').html('-$'+invoiceDepositLessonTopup.toFixed(2));
                                            }
                                            $('#confirmModalYes').attr('data-lessonCharge', result.invoiceDepositLessonTopup.toFixed(2));
                                            if('invoiceDepositLessonNextMonthTopup' in result){
                                                $('#confirmModalYes').attr('data-lessonNextLessonCharge', result.invoiceDepositLessonNextMonthTopup.toFixed(2));
                                            }
                                            // if('invoiceFacilityLessonTopup' in result){
                                            //     $('#confirmModalYes').attr('data-facilityCharge', result.invoiceFacilityLessonTopup.toFixed(2));
                                            // }
                                        }
                                        
                                       
                                        
                                        if('invoiceDepositTopup' in result){
                                            if(result.invoiceDepositTopup >= 0){
                                                $('#invoiceDepositTopupSummary').html('$'+result.invoiceDepositTopup.toFixed(2));
                                            }else{
                                                $('#invoiceDepositTopupSummary').html('-$'+Math.abs(result.invoiceDepositTopup).toFixed(2));
                                            }
                                            $('#confirmModalYes').attr('data-deposit', result.invoiceDepositTopup.toFixed(2));
                                        }
                                        $('#upgradeDowngradeSummaryModal').removeClass('slds-hide');
                                    }
                                );
                    }
                    
                    // @jatin :9-dec-2019 : for manage update enrollement for specific users
                    function updateEnrolmentAdmin(){
                        updateEnrolment();
                    }
                    
                    function updateEnrolment(){
                        $('#teacherSelectErrorMsg').html('');
                        $('#packageSelectErrorMsg').html('');
                        $('#effectiveDateErrorMsg').html('');
                        $('#newEffectiveDateErrorMsg').html('');
                        $('#timeSlotErrorMsg').html('');
                        $('#currentTeacherEnrolUpdate').html('');
                        $('#currentDateTimeEnrolUpdate').html('');
                        $('#currentPackageEnrolUpdate').html('');
                        $('#selectTeacherEnrolUpdate').empty();
                        $('#selectPackageEnrolUpdate').empty();
                        $('#selectPackageEnrolUpdate').attr('disabled', 'true');
                        $('#advanceOptionPopup').addClass('slds-hide');
                        $('#selectEffectiveDateEnrolUpdate').empty();
                        $('.currentOssiaEnrolUpdate').addClass('slds-hide');
                        $('.newOssiaEnrolUpdate').addClass('slds-hide');
                        $('#newPackageDurationOssiaEnrolUpdate').html('');
                        //$('#newPackageFacilityFeeOssiaEnrolUpdate').html('');
                        $('#newPackageGradeOssiaEnrolUpdate').html('');
                        $('#newPackageMonthlyFeeOssiaEnrolUpdate').html('');
                        $('#currentPackageDurationOssiaEnrolUpdate').html('');
                        //$('#currentPackageFacilityFeeOssiaEnrolUpdate').html('');
                        $('#currentPackageGradeOssiaEnrolUpdate').html('');
                        $('#currentPackageMonthlyFeeOssiaEnrolUpdate').html('');
                        var enrolmentId = $('#updateEnrolmentBtn').attr('data-enrol');
                        var isossia = $('#advanceOptionsBtn').attr('data-isossia');
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getEnrolmentUpdateDetails}',
                            enrolmentId,  
                            function(result, event){
                                $('#currentTeacherEnrolUpdate').html(result.currentTeacher);
                                $('#currentTeacherEnrolUpdate').attr('data-currentTeacherId',result.currentTeacherId);
                                $('#currentDateTimeEnrolUpdate').html(result.currentDayTimeSlot);
                                $('#currentPackageEnrolUpdate').html(result.currentPackage);
                                $('#currentPackageEnrolUpdate').attr('data-currentPackageId',result.currentPackageId);
                                $('#selectTeacherEnrolUpdate').attr({'data-duration': result.duration, 'data-center': result.center});
                                if(isossia && isossia == 'true'){
                                    $('#currentPackageDurationOssiaEnrolUpdate').html( (result.currentPackageduration != null && result.currentPackageduration != undefined ? result.currentPackageduration : '0') +' mins');
                                    $('#currentPackageMonthlyFeeOssiaEnrolUpdate').html('$' +result.currentPackageMonthlyFee != null && result.currentPackageMonthlyFee !=undefined ? result.currentPackageMonthlyFee : '');
                                    $('#currentPackageGradeOssiaEnrolUpdate').html(result.currentPackagegrade!= null && result.currentPackagegrade !=undefined ? result.currentPackagegrade.replace(";", ", ") :'');
                                    //$('#currentPackageFacilityFeeOssiaEnrolUpdate').html('$' + result.currentPackagefacilityFee != null && result.currentPackagefacilityFee != undefined ? result.currentPackagefacilityFee :'0');
                                    $('.currentOssiaEnrolUpdate').removeClass('slds-hide');
                                   //console.log('result.currentPackagegrade',result.currentPackagegrade);
                                }
                                if('teachers' in result){
                                    var teachersEnrol = '<option>Select Teacher</option>';
                                    $(result.teachers).each(function(index, value){
                                        teachersEnrol += '<option value="'+value.Id+'">'+value.Name+'</option>';
                                    });
                                    $('#selectTeacherEnrolUpdate').append(teachersEnrol);
                                }
                                $('#enrolmentUpdatePopup').removeClass('slds-hide');   
                                var weekDatesList = getWeekDayDates(result.currentWeekDay, 1, 4);
                                if(weekDatesList.length > 0){
                                    var effectiveDateStr = '<option>Select Effective Date</option>';
                                    $(weekDatesList).each(function(index, value){
                                        effectiveDateStr += '<option value="'+value.value+'">'+value.label+'</option>';
                                    });
                                    $('#selectEffectiveDateEnrolUpdate').append(effectiveDateStr);
                                    $('#selectEffectiveDateEnrolOssiaUpdate').append(effectiveDateStr);
                                    $('#selectNewEffectiveDateEnrolUpdate').val('');
                                    $('#selectNewEffectiveDateEnrolUpdate').empty();
                                    $('#selectNewEffectiveDateEnrolUpdate').attr('disabled', 'true');

                                    $('#availableTimeSlotsUpdateEnrolment').val('');
                                    $('#availableTimeSlotsUpdateEnrolment').empty();
                                    $('#availableTimeSlotsUpdateEnrolment').attr('disabled', 'true');
                                }
                            }
                        );
                    }
                    function getPackageByTeacher(){
                         //10-Aug-2020:nishi:start manage ossia Upgrade Subscription model 
                        var isOssia =$('#confirmModalYes').attr('data-isOssia');
                        if(isOssia ==='true'){
                                $('#enrolmentOssiaUpdatePopupHeader').html('UpdateEnrolment');
                                getOssiaChangeEnrolmentPackageByTeacher();
                        }else{
                            ////10-Aug-2020:nishi:start manage ossia Upgrade Subscription model 
                            $('#selectPackageEnrolUpdate').empty();
                            $('#selectPackageEnrolUpdate').attr('disabled', 'true');
                            var teacherId = $('#selectTeacherEnrolUpdate').val();
                            var duration = $('#selectTeacherEnrolUpdate').attr('data-duration');
                            var centerId = $('#selectTeacherEnrolUpdate').attr('data-center');
                            if(teacherId != 'Select Teacher' && centerId && duration){
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.AureusCalendarController.getPackageAccordingToTeacher}',
                                    centerId, teacherId, duration,   
                                    function(result, event){
                                        var packageEnrol = '<option value="Select Package">Select an Option</option>';
                                        $(result).each(function(index, value){
                                            packageEnrol += '<option value="'+value.Id+'">'+value.Name+'</option>';
                                        });
                                        $('#selectPackageEnrolUpdate').append(packageEnrol);
                                        $('#selectPackageEnrolUpdate').removeAttr('disabled');
                                    
                                    }
                                );
                            }
                        }
                    }
                    //9-nov-2019 : @@jatin  :for Change Enrollement Effective dates
                    function createNewEffectiveDates(){
                        var effectiveDate = $('#selectEffectiveDateEnrolUpdate').val();
                        var teacherId = $('#selectTeacherEnrolUpdate').val();
                        var centerId = $('#selectTeacherEnrolUpdate').attr('data-center');
                        $('#selectNewEffectiveDateEnrolUpdate').removeAttr('disabled'); 
                        $('#selectNewEffectiveDateEnrolUpdate').empty();
                        //9-Dec-2019 : @@jatin  :for Change Enrollement Enhancement This button should be accessible to only a limited users
                        var selectDate = '<option value="">Select Effective Date</option>';
                        if($('#confirmModalYes').attr('data-updateEnrolmentAdmin') === 'false'){
                            if(effectiveDate && teacherId && effectiveDate != 'Select Effective Date' && teacherId != 'Select Teacher'){
                                
                                if(teacherId != 'Select Teacher' && centerId){
                                    getNewEffectiveDate(effectiveDate,centerId,teacherId,'changeEnrolment'); 
                                }
                            }else{
                                $('#selectNewEffectiveDateEnrolUpdate').attr('disabled', 'true'); 
                                $('#selectNewEffectiveDateEnrolUpdate').append(selectDate);
                            }
                        } 
                        //9-Dec-2019 : @@jatin  :for Change Enrollement Enhancement This button should be accessible to only a limited users
                        if($('#confirmModalYes').attr('data-updateEnrolmentAdmin') === 'true'){
                            if(effectiveDate && effectiveDate != 'Select Effective Date'){
                                var newEffectiveDayList = [];
                                var weekdays = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];
                                newEffectiveDayList = getNewEffectiveDaysWeekdays(effectiveDate,weekdays);
                                $(newEffectiveDayList).each(function(inex, value){
                                    selectDate += '<option value="'+value.value+'">'+value.label+'</option>';
                                });
                                //console.log('selectDate'+selectDate);
                                $('#selectNewEffectiveDateEnrolUpdate').append(selectDate);
                            }else{
                                $('#selectNewEffectiveDateEnrolUpdate').attr('disabled', 'true'); 
                                $('#selectNewEffectiveDateEnrolUpdate').append(selectDate);
                            }
                        }
                    }
                     //start:added by nishi: 30-Jul-2020: for change Resouce current enrolment
                     function selectchangeNewResources(){
                        var changeNewResources = $('#changeNewResources').val();
                        if((changeNewResources && changeNewResources != '' && changeNewResources != undefined && changeNewResources != null)){
                            $('#updateResource').css('pointer-events','');
                        }
                     }

                    function updateNewResource(){
                        var changeNewResources = $('#changeNewResources').val();
                       //console.log('bookingReschedule',bookingReschedule);
                        if((changeNewResources && changeNewResources != '' && changeNewResources != undefined && changeNewResources != null)){
                            $('#confirmModalYes').addClass('slds-hide');
                            $('#confirmModalNo').html('Cancel');
                            $('#confirmModalNo').attr('data-origin', 'rescheduleResource');
                            $('#confirmHeader').html('Recurring event');
                            $('#confirmHeader').parent().addClass('slds-text-align_left');
                            $('#confirmBody').addClass('slds-text-align_center');
                            var confirmBoby ='<p>Would you like to apply this change to this event only,<br/>or the current and future events in the series?</p>';
                            confirmBoby +='<div><button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisReschedule" onclick="rescheduleThisOnly();return false;">This only</button>';
                            confirmBoby +='<button class="slds-button slds-m-around_small slds-p-horizontal_large" style="background: #00b3f0;color:#fff;" id="thisAndFutureReschedule" onclick="rescheduleFutureAlso();return false;">This and future</button>';
                            confirmBoby +='</div>';
                            $('#confirmBody').html(confirmBoby);
                            $('#confirmModal').removeClass('slds-hide');
                            $('.changeLesson').addClass('slds-hide');
                            $('#showResources').addClass('slds-hide');
                            $('#showChangeLesson').removeClass('slds-hide');
                            $('#LessonModalNo').html('cancel');
                            $('#updateOnlineLesson').removeClass('slds-hide');
                            $('#updateResource').addClass('slds-hide');
                            $('#ResourceTypeName').html(changeNewResources.split('-')[1]);
                            $('#changeLessonResource').addClass('slds-hide');
                            $('#changeNewResourcesError').html('');
                            $('#updateResource').css('pointer-events','');
                            bookingReschedule.Id = $('#ResourceTypeName').attr('data-bookingId');
                            bookingReschedule.Type = $('#ResourceTypeName').attr('data-Type');
                            bookingReschedule.resource = changeNewResources.split('-')[0]//$('#ResourceTypeName').attr('data-teacherId');
                            bookingReschedule.date = $('#ResourceTypeName').attr('data-date');
                            bookingReschedule.Individual = $('#ResourceTypeName').attr('data-Individual');
                            bookingReschedule.isRecurrence = $('#ResourceTypeName').attr('data-isRecurrence');
                            bookingReschedule.enrolmentId = $('#ResourceTypeName').attr('data-enrolment');
                             //bookingReschedule.resourceId = changeNewResources.split('-')[0];
                             bookingReschedule.isChangeResource = 'true';
                        }else{
                            $('#changeNewResourcesError').html('Select any one Studio...');
                            $('#updateResource').css('pointer-events','none');
                        }
                    }
                     //end:added by nishi: 30-Jul-2020: for change Resouce current enrolment
                    function getNewEffectiveDate(effectiveDate,centerId,teacherId,grade){
                        var weekdays = [];
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getNewEffectiveDateSlots}',
                            centerId, teacherId,
                            function(result, event){
                                //console.log('result',result);
                                for (i = 0; i < result.length; i++) {
                                    weekdays.push(result[i]);
                                }
                                //console.log('weekdays',weekdays);
                                var newEffectiveDayList = [];
                                if(weekdays.length > 0 ){
                                    newEffectiveDayList = getNewEffectiveDaysWeekdays(effectiveDate,weekdays);
                                }
                                var selectDate = '<option value="">Select Effective Date</option>';
                                //console.log('newEffectiveDayList'+newEffectiveDayList);
                                $(newEffectiveDayList).each(function(inex, value){
                                    selectDate += '<option value="'+value.value+'">'+value.label+'</option>';
                                });
                                //console.log('selectDate'+selectDate);
                                
                                if(grade == 'changeEnrolment'){
                                    $('#selectNewEffectiveDateEnrolUpdate').append(selectDate);
                                }else if(grade == 'GroupToIndividual'){
                                    $('#selectNewEffectiveDateEnrolGroupUpdate').append(selectDate);
                                }
                            }
                        );
                    }
                    //jatin: 3-jan-2020 for return dates accroging to weekdays 
                    //createNewEffectiveGroupDates ,createNewEffectiveDates both function call this 
                    function getNewEffectiveDaysWeekdays(effectiveDate,weekdays){
                        var geteffectiveDay = effectiveDate.split('/')[1];
                        var startedDate = new moment();
                        var newEffectiveDayList = [];
                        if(geteffectiveDay >= 1 &&  geteffectiveDay <= 7){
                            startedDate = new moment(effectiveDate.split('/')[0]+'/1/'+effectiveDate.split('/')[2]);
                            newEffectiveDayList = getnewEffectiveDayListAccordingToWeekdays(startedDate,weekdays);
                        }
                        else if(geteffectiveDay >= 8 &&  geteffectiveDay <= 14){
                            startedDate = new moment(effectiveDate.split('/')[0]+'/8/'+effectiveDate.split('/')[2]);
                            newEffectiveDayList = getnewEffectiveDayListAccordingToWeekdays(startedDate,weekdays);
                        }
                        else if(geteffectiveDay >= 15 &&  geteffectiveDay <= 21){
                            startedDate = new moment(effectiveDate.split('/')[0]+'/15/'+effectiveDate.split('/')[2]);
                            newEffectiveDayList = getnewEffectiveDayListAccordingToWeekdays(startedDate,weekdays);
                        }
                        else if(geteffectiveDay >= 22 &&  geteffectiveDay <= 28){
                            startedDate = new moment(effectiveDate.split('/')[0]+'/22/'+effectiveDate.split('/')[2]);
                            newEffectiveDayList = getnewEffectiveDayListAccordingToWeekdays(startedDate,weekdays);
                        }
                        return newEffectiveDayList;
                    }

                    //19-Nov-2019 : @@jatin  :for Change Enrollement newEffectiveDay List According To Weekdays
                    function getnewEffectiveDayListAccordingToWeekdays(startedDate,weekdays){
                        var newEffectiveDayObj = {};
                        var newEffectiveDayList = [];
                        var todayDate = new moment();
                        for(var startday =1; startday <= 7; startday++){
                            if(weekdays.includes(startedDate.format('ddd'))){
                                if(moment(startedDate.format('YYYY-MM-DD')).isSameOrAfter(todayDate.format('YYYY-MM-DD'))){
                                    newEffectiveDayObj = {};
                                    newEffectiveDayObj.value = startedDate.format('MM/DD/YYYY');
                                    newEffectiveDayObj.label = startedDate.format('ddd, MMM DD YYYY');
                                    newEffectiveDayList.push(newEffectiveDayObj);
                                   ////console.log('newEffectiveDayObj',newEffectiveDayObj);
                                }
                            }
                            startedDate.add(1, 'days');
                        }
                        return newEffectiveDayList;
                    } 
                    //19-Nov-2019 : @@jatin  :for Change Enrollement newEffectiveDay List 
                    function getnewEffectiveDayList(startedDate){
                        var newEffectiveDayObj = {};
                        var newEffectiveDayList = [];
                        var todayDate = new moment();
                        for(var startday =1; startday <= 7; startday++){
                            if(moment(startedDate.format('YYYY-MM-DD')).isSameOrAfter(todayDate.format('YYYY-MM-DD'))){
                                newEffectiveDayObj = {};
                                newEffectiveDayObj.value = startedDate.format('MM/DD/YYYY');
                                newEffectiveDayObj.label = startedDate.format('ddd, MMM DD YYYY');
                                newEffectiveDayList.push(newEffectiveDayObj);
                                ////console.log('newEffectiveDayObj',newEffectiveDayObj);
                            }
                            startedDate.add(1, 'days');
                        }
                        return newEffectiveDayList;
                    } 
                    
                    function getWeekDayDates(weekDay, noOfMonths,dateLimit){
                        var weekDayList = [];
                        var weekDateObj = {};
                        var momentDateAfterMonths = new moment();
                        var momentDate = new moment();
                        var isdateLimit =dateLimit > 0 ?true : false;
                        if(momentDate.format('ddd') != weekDay){
                            while(momentDate.format('ddd') != weekDay){
                                momentDate.add(1, 'days');
                                momentDateAfterMonths.add(1, 'days');
                                
                            }
                        }
                       //console.log('momentDateAfterMonths'+momentDateAfterMonths);
                       //console.log('momentDate'+momentDate);
                        momentDateAfterMonths.add(noOfMonths, 'M');
                        while(momentDate <= momentDateAfterMonths){
                            weekDateObj = {};
                            weekDateObj.value = momentDate.format('MM/DD/YYYY');
                            weekDateObj.label = momentDate.format('ddd, MMM DD YYYY');
                            var  convertDate = momentDate.toDate();
                            if(convertDate.getDate() < 29){
                                if(!isdateLimit)
                                    weekDayList.push(weekDateObj);
                                else if(weekDayList.length < dateLimit)
                                    weekDayList.push(weekDateObj);
                            }
                            momentDate.add(7, 'days');
                            
                        }
                        return weekDayList;
                    }
                    
                    //9-Dec-2019 : @@jatin  :for submit ChangeEnrollemnt Package Request
                   function  submitChangeEnrollemntPackageRequest(){
                        var enrolmentId, newPackage, newTeacher, newTime, newDate,oldTeacher,oldPackage, oldTime, newPackageName, oldPackageName;
                        enrolmentId = $('#updateEnrolmentBtn').attr('data-enrol');
                        newPackage = $('#selectPackageEnrolUpdate').val();
                         //20-Aug-2020:nishi:start manage ossia change enrolment get package id 
                         var isOssia =$('#confirmModalYes').attr('data-isOssia');
                        if(isOssia =='true'){
                           //console.log('isOssia',isOssia);
                            newPackage = newPackage.split('-')[0];
                        }
                            //20-Aug-2020:nishi:start manage ossia change enrolment get package id
                        newTeacher = $('#selectTeacherEnrolUpdate').val();
                        currentEffectiveDate = $('#selectEffectiveDateEnrolUpdate').val();
                        newEffectiveDate = $('#selectNewEffectiveDateEnrolUpdate').val();
                        newTime = $('#availableTimeSlotsUpdateEnrolment').val();
                        oldTeacher = $('#currentTeacherEnrolUpdate').data('currentteacherid');
                        oldPackage = $('#currentPackageEnrolUpdate').data('currentpackageid');
                        oldTime = $('#currentDateTimeEnrolUpdate').text();
                        newPackageName = $('#selectPackageEnrolUpdate option:selected').text();
                        oldPackageName = $('#currentPackageEnrolUpdate').text();
                        //$('#confirmChangeEnrolment').addClass('slds-hide');
                        $('#confirmChangeEnrolment').css('pointer-events','none');
                        $('#confirmChangeEnrolment').attr('disabled','true');
                        $('#confirmModalYes').attr({'data-origin': 'change', 'data-enrol': enrolmentId, 'data-teacher':newTeacher, 
                                                        'data-package': newPackage, 'data-newEffectiveDate': newEffectiveDate,
                                                        'data-currentEffectiveDate': currentEffectiveDate, 'data-time': newTime,
                                                        'data-oldteacher': oldTeacher,'data-oldPackage':oldPackage, 'data-oldTime': oldTime, 'data-oldPackageName': oldPackageName, 
                                                        'data-newPackageName': newPackageName});
                            $('#confirmModalYes').trigger('click');
                    }
                    //9-Dec-2019 : @@jatin  :for get Change Enrollment   Package Summary
                    function updateEnrolmentClick(){
                        $('#teacherSelectErrorMsg').html('');
                        $('#packageSelectErrorMsg').html('');
                        $('#effectiveDateErrorMsg').html('');
                        $('#timeSlotErrorMsg').html('');
                        $('.invoiceTopupItem').addClass('slds-hide');
                        $('#nextInvoiceItem').addClass('slds-hide');
                        $('#upgradeBookingclass').addClass('slds-hide');
                        $('#upgradeDowngradeSummaryHeader').html('');
                        $('#confirmUpgradeEnrolment').addClass('slds-hide');
                        $('#confirmDowngradeEnrolment').addClass('slds-hide');
                        var errorFlag = false;
                        var enrolmentId, newPackage, newTeacher, newTime, newDate,oldTeacher,oldPackage, oldTime, newPackageName, oldPackageName;
                        enrolmentId = $('#updateEnrolmentBtn').attr('data-enrol');
                        newPackage = $('#selectPackageEnrolUpdate').val();
                        newTeacher = $('#selectTeacherEnrolUpdate').val();
                        currentEffectiveDate = $('#selectEffectiveDateEnrolUpdate').val();
                        newEffectiveDate = $('#selectNewEffectiveDateEnrolUpdate').val();
                        newTime = $('#availableTimeSlotsUpdateEnrolment').val();
                        oldTeacher = $('#currentTeacherEnrolUpdate').data('currentteacherid');
                        oldPackage = $('#currentPackageEnrolUpdate').data('currentpackageid');
                        oldTime=$('#currentDateTimeEnrolUpdate').text().split('@')[1];
                        //console.log('@@@@newPackage'+newPackage);
                        newPackageName = $('#selectPackageEnrolUpdate option:selected').text();
                        //console.log('@@@@newPackageName'+newPackageName);
                        oldPackageName = $('#currentPackageEnrolUpdate').text();
                        if(!newPackage || newPackage == 'Select Package'){
                            $('#packageSelectErrorMsg').html('Please Select the Package...');
                            errorFlag = true;           
                        }
                        if(!newTeacher || newTeacher == 'Select Teacher'){
                            $('#teacherSelectErrorMsg').html('Please Select the Teacher...');
                            errorFlag = true;
                        }
                        if(!currentEffectiveDate || currentEffectiveDate == 'Select Effective Date'){
                            $('#effectiveDateErrorMsg').html('Please Select Date...');
                            errorFlag = true;
                        }   
                        if(!newEffectiveDate || newEffectiveDate == 'Select Effective Date'){
                            $('#newEffectiveDateErrorMsg').html('Please Select Date...');
                            errorFlag = true;
                        } 
                        if(!newTime || newTime == 'Select Time Slot'){
                            $('#timeSlotErrorMsg').html('Please Select Time Slot...');
                            errorFlag = true;
                        }
                        if(enrolmentId && (newPackage && newPackage != 'Select Package') 
                            && (newTeacher && newTeacher != 'Select Teacher') 
                            && (currentEffectiveDate && currentEffectiveDate != 'Select Effective Date') 
                            && (newEffectiveDate && newEffectiveDate != 'Select Effective Date')
                            && (newTime && newTime != 'Select Time Slot') && !errorFlag){
                            $('#updateEnrolmentonClick').removeAttr('disabled');
                            
                            // @@added by jatin:20-dec-2019: for manage Upgrade To Individual Enrolor change enrollemt 
                            $('#updateEnrolmentonClickNo').removeClass('slds-hide');
                            $('#UpgradeToIndividualEnrolNo').addClass('slds-hide');
                            
                            $('#confirmUpgradeToIndividualEnrol').addClass('slds-hide');
                            $('#confirmChangeEnrolment').removeClass('slds-hide');

                            $('#enrolmentUpdatePopup').addClass('slds-hide');
                              //20-Aug-2020:nishi:start manage ossia change enrolment get package id 
                                var isOssia =$('#confirmModalYes').attr('data-isOssia');
                                if(isOssia =='true'){
                                   //console.log('isOssia',isOssia);
                                    newPackage = newPackage.split('-')[0];
                                }
                                    //20-Aug-2020:nishi:start manage ossia change enrolment get package id
                            /*$('#confirmModalYes').attr({'data-origin': 'change', 'data-enrol': enrolmentId, 'data-teacher':newTeacher, 
                                                        'data-package': newPackage, 'data-newEffectiveDate': newEffectiveDate,
                                                        'data-currentEffectiveDate': currentEffectiveDate, 'data-time': newTime,
                                                        'data-oldteacher': oldTeacher,'data-oldPackage':oldPackage, 'data-oldTime': oldTime, 'data-oldPackageName': oldPackageName, 
                                                        'data-newPackageName': newPackageName});
                            $('#confirmModalYes').trigger('click');*/
                            getEntrollmentPackageSummary('change enrollment',enrolmentId,newTeacher,oldTeacher,newPackage,oldPackage,
                                                        newEffectiveDate,currentEffectiveDate,newTime,oldTime);
                        }
                    }

                    // //19-Nov-2019 : @@jatin  :for submit ChangeEnrollemnt Package Request
                    function getEntrollmentPackageSummary(grade,enrolmentId,newTeacher,oldTeacher,newPackage,oldPackage,
                                                        newEffectiveDate,currentEffectiveDate,newTime,oldTime){
                    var newEffectiveDateObj = moment();
                        if(newEffectiveDate){
                            newEffectiveDateObj.year(newEffectiveDate.split('/')[2]).month(newEffectiveDate.split('/')[0] - 1).date(newEffectiveDate.split('/')[1]);
                        }
                        var currentEffectiveDateObj = moment();
                        if(currentEffectiveDate){
                            currentEffectiveDateObj.year(currentEffectiveDate.split('/')[2]).month(currentEffectiveDate.split('/')[0] - 1).date(currentEffectiveDate.split('/')[1]);
                        }
                        //console.log('@@newPackage'+newPackage);
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getChangeEnrollmentPackageSummary}',
                            grade,enrolmentId,newTeacher,oldTeacher,newPackage,oldPackage,newEffectiveDateObj.format('YYYY-MM-DD'), 
                            currentEffectiveDateObj.format('YYYY-MM-DD'),newTime,oldTime.trim(),
                            function(result, event){
                               ////console.log('result',result);
                                if(result){
                                    if(grade == 'change enrollment'){
                                        if($('#confirmModalYes').attr('data-updateEnrolmentAdmin') == 'true'){
                                            $('#ChangeEnrollmentSummaryHeader').html('Change Enrolment Admin Summary');
                                        }else{
                                            $('#ChangeEnrollmentSummaryHeader').html('Change Enrolment Summary');
                                        }//$('#confirmChangeEnrolment').removeClass('slds-hide');
                                        $('#confirmChangeEnrolment').css('pointer-events', 'auto');
                                        $('#confirmChangeEnrolment').removeAttr('disabled');
                                    }else if(grade == 'UpgradeToIndividual'){
                                        $('#ChangeEnrollmentSummaryHeader').html('Upgrade to Individual Class Summary');
                                        $('#confirmChangeEnrolment').css('pointer-events', 'auto');
                                        $('#confirmChangeEnrolment').removeAttr('disabled');
                                    }
                                    //$('#gradeSubscriptionPopup').addClass('slds-hide');
                                    if('newTeacherName' in result){
                                        $('#ChangeEnrollmentNewTeacherName').html(result.newTeacherName);
                                    }
                                    if('oldTeacherName' in result){
                                        $('#ChangeEnrollmentOldTeacherName').html(result.oldTeacherName);
                                    }
                                    if('oldPackageName' in result){
                                        $('#ChangeEnrollmentOldPackageNameSummary').html(result.oldPackageName);
                                    } 

                                   //console.log('@@newPackage'+result.newPackageName);
                                    if('newPackageName' in result){
                                        $('#ChangeEnrollmentNewPackageNameSummary').html(result.newPackageName);
                                    }
                                    if('oldPackageName' in result){
                                        $('#ChangeEnrollmentOldPackageNameSummary').html(result.oldPackageName);
                                    } 
                                    /*if('currentUnitFee' in result){
                                        if(result.currentUnitFee  || result.currentUnitFee == 0){
                                            $('#ChangeEnrollmentCurrentDepositSummary').html('$'+result.currentUnitFee.toFixed(2));
                                        }
                                        
                                    }
                                    if('newUnitFee' in result){
                                        if(result.newUnitFee){
                                            $('#ChangeEnrollmentNewPackageDepositSummmary').html('$'+result.newUnitFee.toFixed(2));
                                        }
                                    }*/
                                    if('currentDayAndTime' in result){
                                        $('#ChangeEnrollmentPreviousLessonDTSummary').html(result.currentDayAndTime);
                                    }
                                    
                                    if('newDayAndTime' in result){
                                        $('#ChangeEnrollmentNewLessonDTSummary').html(result.newDayAndTime);
                                    }
                                    
                                    if('currentEffectiveDate' in result){
                                        $('#ChangeEnrollmentInvoiceEffectiveDate').html(result.currentEffectiveDate);
                                    }
                                    
                                    if('effectiveDate' in result){
                                        $('#ChangeEnrollmentNewEffectiveDate').html(result.effectiveDate);
                                    }
                                    // @jatin: 13-Dec-2019 : for get pervious details according to enrolement
                                    if('studentName' in result){
                                        $('#ChangeEnrollmentStudentName').html(result.studentName);
                                    } 
                                    if('parentName' in result){
                                        $('#ChangeEnrollmentParentName').html(result.parentName);
                                    } 
                                    $('#ChangeEnrollmentSummaryModal').removeClass('slds-hide');
                                }
                            }
                        );
                    }
                    function cancelBusyBooking(flag){
                        $('#confirmModal').addClass('slds-hide');
                        $('#confirmModalYes').removeClass('slds-hide');
                        $('#busyBookingViewModal').addClass('slds-hide');
                        $('#cancelBooking').trigger( "click" );
                        $('#confirmModalYes').attr('data-future', flag);
                        $('#confirmModalNo').attr('data-future', flag);
                    }
                    
                    function showPrePaymentModal(){
                        var enrolId = $('#prePaymentId').attr('data-enrol');
                        $('#prePaymentEffectiveDate').html('');
                        $('#prePaymentPackages').val('');
                        $('#advanceOptionPopup').addClass('slds-hide');
                        
                        $('#prePaymentPackages').empty();
                        if(enrolId ){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getPrePaymentPackage}',
                                enrolId,    
                                function(result, event){
                                    var selectBody = '<option value="">Select Package</option>';
                                    for(var index in result){
                                        if(index != 'nextBillDate'){
                                            selectBody += '<option value="'+index+'">'+result[index]+'</option>';
                                        }else if(index == 'nextBillDate'){
                                            $('#prePaymentEffectiveDate').html(result[index]);
                                        }
                                        
                                    }
                                    $('#prePaymentPackages').append(selectBody);
                                    $('#prePaymentPopup').removeClass('slds-hide');
                                }
                            );
                        }
                        
                    }
                    function prePaymentFunc(){
                        $('#prePaymentPopup').addClass('slds-hide');
                        if($('#prePaymentId').attr('data-enrol')){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.updateEnrolmentLink}',
                                $('#prePaymentId').attr('data-enrol'), 
                                function(result, event){
                                    window.open("{!$Label.Aureus_Site}/apex/PrePaymentSummaryPage?enrolId="+$('#prePaymentId').attr('data-enrol')+"&packageId="+$('#prePaymentPackages').val(), '_blank');
                                }
                            );
                        }
                    }
                    
                    function editBusyBooking(){
                        $('.recurrence').addClass('slds-hide');
                        $('#centerNameBusyCreate').text($('#editBusyBookingView').attr('data-centre'));
                        $('#timeSlotBusyCreate').text($('#editBusyBookingView').attr('data-time'));
                        var source = $('#editBusyBookingView').attr('data-origin');
                        if(source  == 'teacher'){
                            $('#staffResourceBusyCreate').html('Staff');
                            
                        }else{
                            $('#staffResourceBusyCreate').html('Resource');
                        }
                        $('#staffBusyCreate').text($('#editBusyBookingView').attr('data-teacher'));
                        
                        $('#durationSelectBusyCreate').empty();
                        
                        var timeMoment = moment().millisecond(0).second(0).minute(0).hour(1);
                        var selectDuration = '';
                        var count = 60;
                        selectDuration += '<option value="15">00:15</option>';
                        selectDuration += '<option value="30">00:30</option>';
                        selectDuration += '<option value="45">00:45</option>';
                        while(count <= 600){
                            selectDuration += '<option value="'+count+'">'+timeMoment.format('hh:mm')+'</option>';
                            count += 15;
                            timeMoment.add(15, 'm');
                        }
                        
                        
                        $('#durationSelectBusyCreate').append(selectDuration);
                        $('#durationSelectBusyCreate').val($('#editBusyBookingView').attr('data-duration'));
                        var bookingStatus = $('#cancelBooking').attr('data-bookingtype');
                        if(bookingStatus =='Group Lesson'){
                            $('#durationSelectBusyCreate').attr('disabled','true');
                        }
                        
                        $('#categorySelectBusyCreate').empty();
                        var categoryStr  = '';
                        if(source == 'teacher'){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                                'Booking__c', 'Category__c', 
                                function(result, event){
                                    if(result){
                                        $(result).each(function(index, value){
                                            categoryStr += '<option value="'+value+'">'+value+'</option>'
                                        });
                                        $('#busyBookingViewModal').addClass('slds-hide');
                                        $('#categorySelectBusyCreate').append(categoryStr);
                                        $('#busyBookingCreateModal').removeClass('slds-hide');
                                        $('#categorySelectBusyCreate').val($('#editBusyBookingView').attr('data-category'));
                                    }
                                }, 
                                {escape: true}
                            );
                        }else if(source == 'resource'){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                                'Booking__c', 'Resource_Category__c', 
                                function(result, event){
                                    if(result){
                                        $(result).each(function(index, value){
                                            categoryStr += '<option value="'+value+'">'+value+'</option>';
                                        });
                                        $('#categorySelectBusyCreate').append(categoryStr);
                                        $('#busyBookingViewModal').addClass('slds-hide');
                                        $('#busyBookingCreateModal').removeClass('slds-hide');
                                        $('#categorySelectBusyCreate').val($('#editBusyBookingView').attr('data-category'));
                                    }
                                }, 
                                {escape: true}
                            );
                        }
                        
                        $('#descriptionBusyCreate').val($('#editBusyBookingView').attr('data-discription'));
                        $('#saveBusyBookingCreate').attr('data-id', $('#editBusyBookingView').attr('data-id'));
                    }
                    
                    function validateBusyBookingCreation(duration, startTime){
                        var maxTime = moment('{!$Label.Centre_Close_Time}', 'LT');
                        var startTime;
                        if(startTime){
                            startTime = moment(startTime.split('T')[1], 'HH:mm:ss');
                        }
                        
                        startTime.add(duration, 'm');
                        if(maxTime < startTime){
                            $('#durationSelectBusyCreateError').removeClass('slds-hide');
                            throw new Error("Something went badly wrong!");
                        }
                        
                    }       
                    function makupAvailablegroupFunc(){
                        if($('#onmakupAvailablegroup').prop('checked')){
                            $('#recurringgroupSection').removeClass('slds-hide');
                        }else{
                            $('#recurringgroupSection').addClass('slds-hide');
                        }
                    }
                                    
                    /*Method to create Class from Calendar UI.*/
                    function openAddClass(){
                        $('#newBookingModal').addClass('slds-hide');
                        $('#ClassPackageSelect').val('');
                        $('#ClassTypeSelect').val('');
                        $('#ClassTypeSelect').empty();
                        $('#ClassMinimumAgeInput').val('1');
                        $('#ClassMaximumAgeInput').val('1');
                        $('#ClassCapacityInput').val('0');
                        // jatin: 7-jan-2020 : show tooltip 
                        $("#ClassPackageSelect").attr('title',  '');
                        $('#ClassDurationLabel').html('');
                        $('#ClassPriceLabel').html('');
                        $('#ClassInstrumentLabel').html('');

                        $('#ClassPackageSelectError').addClass('slds-hide');
                        $('#ClassTypeSelectError').addClass('slds-hide');
                        $('#ClassMinimumAgeInputError').addClass('slds-hide');
                        $('#ClassMaximumAgeInputError').addClass('slds-hide');
                        $('#ClassCapacityInputError').addClass('slds-hide');

                        $('#ClassGradeSelectError').addClass('slds-hide');
                        $('#ClassDurationSelectError').addClass('slds-hide');
                        $('.ossiaAddGroupClass').addClass('slds-hide');
                        $('.aureusAddGroupClass').addClass('slds-hide');

                        $('#recurrencegroupOccure').empty();
                        $('#onSelectedgroupDate').val('');
                        $('#aftergroupRadio').prop('checked', true);
                        $('#repeatgroupSelect').val('None');
                        $('#aftergroupRadio').prop('checked');
                        $('#recurringgroupSection').addClass('slds-hide');
                        var centerId = $('#addClass').attr('data-centerid');
                        var centerName = $('.centerList option:selected').text();
                        var teacherId =  $('#addClass').attr('data-teacherid');
                        var teacherName;
                        var time = $('#addClass').attr('data-date');
                        $('#saveNewClass').attr({'data-date': $('#addClass').attr('data-date'), 'data-teacher': teacherId, 'data-centre': centerId});
                        if(teacherId){
                            $('.teachers option').each(function(index, value){
                                if(value.value == teacherId){
                                    teacherName = $(this).text();
                                }
                            });
                        }
                        
                        $('#LocationNameClass').html(centerName);
                        $('#TeacherNameClass').html(teacherName);
                        $('#saveNewClass').html('Add New Class');
                        $('#ClassTimeLabel').html(convertDateToMoment(time.split('T')[0]) + ' '+ convertTimeToMoment(time.split('T')[1].split(':')[0], time.split('T')[1].split(':')[1]));
                        var isOssia = false;
                        if(centerId){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.fetchGroupPackages}',
                                centerId, teacherId,
                                function(GroupPackagesresult, event){
                                    if(GroupPackagesresult){
                                        $('#ClassPackageSelect').empty();
                                        var packages = GroupPackagesresult;
                                        console.log('result',GroupPackagesresult);
                                        var packagesSelect = '<option value="">Select Package</option>';
                                        $(packages).each(function(index, value){
                                            console.log('packages.value',value);
                                            isOssia = value.isOssia;
                                            if(value.isOssia == false){
                                                packagesSelect += '<option value="'+value.id+':'+value.duration+':'+value.studentCapacity+':'+value.price+':'+value.instrument+'">'+value.name+'</option>';
                                            }
                                        });
                                        $('#saveNewClass').attr('data-isOssia',isOssia);
                                        $('#newGroupClassModal').removeClass('slds-hide');
                                        if(isOssia == false){
                                            $('#ClassPackageSelect').append(packagesSelect);
                                            $('.ossiaAddGroupClass').addClass('slds-hide');
                                            $('.aureusAddGroupClass').removeClass('slds-hide');
                                        }
                                        console.log('isOssia',isOssia);
                                        // start: nishi: 1-sep-2020:if create group class in ossia org then we showing grade other wise we show package list
                                        if(isOssia == true){
                                            $('#ClassGradeSelect').empty();
                                            $('#ClassGradeSelect').val('');
                                            var gradeStr ='';//'<option value="">Select Grade</option>'
                                            Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                                                'Class__c', 'Grade__c', 
                                                function(Graderesult, event){
                                                    if(Graderesult){
                                                        $(Graderesult).each(function(index, value){
                                                            gradeStr += '<option value="'+value+'">'+value+'</option>'
                                                        });
                                                        $('#ClassGradeSelect').append(gradeStr);
                                                        $('.ossiaAddGroupClass').removeClass('slds-hide');
                                                        $('.aureusAddGroupClass').addClass('slds-hide');
                                                        $('#saveNewClass').html('Next');
                                                    }
                                                }, 
                                                {escape: true}
                                            ); 
                                            $('#ClassDurationSelect').empty();
                                            $('#ClassDurationSelect').val('');
                                            var durationStr ='<option value="">Select Duration</option>'
                                            Visualforce.remoting.Manager.invokeAction(
                                                '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                                                'Package__c', 'Duration__c', 
                                                function(durationResult, event){
                                                    if(durationResult){
                                                        $(durationResult).each(function(index, value){
                                                            if(value !='Trial' &&  parseInt(value) > 15 && parseInt(value) < 75){
                                                                durationStr += '<option value="'+value+'">'+value+'</option>';
                                                            }
                                                        });
                                                        $('#ClassDurationSelect').append(durationStr);
                                                    }
                                                }, 
                                                {escape: true}
                                            ); 
                                        }
                                        // end: if create group class in ossia org then we showing grade other wise we show package list
                                        var categoryStr ='<option value="">Select Class Type</option>'
                                        Visualforce.remoting.Manager.invokeAction(
                                            '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                                            'Class__c', 'Class_Type__c', 
                                            function(classTyperesult, event){
                                                if(classTyperesult){
                                                    $(classTyperesult).each(function(index, classTypevalue){
                                                        // if  create group class in ossia org then we showing 'Group instrument lesson' or 'Group Theory lesson' 
                                                        if(isOssia == true && (classTypevalue =='Group Instrumental Lesson' || classTypevalue == 'Group Theory Lesson')){
                                                            categoryStr += '<option value="'+classTypevalue+'">'+classTypevalue+'</option>';
                                                        }else if(isOssia == false && classTypevalue !== 'Group Instrumental Lesson' && classTypevalue !== 'Group Theory Lesson'){
                                                            categoryStr += '<option value="'+classTypevalue+'">'+classTypevalue+'</option>';
                                                        }
                                                    });
                                                    console.log('categoryStr',categoryStr);
                                                    $('#ClassTypeSelect').append(categoryStr);
                                                }
                                            }, 
                                            {escape: true}
                                        );  
                                    
                                    }
                                }
                            );
                        }
                    }    
                    function groupGradeSelect(){
                        var gradeVal = $('#ClassGradeSelect').val();
                        console.log('gradeVal',gradeVal);
                    }
                    function groupPackageSelect(){
                        $('#ClassPackageSelectError').addClass('slds-hide');
                        
                        $('#ClassDurationLabel').html('');
                        $('#ClassCapacityInput').val('');
                        $('#ClassPriceLabel').html('');
                        $('#ClassInstrumentLabel').html('');
                        var packageVal = $('#ClassPackageSelect').val();
                        if(packageVal){
                            $('#ClassDurationLabel').html(packageVal.split(':')[1] + ' Mins');
                            $('#ClassCapacityInput').val(packageVal.split(':')[2]);
                            $('#ClassPriceLabel').html('$'+packageVal.split(':')[3]);
                            $('#ClassInstrumentLabel').html(packageVal.split(':')[4]);
                            // 7-jan:jatin: for show tooltip on package picklist
                            $("#ClassPackageSelect").attr('title',  $("#ClassPackageSelect option:selected").text());
                        }
                        
                    }        
                    
                    function saveNewClassFunc(){
                        var centreId = $('#saveNewClass').attr('data-centre');
                        var teacherId = $('#saveNewClass').attr('data-teacher');
                        var dateTime = moment($('#saveNewClass').attr('data-date'));
                        var classEndDate= moment($('#saveNewClass').attr('data-date'));
                        var packageId = $('#ClassPackageSelect').val();
                        var classType = $('#ClassTypeSelect').val();
                        var minAge = $('#ClassMinimumAgeInput').val();
                        var maxAge = $('#ClassMaximumAgeInput').val();
                        var capacity = $('#ClassCapacityInput').val();
                        var isOssia = $('#saveNewClass').attr('data-isOssia');
                        var grade = $('#ClassGradeSelect').val();
                        var ossiaPackageduration = $('#ClassDurationSelect').val();
                        var error ='false';
                        $('#ClassPackageSelectError').addClass('slds-hide');
                        $('#ClassTypeSelectError').addClass('slds-hide');
                        $('#ClassMinimumAgeInputError').addClass('slds-hide');
                        $('#ClassMaximumAgeInputError').addClass('slds-hide');
                        $('#ClassCapacityInputError').addClass('slds-hide');
                        $('#ClassGradeSelectError').addClass('slds-hide');
                        $('#ClassDurationSelectError').addClass('slds-hide');
                        if(isOssia =='true'){
                            if(!grade || grade == undefined || grade == ''){
                                $('#ClassGradeSelectError').removeClass('slds-hide');
                                error ='true';
                            }
                            if(!ossiaPackageduration || ossiaPackageduration == undefined || ossiaPackageduration == ''){
                                $('#ClassDurationSelectError').removeClass('slds-hide');
                                error ='true';
                            }
                        }else{
                            if(!packageId || packageId == undefined || packageId == ''){
                                $('#ClassPackageSelectError').removeClass('slds-hide');
                                error ='true';
                            }
                        }
                        if(!classType || classType == undefined || classType == ''){
                            $('#ClassTypeSelectError').removeClass('slds-hide');
                            error ='true';
                        
                        }
                        if(!minAge || minAge == undefined || minAge == '' || minAge == 0){
                            $('#ClassMinimumAgeInputError').removeClass('slds-hide');
                            error ='true';
                       }
                        if(!maxAge || maxAge == undefined || maxAge == '' || maxAge == 0){
                            $('#ClassMaximumAgeInputError').html('Please Enter Maximum Age ..');
                            $('#ClassMaximumAgeInputError').removeClass('slds-hide');
                            error ='true';
                          
                        }
                        if(!capacity || capacity == undefined || capacity == '' ||capacity ==0){
                            $('#ClassCapacityInputError').removeClass('slds-hide');
                            error ='true';
                        }
                        if( maxAge != undefined && maxAge != '' && minAge != undefined && minAge != ''
                        && maxAge > 0 && minAge > 0){
                           //console.log('maxAge',maxAge);
                           //console.log('minAge',minAge);
                           //console.log('check',(maxAge < minAge));
                            if(parseInt(maxAge) < parseInt(minAge)){
                                $('#ClassMaximumAgeInputError').html('Maximum Age is Less then to Minimum age');
                                $('#ClassMaximumAgeInputError').removeClass('slds-hide');  
                                error ='true';
                            }
                        }
                       //console.log('@@error'+error);
                        if( error == 'false'){
                            if(isOssia =='true'){
                                showGroupClassGradepackages(centreId,teacherId,grade,ossiaPackageduration);
                            }else{
                                $('#statusOnPage').show();
                                packageId = $('#ClassPackageSelect').val().split(':')[0];
                                var duration = $('#ClassPackageSelect').val().split(':')[1];
                                var isGroupclassEndDate = false;
                                if($('#onmakupAvailablegroup').prop('checked')){
                                    isGroupclassEndDate = true;
                                    var repeatval = $('#repeatgroupSelect').val();
                                    console.log('repeatval',repeatval);
                                    if(repeatval == 'None'){
                                        console.log('classEndDate',classEndDate);
                                    }else{
                                        
                                        if($('#aftergroupRadio').prop('checked')){
                                            var recurringdays = $('#recurrencegroupOccure').val();
                                            classEndDate.add(parseInt(recurringdays), 'weeks');  
                                        }else if($('#ongroupRadio').prop('checked')){
                                            classEndDate = $('#onSelectedgroupDate').val();
                                        }
                                    }
                                    console.log('isGroupclassEndDate',isGroupclassEndDate);
                                    console.log('classEndDate',classEndDate);
                                    console.log('classEndDate',classEndDate.format('YYYY-MM-DD'));
                                }
                                
                             
                                
                                $('#newGroupClassModal').addClass('slds-hide');
                                Visualforce.remoting.Manager.invokeAction(
                                        '{!$RemoteAction.AureusCalendarController.saveNewClass}',
                                        centreId, teacherId, packageId, dateTime.format('YYYY-MM-DD'), 
                                        dateTime.format('HH:mm:ss'), duration, capacity, 
                                        classType,minAge,maxAge,isGroupclassEndDate,classEndDate.format('YYYY-MM-DD'),
                                        function(result, event){
                                            if(result){
                                                $('#statusOnPage').hide();
                                                refreshCalendar();
                                                $('#toastMsg').html('Class Successfully Created..');
                                                $('.toastclass').removeClass('slds-theme_error');
                                                $('.toastclass').addClass('slds-theme_success');
                                                toastLaunch();
                                            }else{
                                                
                                                $('#statusOnPage').hide();
                                                refreshCalendar();
                                                $('#toastMsg').html('Class has not created Sucessfully...');
                                                $('.toastclass').removeClass('slds-theme_success');
                                                $('.toastclass').addClass('slds-theme_error');
                                                toastLaunch();
                                            }
                                            
                                        }
                                    );
                                }
                            }
                        }
                    /*
                        Release Block Method
                    */
                    function releaseBlock(){
                        $('#releaseBookingReasonError').addClass('slds-hide');
                        $('#releaseBookingReason').empty();
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.AureusCalendarController.getPickListValues}',
                            'Enrolment__c', 'Releasing_Block_Reason__c', 
                            function(result, event){
                                if(result){
                                    var reasons = '<option value="">Select Reason</option>';
                                    $(result).each(function(index, value){
                                        reasons += '<option value="'+value+'">'+value+'</option>';
                                    });
                                    $('#releaseBookingReason').append(reasons);
                                    $('#BlockBookingSection').removeClass('slds-hide');
                                    $('#busyBookingViewModal').addClass('slds-hide');
                                    $('.editDetails').addClass('slds-hide');
                                    
                                }
                            }
                        );
                    }
                    
                    function confirmReleaseBooking(){
                        var enrolmentId = $('#releaseBookingConfirm').attr('data-enrolmentid');
                        var bookingId = $('#releaseBookingConfirm').attr('data-bookingId');
                        var reason = $('#releaseBookingReason').val();
                        if(enrolmentId && reason && bookingId){
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.AureusCalendarController.releaseBlockBooking}',
                                enrolmentId, reason, caseId,
                                function(result, event){
                                    if(result){
                                        redirectToCaseRecord(result);
                                        $('#BlockBookingSection').addClass('slds-hide');  
                                        refreshCalendar();
                                    }
                                }
                            );
                        }else if(!reason){
                            $('#releaseBookingReasonError').removeClass('slds-hide');
                        }
                    }
                    </script>
    
</html>
</apex:component>